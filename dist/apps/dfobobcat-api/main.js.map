{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/dfobobcat-api/src/app/app.controller.ts","webpack:///./apps/dfobobcat-api/src/app/app.module.ts","webpack:///./apps/dfobobcat-api/src/app/app.service.ts","webpack:///./apps/dfobobcat-api/src/main.ts","webpack:///./libs/api/admin/src/index.ts","webpack:///./libs/api/admin/src/lib/api-admin.module.ts","webpack:///./libs/api/admin/src/lib/service/admin.service.ts","webpack:///./libs/api/auth/src/index.ts","webpack:///./libs/api/auth/src/lib/auth-callback.decorator.ts","webpack:///./libs/api/auth/src/lib/auth.module.ts","webpack:///./libs/api/auth/src/lib/guard/claimAuthGuard.guard.ts","webpack:///./libs/api/auth/src/lib/guard/logInWithCredentialsGuard.ts","webpack:///./libs/api/auth/src/lib/require-claim.decorator.ts","webpack:///./libs/api/auth/src/lib/resolver/auth.resolver.ts","webpack:///./libs/api/auth/src/lib/service/graphql-local.strategy.ts","webpack:///./libs/api/auth/src/lib/service/guard.service.ts","webpack:///./libs/api/auth/src/lib/service/local.serializer.ts","webpack:///./libs/api/auth/src/lib/util/src/index.ts","webpack:///./libs/api/auth/src/lib/util/src/lib/define-ability-for.ts","webpack:///./libs/api/clocking/src/clocking.module.ts","webpack:///./libs/api/clocking/src/index.ts","webpack:///./libs/api/clocking/src/lib/service/clocking.service.ts","webpack:///./libs/api/clocking/src/lib/service/image.consumer.ts","webpack:///./libs/api/company/src/index.ts","webpack:///./libs/api/company/src/lib/company.module.ts","webpack:///./libs/api/company/src/lib/company.service.ts","webpack:///./libs/api/core/src/index.ts","webpack:///./libs/api/core/src/lib/core.module.ts","webpack:///./libs/api/core/src/lib/entity/src/index.ts","webpack:///./libs/api/core/src/lib/entity/src/lib/activity.entity.ts","webpack:///./libs/api/core/src/lib/entity/src/lib/clockIn.entity.ts","webpack:///./libs/api/core/src/lib/entity/src/lib/clockOff.entity.ts","webpack:///./libs/api/core/src/lib/entity/src/lib/company.entity.ts","webpack:///./libs/api/core/src/lib/entity/src/lib/equipment.entity.ts","webpack:///./libs/api/core/src/lib/entity/src/lib/event-subscriber/user-subscriber.ts","webpack:///./libs/api/core/src/lib/entity/src/lib/job.entity.ts","webpack:///./libs/api/core/src/lib/entity/src/lib/role.entity.ts","webpack:///./libs/api/core/src/lib/entity/src/lib/token.entity.ts","webpack:///./libs/api/core/src/lib/entity/src/lib/user.entity.ts","webpack:///./libs/api/core/src/lib/graphql/graphql.service.ts","webpack:///./libs/api/core/src/lib/logging/logging-config.service.ts","webpack:///./libs/api/core/src/lib/resolver/src/index.ts","webpack:///./libs/api/core/src/lib/resolver/src/lib/admin.resolver.ts","webpack:///./libs/api/core/src/lib/resolver/src/lib/builder.resolver.ts","webpack:///./libs/api/core/src/lib/resolver/src/lib/clocking.resolver.ts","webpack:///./libs/api/core/src/lib/resolver/src/lib/company.resolver.ts","webpack:///./libs/api/core/src/lib/resolver/src/lib/equipment.resolver.ts","webpack:///./libs/api/core/src/lib/resolver/src/lib/job.resolver.ts","webpack:///./libs/api/core/src/lib/resolver/src/lib/report.resolver.ts","webpack:///./libs/api/core/src/lib/resolver/src/lib/settings.resolver.ts","webpack:///./libs/api/core/src/lib/resolver/src/lib/staff.resolver.ts","webpack:///./libs/api/core/src/lib/resolver/src/lib/user.resolver.ts","webpack:///./libs/api/cron/src/index.ts","webpack:///./libs/api/cron/src/lib/cron.service.ts","webpack:///./libs/api/email/src/index.ts","webpack:///./libs/api/email/src/lib/api-email.module.ts","webpack:///./libs/api/email/src/lib/service/email.service.ts","webpack:///./libs/api/email/src/lib/types.ts","webpack:///./libs/api/equipment/src/index.ts","webpack:///./libs/api/equipment/src/lib/equipment.module.ts","webpack:///./libs/api/equipment/src/lib/service/equipment.service.ts","webpack:///./libs/api/job/src/index.ts","webpack:///./libs/api/job/src/job.module.ts","webpack:///./libs/api/job/src/lib/service/builder-job.service.ts","webpack:///./libs/api/job/src/lib/service/job.service.ts","webpack:///./libs/api/job/src/lib/service/staff-job.service.ts","webpack:///./libs/api/queue/src/index.ts","webpack:///./libs/api/queue/src/lib/api-queue.module.ts","webpack:///./libs/api/report/src/index.ts","webpack:///./libs/api/report/src/lib/api-report.module.ts","webpack:///./libs/api/report/src/lib/service/report.service.ts","webpack:///./libs/api/settings/src/index.ts","webpack:///./libs/api/settings/src/lib/api-settings.module.ts","webpack:///./libs/api/settings/src/lib/settings.service.ts","webpack:///./libs/api/shared/src/index.ts","webpack:///./libs/api/shared/src/lib/api-shared.module.ts","webpack:///./libs/api/shared/src/lib/const/src/index.ts","webpack:///./libs/api/shared/src/lib/const/src/lib/claim.ts","webpack:///./libs/api/shared/src/lib/const/src/lib/range.ts","webpack:///./libs/api/shared/src/lib/const/src/lib/role-claim-map.ts","webpack:///./libs/api/shared/src/lib/const/src/lib/role.ts","webpack:///./libs/api/shared/src/lib/exception/src/index.ts","webpack:///./libs/api/shared/src/lib/exception/src/lib/user-error.ts","webpack:///./libs/api/shared/src/lib/service/src/index.ts","webpack:///./libs/api/shared/src/lib/service/src/lib/auth.service.ts","webpack:///./libs/api/shared/src/lib/service/src/lib/builder-utils.service.ts","webpack:///./libs/api/shared/src/lib/service/src/lib/clocking-common.service.ts","webpack:///./libs/api/shared/src/lib/service/src/lib/timezone.service.ts","webpack:///./libs/api/shared/src/lib/service/src/lib/user.service.ts","webpack:///./libs/api/shared/src/lib/tool/src/index.ts","webpack:///./libs/api/shared/src/lib/tool/src/lib/builder-util.ts","webpack:///./libs/api/shared/src/lib/tool/src/lib/generateToken.ts","webpack:///./libs/api/shared/src/lib/tool/src/lib/getOrderAndDirection.ts","webpack:///./libs/api/shared/src/lib/tool/src/lib/getTodayStart.ts","webpack:///./libs/api/shared/src/lib/tool/src/lib/randomString.ts","webpack:///./libs/graphql/src/index.ts","webpack:///./libs/graphql/src/lib/graphql.ts","webpack:///external \"@angular/core\"","webpack:///external \"@casl/ability\"","webpack:///external \"@hapi/joi\"","webpack:///external \"@nestjs/bull\"","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/config\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/graphql\"","webpack:///external \"@nestjs/passport\"","webpack:///external \"@nestjs/schedule\"","webpack:///external \"@nestjs/serve-static\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"apollo-angular\"","webpack:///external \"apollo-server-express\"","webpack:///external \"bcrypt\"","webpack:///external \"bull\"","webpack:///external \"canvas\"","webpack:///external \"class-transformer\"","webpack:///external \"connect-redis\"","webpack:///external \"crypto\"","webpack:///external \"express-session\"","webpack:///external \"fs\"","webpack:///external \"graphql-passport\"","webpack:///external \"handlebars\"","webpack:///external \"image-data-uri\"","webpack:///external \"nest-winston\"","webpack:///external \"nodemailer\"","webpack:///external \"passport\"","webpack:///external \"path\"","webpack:///external \"redis\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\"","webpack:///external \"winston\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller, Get } from '@nestjs/common';\r\n\r\nimport { AppService } from './app.service';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly appService: AppService) {}\r\n\r\n  @Get()\r\n  getData() {\r\n    return this.appService.getData();\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\n\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { CoreModule } from '@dfobobcat/api/core';\r\nimport { ServeStaticModule } from '@nestjs/serve-static';\r\nimport { join } from 'path';\r\n@Module({\r\n  imports: [\r\n    CoreModule,\r\n    ServeStaticModule.forRoot({\r\n      rootPath: join(__dirname, '../../../uploads'),\r\n    }),\r\n  ],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  getData(): { message: string } {\r\n    return { message: 'Welcome to api!' };\r\n  }\r\n}\r\n","import { Logger, NestApplicationOptions } from '@nestjs/common';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { NestFactory } from '@nestjs/core';\r\nimport session = require('express-session');\r\nimport passport = require('passport');\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { createClient } from 'redis';\r\nimport * as createRedisStore from 'connect-redis';\r\nimport * as fs from 'fs';\r\nconst key = process.env.PRIVATE_KEY_PATH;\r\nconst cert = process.env.CERT_PATH;\r\n\r\nconst opts: NestApplicationOptions = {};\r\nif (\r\n  key &&\r\n  key.length &&\r\n  cert &&\r\n  cert.length &&\r\n  fs.existsSync(key) &&\r\n  fs.existsSync(cert)\r\n) {\r\n  opts.httpsOptions = {};\r\n  opts.httpsOptions.key = fs.readFileSync(key);\r\n  opts.httpsOptions.cert = fs.readFileSync(cert);\r\n}\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule, opts);\r\n  const configService = app.get(ConfigService);\r\n  const globalPrefix = 'api';\r\n  app.setGlobalPrefix(globalPrefix);\r\n  const port = configService.get('APP_PORT');\r\n\r\n  const RedisStore = createRedisStore(session);\r\n  const redisClient = createClient({\r\n    host: configService.get('REDIS_HOST'),\r\n    port: configService.get('REDIS_PORT'),\r\n  });\r\n\r\n  app.use(\r\n    session({\r\n      secret: configService.get('SESSION_SECRET'),\r\n      store: new RedisStore({ client: redisClient }),\r\n      resave: false,\r\n      saveUninitialized: false,\r\n      rolling: true,\r\n      cookie: {\r\n        httpOnly: true,\r\n        maxAge: 1 * 60 * 60 * 1000 * 168,\r\n      },\r\n    }),\r\n  );\r\n  app.use(passport.initialize());\r\n  app.use(passport.session());\r\n\r\n  const server = await app.listen(port, () => {\r\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\r\n  });\r\n  server.setTimeout(1800000);\r\n}\r\n\r\nbootstrap();\r\n","export * from './lib/api-admin.module';\r\nexport * from './lib/service/admin.service';\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport {\r\n  ClockIn,\r\n  ClockOff,\r\n  Equipment,\r\n  Job,\r\n  User,\r\n  Role,\r\n  Company,\r\n} from '@dfobobcat/api/entity';\r\nimport { AdminService } from './service/admin.service';\r\nimport { CompanyModule } from '../../../company/src';\r\n\r\n@Module({\r\n  controllers: [],\r\n  imports: [\r\n    TypeOrmModule.forFeature([\r\n      ClockIn,\r\n      ClockOff,\r\n      Job,\r\n      Equipment,\r\n      User,\r\n      Role,\r\n      Company,\r\n    ]),\r\n    CompanyModule,\r\n  ],\r\n  providers: [AdminService],\r\n  exports: [AdminService],\r\n})\r\nexport class ApiAdminModule {}\r\n","import { Repository } from 'typeorm';\r\nimport {\r\n  QueryUsersArgs,\r\n  UpdateUserInput,\r\n  RoleType,\r\n} from '@dfobobcat/graphql-types';\r\nimport {\r\n  User,\r\n  ClockOff,\r\n  Role as RoleEntity,\r\n  Company,\r\n} from '@dfobobcat/api/entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport {\r\n  findIdOrThrow,\r\n  getOrderAndDirection,\r\n} from '@dfobobcat/api/shared/tool';\r\nimport { CompanyService } from '@dfobobcat/api/feature/company';\r\n\r\nexport class AdminService {\r\n  constructor(\r\n    @InjectRepository(User)\r\n    private usersRepository: Repository<User>,\r\n    @InjectRepository(ClockOff)\r\n    private clockOffRepository: Repository<ClockOff>,\r\n    @InjectRepository(RoleEntity)\r\n    private roleRepository: Repository<RoleEntity>,\r\n    @InjectRepository(Company)\r\n    private companyRepository: Repository<Company>,\r\n    private companyService: CompanyService,\r\n  ) {}\r\n\r\n  async deleteUser(userId: number) {\r\n    await this.usersRepository.delete(userId);\r\n\r\n    return true;\r\n  }\r\n\r\n  async updateUser(ctx: any, args: UpdateUserInput): Promise<boolean> {\r\n    const { userId, roleId, company: companyName, ...updateData } = args;\r\n    const user = await findIdOrThrow<User>(this.usersRepository, userId);\r\n\r\n    let company = await this.companyRepository.findOne({ name: companyName });\r\n    if (!company) {\r\n      company = await this.companyService.addCompany({\r\n        name: companyName as string,\r\n      });\r\n    }\r\n\r\n    (updateData as any).company = company;\r\n\r\n    let role: RoleType;\r\n    if (roleId) {\r\n      role = await findIdOrThrow<RoleType>(this.roleRepository, roleId);\r\n      (updateData as any).role = role as RoleType;\r\n    }\r\n\r\n    await this.usersRepository.update(user.id, updateData);\r\n\r\n    return true;\r\n  }\r\n\r\n  async getUsers(args: QueryUsersArgs) {\r\n    let orderBy = getOrderAndDirection(args.orderBy);\r\n    if (!orderBy) {\r\n      orderBy = ['user.name', 'ASC'];\r\n    }\r\n\r\n    const query = this.usersRepository\r\n      .createQueryBuilder('user')\r\n      .leftJoinAndSelect('user.company', 'company');\r\n\r\n    if (args.role === 'staff') {\r\n      query.innerJoinAndSelect(\r\n        'user.role',\r\n        'role',\r\n        'role.name = :operator OR role.name = :laborer',\r\n        {\r\n          operator: RoleType.Operator,\r\n          laborer: RoleType.Laborer,\r\n        },\r\n      );\r\n    } else if (args.role === 'builder') {\r\n      query.innerJoinAndSelect('user.role', 'role', 'role.name = :builder', {\r\n        builder: RoleType.Builder,\r\n      });\r\n    } else {\r\n      query.innerJoinAndSelect('user.role', 'role');\r\n    }\r\n    if (args && args.search && args.search.length) {\r\n      if (args.search && args.search.length > 0) {\r\n        query.where('LOWER(user.name) like :name', {\r\n          name: `%${args.search.toLowerCase()}%`,\r\n        });\r\n      }\r\n    }\r\n    query.orderBy(orderBy[0], orderBy[1]);\r\n    if (args.pagination) {\r\n      const offset = args.pagination?.offset ? args.pagination.offset : 15;\r\n      const page = args.pagination?.page ? args.pagination.page : 0;\r\n      const skip = page * offset;\r\n      const totalClone = query.clone();\r\n      const total = await totalClone.getCount();\r\n      const hasNextPage = total > (page + 1) * offset;\r\n      const hasPreviousPage = page > 0;\r\n      const nextPage = hasNextPage ? page + 1 : undefined;\r\n      const previousPage = hasPreviousPage ? page - 1 : undefined;\r\n      return {\r\n        items: await query.offset(skip).limit(offset).getMany(),\r\n        pageInfo: {\r\n          hasNextPage,\r\n          hasPreviousPage,\r\n          nextPage,\r\n          previousPage,\r\n        },\r\n      };\r\n    }\r\n    return {\r\n      items: await query.getMany(),\r\n      pageInfo: {\r\n        hasNextPage: false,\r\n        hasPreviousPage: false,\r\n        nextPage: undefined,\r\n        previousPage: undefined,\r\n      },\r\n    };\r\n  }\r\n\r\n  async staffRoles() {\r\n    return this.roleRepository\r\n      .createQueryBuilder('role')\r\n      .where('role.name IN (:laborer, :operator)', {\r\n        laborer: RoleType.Laborer,\r\n        operator: RoleType.Operator,\r\n      })\r\n      .select(['role.id', 'role.name'])\r\n      .getMany();\r\n  }\r\n\r\n  /*\r\n  async getStaff(ctx: any, page?: number) {\r\n    const query = this.usersRepository\r\n      .createQueryBuilder('user')\r\n      .innerJoinAndSelect(\r\n        'user.role',\r\n        'role',\r\n        'role.name = :operator OR role.name = :laborer',\r\n        {\r\n          operator: RoleType.Operator,\r\n          laborer: RoleType.Laborer,\r\n        },\r\n      )\r\n      .orderBy('user.name', 'ASC')\r\n      .select([\r\n        'user.id AS id',\r\n        'role.name AS role',\r\n        'user.name AS name',\r\n        'user.email AS email',\r\n      ]);\r\n    if (page) {\r\n      const PAGE_SIZE = 20;\r\n      const offset = page * PAGE_SIZE;\r\n      query.skip(offset).take(PAGE_SIZE);\r\n    }\r\n\r\n    return query.getRawMany();\r\n  }\r\n\r\n  async getBuilders(ctx: any, page?: number) {\r\n    const query = this.usersRepository\r\n      .createQueryBuilder('user')\r\n      .innerJoinAndSelect('user.role', 'role', 'role.name = :builder', {\r\n        builder: RoleType.Builder,\r\n      })\r\n      .orderBy('user.name', 'ASC')\r\n      .select([\r\n        'user.id AS id',\r\n        'role.name AS role',\r\n        'user.name AS name',\r\n        'user.email AS email',\r\n      ]);\r\n    if (page) {\r\n      const PAGE_SIZE = 20;\r\n      const offset = page * PAGE_SIZE;\r\n      query.skip(offset).take(PAGE_SIZE);\r\n    }\r\n\r\n    return query.getRawMany();\r\n  } */\r\n}\r\n","export * from './lib/auth.module';\r\nexport * from './lib/guard/claimAuthGuard.guard';\r\nexport * from './lib/guard/logInWithCredentialsGuard';\r\nexport * from './lib/service/guard.service';\r\nexport * from './lib/require-claim.decorator';\r\nexport * from './lib/auth-callback.decorator';\r\n","import { SetMetadata } from '@nestjs/common';\r\nimport { GuardService } from './service/guard.service';\r\nexport type authCbType = (\r\n  guardService: GuardService,\r\n  ctx: any,\r\n  args: any,\r\n) => boolean | Promise<boolean>;\r\nexport const AUTH_CALLBACK_KEY = 'AUTH_CALLBACK';\r\nexport const AuthCallback = (cb: authCbType) =>\r\n  SetMetadata(AUTH_CALLBACK_KEY, cb);\r\n","import { forwardRef, Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport {\r\n  ClockIn,\r\n  ClockOff,\r\n  Equipment,\r\n  Activity,\r\n  Job,\r\n  Role,\r\n  User,\r\n  Token,\r\n  Company,\r\n} from '@dfobobcat/api/entity';\r\nimport { AuthService, UserService } from '@dfobobcat/api/shared/service';\r\nimport { AuthResolver } from './resolver/auth.resolver';\r\nimport { LocalStrategy } from './service/graphql-local.strategy';\r\nimport { LocalSerializer } from './service/local.serializer';\r\nimport { ConfigModule } from '@nestjs/config';\r\nimport { ApiEmailModule } from '@dfobobcat/api/email';\r\nimport { CompanyModule } from '@dfobobcat/api/feature/company';\r\n@Module({\r\n  imports: [\r\n    TypeOrmModule.forFeature([\r\n      ClockIn,\r\n      ClockOff,\r\n      Job,\r\n      Equipment,\r\n      Activity,\r\n      User,\r\n      Role,\r\n      Token,\r\n      Company,\r\n    ]),\r\n    ConfigModule,\r\n    ApiEmailModule,\r\n    forwardRef(() => CompanyModule),\r\n  ],\r\n  controllers: [],\r\n  providers: [\r\n    AuthResolver,\r\n    AuthService,\r\n    LocalStrategy,\r\n    UserService,\r\n    LocalSerializer,\r\n  ],\r\n  exports: [UserService, AuthService],\r\n})\r\nexport class AuthModule {}\r\n","import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { CLAIMS_KEY } from '../require-claim.decorator';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\nimport { GqlExecutionContext } from '@nestjs/graphql';\r\nimport { defineAbilityFor } from '@dfobobcat/api/auth/util';\r\nimport { authCbType, AUTH_CALLBACK_KEY } from '../auth-callback.decorator';\r\nimport { GuardService } from '../..';\r\n@Injectable()\r\nexport class ClaimAuthGuard implements CanActivate {\r\n  constructor(\r\n    private reflector: Reflector,\r\n    private guardService: GuardService,\r\n  ) {}\r\n\r\n  canActivate(context: ExecutionContext): boolean | Promise<boolean> {\r\n    const claimAuth = () => {\r\n      const requiredClaims = this.reflector.getAllAndOverride<Claim[]>(\r\n        CLAIMS_KEY,\r\n        [context.getHandler(), context.getClass()],\r\n      );\r\n      if (!requiredClaims || !Array.isArray(requiredClaims)) {\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        requiredClaims.length === 1 &&\r\n        requiredClaims[0] === Claim.PublicMethod\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      const ctx = GqlExecutionContext.create(context);\r\n      const gqlContext = ctx.getContext();\r\n      const ability = defineAbilityFor(gqlContext);\r\n      for (const claim of requiredClaims) {\r\n        if (ability.cannot(claim)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n    const callbackAuth = () => {\r\n      const cb = this.reflector.getAllAndOverride<authCbType>(\r\n        AUTH_CALLBACK_KEY,\r\n        [context.getHandler(), context.getClass()],\r\n      );\r\n      if (!cb) {\r\n        return false;\r\n      }\r\n\r\n      const ctx = GqlExecutionContext.create(context);\r\n      const gqlContext = ctx.getContext();\r\n      const args = gqlContext?.req?.body?.variables;\r\n      return cb(this.guardService, gqlContext, args);\r\n    };\r\n\r\n    return claimAuth() || callbackAuth();\r\n  }\r\n}\r\n","import { ExecutionContext, Injectable } from '@nestjs/common';\r\nimport { GqlExecutionContext } from '@nestjs/graphql';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { UserError } from '@dfobobcat/api/shared/exception';\r\n@Injectable()\r\nexport class LogInWithCredentialsGuard extends AuthGuard('graphql-local') {\r\n  async canActivate(context: ExecutionContext): Promise<boolean> {\r\n    await super.canActivate(context);\r\n\r\n    const ctx = GqlExecutionContext.create(context);\r\n    const gqlContext = ctx.getContext();\r\n    if (!gqlContext.user.emailVerified) {\r\n      throw new UserError('Please verify your email');\r\n    }\r\n    gqlContext.login(gqlContext.user, (err: Error) => {\r\n      if (err) throw err;\r\n    });\r\n    return true;\r\n  }\r\n\r\n  getRequest(context: ExecutionContext) {\r\n    const ctx = GqlExecutionContext.create(context);\r\n    const request = ctx.getContext();\r\n    request.body = ctx.getArgs();\r\n    return request;\r\n  }\r\n}\r\n","import { SetMetadata } from '@nestjs/common';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\n\r\nexport const CLAIMS_KEY = 'claims';\r\nexport const RequireClaim = (...claims: Claim[]) =>\r\n  SetMetadata(CLAIMS_KEY, claims);\r\n","import { Args, Context, Mutation, Resolver } from '@nestjs/graphql';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { User } from '@dfobobcat/api/entity';\r\nimport { Repository } from 'typeorm';\r\nimport { AuthService, UserService } from '@dfobobcat/api/shared/service';\r\nimport {\r\n  MutationRestorePasswordArgs,\r\n  MutationTokenLoginArgs,\r\n  RegisterBuilderInput,\r\n  RegisterUserInput,\r\n  VerifyEmailMutationVariables,\r\n} from '@dfobobcat/graphql-types';\r\nimport { UseGuards } from '@nestjs/common';\r\nimport { LogInWithCredentialsGuard } from '../guard/logInWithCredentialsGuard';\r\nimport { RequireClaim } from '../require-claim.decorator';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\nimport { AuthCallback } from '../auth-callback.decorator';\r\n@Resolver()\r\nexport class AuthResolver {\r\n  constructor(\r\n    @InjectRepository(User)\r\n    private usersRepository: Repository<User>,\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n  ) {}\r\n\r\n  @Mutation()\r\n  @AuthCallback((guardService, ctx, args) =>\r\n    guardService.canCreateUserWithRole(ctx, args),\r\n  )\r\n  async register(@Context() ctx: any, @Args('input') args: RegisterUserInput) {\r\n    const success = await this.userService.create(ctx, args);\r\n    return { success };\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.PublicMethod)\r\n  async registerBuilder(\r\n    @Context() ctx: any,\r\n    @Args('input') args: RegisterBuilderInput,\r\n  ) {\r\n    const success = await this.userService.createBuilder(ctx, args);\r\n    return { success };\r\n  }\r\n\r\n  @RequireClaim(Claim.PublicMethod)\r\n  @UseGuards(LogInWithCredentialsGuard)\r\n  @Mutation()\r\n  async login(@Context() ctx: any) {\r\n    const user = ctx.getUser();\r\n    return {\r\n      name: user.name,\r\n      role: user.role,\r\n      email: user.email,\r\n    };\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.PublicMethod)\r\n  async logout(@Context() ctx: any) {\r\n    return { success: this.authService.logout(ctx) };\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.PublicMethod)\r\n  async forgotPassword(@Args('email') email: string) {\r\n    return { success: this.authService.forgotPassword(email) };\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.PublicMethod)\r\n  async restorePassword(@Args() args: MutationRestorePasswordArgs) {\r\n    return { success: this.authService.restorePassword(args) };\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.PublicMethod)\r\n  async verifyEmail(@Args() args: VerifyEmailMutationVariables) {\r\n    return { success: this.authService.verifyEmail(args) };\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.PublicMethod)\r\n  async tokenLogin(@Context() ctx: any, @Args() args: MutationTokenLoginArgs) {\r\n    return this.authService.tokenLogin(ctx, args.token);\r\n  }\r\n}\r\n","import { PassportStrategy } from '@nestjs/passport';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { GraphQLLocalStrategy } from 'graphql-passport';\r\nimport { AuthService } from '@dfobobcat/api/shared/service';\r\nimport { User } from '@dfobobcat/api/entity';\r\nimport { Request as ExpressRequest } from 'express';\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(GraphQLLocalStrategy) {\r\n  constructor(private authService: AuthService) {\r\n    super({\r\n      passReqToCallback: true,\r\n    });\r\n  }\r\n  async validate(req: ExpressRequest): Promise<User> {\r\n    const {\r\n      input: { email, password },\r\n    } = req.body;\r\n\r\n    return this.authService.getAuthenticatedUser(email, password);\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport {\r\n  RegisterMutationVariables,\r\n  RoleType,\r\n} from '@dfobobcat/graphql-types';\r\nimport { User, Job, Equipment, ClockOff, Role } from '@dfobobcat/api/entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Claim, roleClaimMap } from '@dfobobcat/api/shared/const';\r\nimport { defineAbilityFor } from '@dfobobcat/api/auth/util';\r\n\r\n/**\r\n * Contains functions to validate\r\n * access to endpoints that require\r\n * more advanced authorization checking\r\n */\r\n@Injectable()\r\nexport class GuardService {\r\n  constructor(\r\n    @InjectRepository(Job)\r\n    private jobsRepository: Repository<Job>,\r\n    @InjectRepository(User)\r\n    private usersRepository: Repository<User>,\r\n    @InjectRepository(Equipment)\r\n    private equipmentsRepository: Repository<Equipment>,\r\n    @InjectRepository(ClockOff)\r\n    private clockOffRepository: Repository<ClockOff>,\r\n    @InjectRepository(Role)\r\n    private roleRepository: Repository<Role>,\r\n  ) {}\r\n\r\n  async canGetJob(ctx: any, args: any): Promise<boolean> {\r\n    const ability = defineAbilityFor(ctx);\r\n    const user = ctx.getUser();\r\n\r\n    const job = await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .innerJoinAndSelect('job.builder', 'builder')\r\n      .where('job.id = :id', { id: args.id })\r\n      .getOne();\r\n\r\n    if (!job) {\r\n      return false;\r\n    }\r\n\r\n    const assignedToJob = !!(await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .innerJoin('job.staff', 'staff', 'staff.id = :staffId', {\r\n        staffId: user.id,\r\n      })\r\n      .where(`job.id = :jobId`, { jobId: args.id })\r\n      .limit(1)\r\n      .getOne());\r\n\r\n    const canGetJob =\r\n      ability.can(Claim.GetAllJobs) ||\r\n      (ability.can(Claim.GetOwnJobs) &&\r\n        user.hasRole(RoleType.Builder) &&\r\n        job.builder.id == user.id) ||\r\n      (ability.can(Claim.GetOwnJobs) &&\r\n        (user.hasRole(RoleType.Operator) || user.hasRole(RoleType.Laborer)) &&\r\n        assignedToJob);\r\n\r\n    if (canGetJob) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async canCreateUserWithRole(\r\n    ctx: any,\r\n    { input }: { input: RegisterMutationVariables['input'] },\r\n  ): Promise<boolean> {\r\n    const ability = defineAbilityFor(ctx);\r\n    const { roleId } = input;\r\n    const foundRole = await this.roleRepository.findOneOrFail({\r\n      id: roleId,\r\n    });\r\n    if (ability.can(roleClaimMap[foundRole.name as RoleType])) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { PassportSerializer } from '@nestjs/passport';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { UserService } from '@dfobobcat/api/shared/service';\r\nimport { User } from '@dfobobcat/api/entity';\r\nimport { RoleType } from '@dfobobcat/graphql-types';\r\n@Injectable()\r\nexport class LocalSerializer extends PassportSerializer {\r\n  constructor(private readonly usersService: UserService) {\r\n    super();\r\n  }\r\n\r\n  serializeUser(user: User, done: CallableFunction) {\r\n    done(null, user.id);\r\n  }\r\n\r\n  async deserializeUser(userId: string, done: CallableFunction) {\r\n    const user = await this.usersService.getById(Number(userId));\r\n    const addedDataToUser = {\r\n      ...user,\r\n      getRole() {\r\n        return this.role.name;\r\n      },\r\n      hasRole(role: RoleType) {\r\n        return this.role.name === role;\r\n      },\r\n    };\r\n    done(null, addedDataToUser);\r\n  }\r\n}\r\n","export * from './lib/define-ability-for';\r\n","import { User } from '@dfobobcat/api/entity';\r\nimport { PureAbility, AbilityBuilder } from '@casl/ability';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\nimport { RoleType } from '@dfobobcat/graphql-types';\r\nimport { GqlContext } from '@dfobobcat/api/shared/model';\r\nimport { UserError } from '@dfobobcat/api/shared/exception';\r\n\r\nconst GuestType = 'guest';\r\n\r\n//https://stackoverflow.com/a/64966647\r\ntype AppAbility = PureAbility<`${Claim}`>;\r\ntype DefinePermissions = (\r\n  user: User,\r\n  builder: AbilityBuilder<AppAbility>,\r\n) => void;\r\n\r\nconst rolePermissions: Record<\r\n  `${RoleType | typeof GuestType}`,\r\n  DefinePermissions\r\n> = {\r\n  [GuestType]: (user, { can }) => {\r\n    can(Claim.CreateBuilder);\r\n  },\r\n\r\n  [RoleType.Builder]: (user, { can }) => {\r\n    can(Claim.CreateJob);\r\n    can(Claim.UpdateOwnJob);\r\n    can(Claim.CancelOwnJob);\r\n    can(Claim.GetOwnJobs);\r\n    can(Claim.GetEquipment);\r\n    can(Claim.Authenticated);\r\n    can(Claim.UpdateOwnAccount);\r\n  },\r\n\r\n  [RoleType.Operator]: (user, { can }) => {\r\n    can(Claim.GetOwnJobs);\r\n    can(Claim.AddClockIn);\r\n    can(Claim.AddClockOff);\r\n    can(Claim.GetEquipment);\r\n    can(Claim.Authenticated);\r\n    can(Claim.UpdateOwnAccount);\r\n  },\r\n\r\n  [RoleType.Laborer]: (user, { can }) => {\r\n    can(Claim.GetOwnJobs);\r\n    can(Claim.AddClockIn);\r\n    can(Claim.AddClockOff);\r\n    can(Claim.GetEquipment);\r\n    can(Claim.Authenticated);\r\n    can(Claim.UpdateOwnAccount);\r\n  },\r\n\r\n  [RoleType.Admin]: (user, { can }) => {\r\n    can(Claim.CreateJob);\r\n    can(Claim.GetAllJobs);\r\n    can(Claim.AssignToJob);\r\n    can(Claim.GetEquipment);\r\n    can(Claim.GetAllStaff);\r\n    can(Claim.GetAllClockOffs);\r\n    can(Claim.GetOwnJobs);\r\n    can(Claim.CreateLaborer);\r\n    can(Claim.CreateOperator);\r\n    can(Claim.CreateAdmin);\r\n    can(Claim.CreateBuilder);\r\n    can(Claim.GetAllRoles);\r\n    can(Claim.UpdateAllUsers);\r\n    can(Claim.UpdateAllJobs);\r\n    can(Claim.UpdateOwnJob);\r\n    can(Claim.GetAllReports);\r\n    can(Claim.GetAllUsers);\r\n    can(Claim.Authenticated);\r\n    can(Claim.CancelAllJobs);\r\n    can(Claim.UpdateOwnAccount);\r\n    can(Claim.DeleteAllUsers);\r\n    can(Claim.GetCompanies);\r\n    can(Claim.AddCompany);\r\n  },\r\n};\r\n\r\nexport function defineAbilityFor(ctx: GqlContext): AppAbility {\r\n  const builder = new AbilityBuilder<AppAbility>(PureAbility);\r\n  const user = ctx.getUser();\r\n  const role: RoleType | typeof GuestType = ctx.isAuthenticated()\r\n    ? (user.role.name as RoleType)\r\n    : GuestType;\r\n  if (typeof rolePermissions[role] === 'function') {\r\n    rolePermissions[role](user, builder);\r\n  } else {\r\n    throw new UserError(`Trying to use unknown role \"${user.role}\"`);\r\n  }\r\n\r\n  return builder.build();\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { ClockOff, ClockIn, Job, Equipment, User } from '@dfobobcat/api/entity';\r\nimport { ClockingService } from './lib/service/clocking.service';\r\nimport { ConfigModule } from '@nestjs/config';\r\nimport { ApiSharedModule } from '@dfobobcat/api/shared/module';\r\nimport { ApiQueueModule } from '@dfobobcat/api/queue';\r\nimport { ImageConsumer } from './lib/service/image.consumer';\r\n\r\n@Module({\r\n  imports: [\r\n    TypeOrmModule.forFeature([ClockIn, ClockOff, Job, Equipment, User]),\r\n    ConfigModule,\r\n    ApiSharedModule,\r\n    ApiQueueModule,\r\n  ],\r\n  providers: [ClockingService, ImageConsumer],\r\n  exports: [ClockingService],\r\n})\r\nexport class ClockingModule {}\r\n","export * from './clocking.module';\r\nexport * from './lib/service/clocking.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport {\r\n  AddClockInInput,\r\n  AddClockInRs,\r\n  AddClockOffInput,\r\n  JobStatus,\r\n} from '@dfobobcat/graphql-types';\r\nimport { User, Job, ClockIn, ClockOff, Equipment } from '@dfobobcat/api/entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { join } from 'path';\r\nimport * as tmp from 'tmp';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { createWriteStream, existsSync, mkdirSync } from 'fs';\r\nimport { getTodayStart, getRandomString } from '@dfobobcat/api/shared/tool';\r\nimport { Queue } from 'bull';\r\nimport { InjectQueue } from '@nestjs/bull';\r\nimport {\r\n  ClockingCommonService,\r\n  TimeZoneService,\r\n} from '@dfobobcat/api/shared/service';\r\nimport { UserError } from '@dfobobcat/api/shared/exception';\r\nimport { Role } from '@dfobobcat/api/shared/const';\r\nimport { ProcessedImage } from '../model/processed-image';\r\n@Injectable()\r\nexport class ClockingService {\r\n  constructor(\r\n    @InjectRepository(Job)\r\n    private jobsRepository: Repository<Job>,\r\n    @InjectRepository(User)\r\n    private usersRepository: Repository<User>,\r\n    @InjectRepository(ClockIn)\r\n    private clockInRepository: Repository<ClockIn>,\r\n    @InjectRepository(ClockOff)\r\n    private clockOffRepository: Repository<ClockOff>,\r\n    @InjectQueue('image') private imageQueue: Queue,\r\n    private config: ConfigService,\r\n    private clockingCommonService: ClockingCommonService,\r\n    private tzService: TimeZoneService,\r\n  ) {}\r\n\r\n  async hasClockedInToJob(jobId: number, userId: number): Promise<boolean> {\r\n    const hasClockedIn = !!(await this.clockInRepository\r\n      .createQueryBuilder('clockIn')\r\n      .innerJoin('clockIn.job', 'job', 'job.id = :jobId', {\r\n        jobId,\r\n      })\r\n      .innerJoin('clockIn.staff', 'staff', 'staff.id = :staffId', {\r\n        staffId: userId,\r\n      })\r\n      .getOne());\r\n\r\n    return hasClockedIn;\r\n  }\r\n\r\n  async addClockIn(ctx: any, args: AddClockInInput): Promise<AddClockInRs> {\r\n    const user = ctx.getUser();\r\n    const staffId = user.id;\r\n    const { jobId, ...clockData } = args;\r\n    const userRecord = await this.usersRepository.findOne(user.id);\r\n    const clockInTime = new Date().toISOString();\r\n\r\n    const jobToAssign = await this.jobsRepository.findOne(jobId, {\r\n      relations: ['staff', 'activity'],\r\n    });\r\n\r\n    const meAssigned =\r\n      jobToAssign && jobToAssign?.staff.some((person) => person.id === user.id);\r\n\r\n    const jobIsActive =\r\n      jobToAssign &&\r\n      (jobToAssign.status == JobStatus.Assigned ||\r\n        jobToAssign?.status == JobStatus.InProgress);\r\n\r\n    const hasClockedIn = !!(await this.clockInRepository\r\n      .createQueryBuilder('clockIn')\r\n      .innerJoin('clockIn.job', 'job', 'job.id = :jobId', {\r\n        jobId,\r\n      })\r\n      .innerJoin('clockIn.staff', 'staff', 'staff.id = :staffId', {\r\n        staffId,\r\n      })\r\n      .getOne());\r\n    const hasClockedOff = !!(await this.clockOffRepository\r\n      .createQueryBuilder('clockIn')\r\n      .innerJoin('clockIn.job', 'job', 'job.id = :jobId', {\r\n        jobId,\r\n      })\r\n      .innerJoin('clockIn.staff', 'staff', 'staff.id = :staffId', {\r\n        staffId,\r\n      })\r\n      .getOne());\r\n\r\n    if (!meAssigned || !jobIsActive || hasClockedIn || hasClockedOff) {\r\n      throw new UserError('You cannot clock in to this job!');\r\n    }\r\n\r\n    const clockIn = this.clockInRepository.create({\r\n      job: jobToAssign,\r\n      staff: userRecord,\r\n      clockInTime,\r\n      ...clockData,\r\n    });\r\n    await this.clockInRepository.save(clockIn);\r\n\r\n    const nowTime = new Date();\r\n    const images = [];\r\n    const data = await Promise.all(args.files);\r\n    const folder = join(\r\n      this.config.get('UPLOADS_PATH') as string,\r\n      'clock-in',\r\n      `${clockIn.id}`,\r\n    );\r\n    if (!existsSync(folder)) {\r\n      mkdirSync(folder, { recursive: true });\r\n    }\r\n\r\n    for (const file of data) {\r\n      const { mimetype, createReadStream } = file;\r\n      // const ext = filename.split('.').pop();\r\n      const ext = 'png';\r\n      const saveAs = `${getRandomString()}.${ext}`;\r\n      const tmpFile = `_${getRandomString()}.${ext}`;\r\n\r\n      const filePath = join(folder, saveAs);\r\n      const tmpFilePath = join(folder, tmpFile);\r\n\r\n      const allowedTypes = ['image/jpeg', 'image/png'];\r\n      if (!allowedTypes.includes(mimetype)) {\r\n        throw new UserError('Allowed file types: *.jpg, *.png');\r\n      }\r\n\r\n      const writeStreamTmpFile = createWriteStream(tmpFilePath);\r\n      const readStream = createReadStream();\r\n      readStream.pipe(writeStreamTmpFile);\r\n      readStream.on('end', () => {\r\n        writeStreamTmpFile.end();\r\n        this.imageQueue.add('save-image-with-timestamp', {\r\n          tmpFilePath,\r\n          savePath: filePath,\r\n          addText: this.tzService.convertToTZ(nowTime, true),\r\n        } as ProcessedImage);\r\n      });\r\n\r\n      images.push(saveAs);\r\n    }\r\n\r\n    await this.clockInRepository.update(clockIn.id, { images });\r\n\r\n    if (jobToAssign?.status === JobStatus.Assigned) {\r\n      jobToAssign.status = JobStatus.InProgress;\r\n      jobToAssign.activity.push({\r\n        type: JobStatus.InProgress,\r\n        date: new Date(),\r\n      });\r\n      await this.jobsRepository.save(jobToAssign);\r\n    }\r\n\r\n    /**\r\n     * DO not get the equipment by doing joins in the queries above. It does not work.\r\n     */\r\n    const jobEquipment = await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .where('job.id = :jobId', { jobId: jobToAssign?.id })\r\n      .leftJoinAndSelect('job.equipment', 'equipment')\r\n      .select(['job.id', 'equipment.id', 'equipment.name'])\r\n      .getOne();\r\n\r\n    let equipment: Equipment[] = [];\r\n    if (jobEquipment?.equipment) {\r\n      equipment = jobEquipment.equipment;\r\n    }\r\n\r\n    return {\r\n      id: jobToAssign.id,\r\n      address: jobToAssign.address,\r\n      equipment,\r\n    };\r\n  }\r\n\r\n  async addClockOff(ctx: any, args: AddClockOffInput) {\r\n    const user = ctx.getUser();\r\n\r\n    if (\r\n      user.role === Role.Laborer &&\r\n      (!Array.isArray(args.files) || !args.files.length)\r\n    ) {\r\n      throw new UserError('Cannot clock off without the images.');\r\n    }\r\n\r\n    const { jobId, ...clockData } = args;\r\n\r\n    const job = await this.jobsRepository.findOneOrFail(\r\n      { id: jobId },\r\n      {\r\n        relations: ['staff', 'activity'],\r\n      },\r\n    );\r\n    const userRecord = await this.usersRepository.findOneOrFail({\r\n      id: user.id,\r\n    });\r\n\r\n    const now = getTodayStart();\r\n\r\n    const hasClockedOff = await this.clockOffRepository\r\n      .createQueryBuilder('clockOff')\r\n      .innerJoinAndSelect('clockOff.job', 'job')\r\n      .where('clockOff.staff.id = :staffId', { staffId: user.id })\r\n      .andWhere('job.id = :jobId', { jobId: args.jobId })\r\n      .andWhere(\r\n        `DATE(job.requestDate) >= DATE(:now) AND DATE(job.requestDate) < DATE(:now) + INTERVAL '1 DAY'`,\r\n        { now },\r\n      )\r\n      .getOne();\r\n\r\n    if (hasClockedOff) {\r\n      throw new UserError('You already clocked off from this job today!');\r\n    }\r\n\r\n    /**\r\n     * get todays clock in so that we can\r\n     * calculate time worked for today\r\n     */\r\n    const todaysClockIns = await this.clockInRepository\r\n      .createQueryBuilder('clockIn')\r\n      .innerJoin('clockIn.job', 'job', 'job.id = :jobId', { jobId })\r\n      .innerJoin('clockIn.staff', 'staff', 'staff.id = :staffId', {\r\n        staffId: user.id,\r\n      })\r\n      .where(\r\n        `DATE(job.requestDate) >= DATE(:now) AND DATE(job.requestDate) < DATE(:now) + INTERVAL '1 DAY'`,\r\n        { now },\r\n      )\r\n      .select(['clockIn.id', 'clockIn.clockInTime'])\r\n      .getMany();\r\n    if (!todaysClockIns || !todaysClockIns.length) {\r\n      throw new UserError(\r\n        'Clock off is impossible because clock in does not exist!',\r\n      );\r\n    }\r\n    if (todaysClockIns.length > 1) {\r\n      throw new UserError('Found too many clock ins for one day. Aborting.');\r\n    }\r\n    const todaysClockIn = todaysClockIns[0];\r\n\r\n    const nowTime = new Date();\r\n    const clockOffTime = nowTime.toISOString();\r\n    const clockOff = this.clockOffRepository.create({\r\n      job,\r\n      clockOffTime,\r\n      staff: userRecord,\r\n      ...clockData,\r\n    });\r\n\r\n    // total time in mins\r\n    const totalTimeWorked = Math.trunc(\r\n      (new Date(clockOffTime).getTime() -\r\n        new Date(todaysClockIn.clockInTime).getTime()) /\r\n        60000,\r\n    );\r\n    const currentTotalTime = clockOff.totalTimeWorked || 0;\r\n    clockOff.totalTimeWorked = currentTotalTime + totalTimeWorked;\r\n\r\n    // save first to get id to create folder with id\r\n    await this.clockOffRepository.save(clockOff);\r\n    const clockOffId = clockOff.id;\r\n\r\n    const images = [];\r\n    if (Array.isArray(args.files) && args.files.length) {\r\n      const data = await Promise.all(args.files);\r\n      const folder = join(\r\n        this.config.get('UPLOADS_PATH') as string,\r\n        'clock-off',\r\n        `${clockOffId}`,\r\n      );\r\n      if (!existsSync(folder)) {\r\n        mkdirSync(folder, { recursive: true });\r\n      }\r\n      for (const file of data) {\r\n        const { mimetype, createReadStream } = file;\r\n        // const ext = filename.split('.').pop();\r\n        const ext = 'png';\r\n        const saveAs = `${getRandomString()}.${ext}`;\r\n        const tmpFile = `_${getRandomString()}.${ext}`;\r\n\r\n        const filePath = join(folder, saveAs);\r\n        const tmpFilePath = join(folder, tmpFile);\r\n\r\n        const allowedTypes = ['image/jpeg', 'image/png'];\r\n        if (!allowedTypes.includes(mimetype)) {\r\n          throw new UserError('Allowed file types: *.jpg, *.png');\r\n        }\r\n\r\n        const writeStreamTmpFile = createWriteStream(tmpFilePath);\r\n        const readStream = createReadStream();\r\n        readStream.pipe(writeStreamTmpFile);\r\n        readStream.on('end', () => {\r\n          writeStreamTmpFile.end();\r\n          this.imageQueue.add('save-image-with-timestamp', {\r\n            tmpFilePath,\r\n            savePath: filePath,\r\n            addText: this.tzService.convertToTZ(nowTime, true),\r\n          } as ProcessedImage);\r\n        });\r\n\r\n        images.push(saveAs);\r\n      }\r\n    }\r\n    clockOff.images = images;\r\n    await this.clockOffRepository.save(clockOff);\r\n\r\n    if (await this.isJobCompleted(job)) {\r\n      job.status = JobStatus.Completed;\r\n      job.activity.push({ type: JobStatus.Completed, date: new Date() });\r\n      await this.jobsRepository.save(job);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // job is completed when all staff clocked off\r\n  async isJobCompleted(job: Job): Promise<boolean> {\r\n    const clockInAmount = await this.clockInRepository\r\n      .createQueryBuilder('clockIn')\r\n      .innerJoinAndSelect('clockIn.job', 'job', 'job.id = :jobId', {\r\n        jobId: job.id,\r\n      })\r\n      .getCount();\r\n    const clockOffAmount = await this.clockOffRepository\r\n      .createQueryBuilder('clockOff')\r\n      .innerJoinAndSelect('clockOff.job', 'job', 'job.id = :jobId', {\r\n        jobId: job.id,\r\n      })\r\n      .getCount();\r\n\r\n    const staffAssigned = await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .innerJoinAndSelect('job.staff', 'staff')\r\n      .where('job.id = :jobId', { jobId: job.id })\r\n      .getOne();\r\n    const amountStaffAssigned = staffAssigned?.staff.length || 0;\r\n    return (\r\n      clockInAmount === clockOffAmount && clockInAmount === amountStaffAssigned\r\n    );\r\n  }\r\n}\r\n","import { Processor, Process } from '@nestjs/bull';\r\nimport { unlinkSync } from 'fs';\r\nimport { ProcessedImage } from '../model/processed-image';\r\nimport * as canvas from 'canvas';\r\nimport { outputFile } from 'image-data-uri';\r\nimport { ConfigService } from '@nestjs/config';\r\n\r\n@Processor('image')\r\nexport class ImageConsumer {\r\n  constructor(private config: ConfigService) {}\r\n  @Process('save-image-with-timestamp')\r\n  async saveImageWithTimestamp(imageData: { data: ProcessedImage }) {\r\n    const { tmpFilePath, addText, savePath } = imageData.data;\r\n\r\n    canvas.loadImage(tmpFilePath).then((image) => {\r\n      canvas.registerFont(`${this.config.get('SYSTEM_FONT')}`, {\r\n        family: 'Roboto',\r\n      });\r\n      const cnv = canvas.createCanvas(image.width, image.height);\r\n      const context = cnv.getContext('2d');\r\n\r\n      context.drawImage(image, 0, 0);\r\n      context.font = '64px Roboto';\r\n      context.textAlign = 'center';\r\n      context.fillStyle = 'red';\r\n      context.fillText(addText, image.width / 2, image.height * 0.97);\r\n      const imageUri = cnv.toDataURL('image/png');\r\n      outputFile(imageUri, savePath)\r\n        .then(() => {\r\n          unlinkSync(tmpFilePath);\r\n        })\r\n        .catch(() => {});\r\n    });\r\n  }\r\n}\r\n","export * from './lib/company.service';\r\nexport * from './lib/company.module';\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Company } from '@dfobobcat/api/entity';\r\nimport { CompanyService } from '..';\r\n\r\n@Module({\r\n  imports: [TypeOrmModule.forFeature([Company])],\r\n  providers: [CompanyService],\r\n  exports: [CompanyService],\r\n})\r\nexport class CompanyModule {}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Company } from '@dfobobcat/api/entity';\r\nimport { AddCompanyInput } from '@dfobobcat/graphql-types';\r\nimport { UserError } from '@dfobobcat/api/shared/exception';\r\n@Injectable()\r\nexport class CompanyService {\r\n  constructor(\r\n    @InjectRepository(Company)\r\n    private companyRepo: Repository<Company>,\r\n  ) {}\r\n\r\n  async getCompanies() {\r\n    return this.companyRepo.find();\r\n  }\r\n\r\n  async addCompany(data: AddCompanyInput): Promise<Company> {\r\n    const alreadyExists = await this.companyRepo.findOne({ name: data.name });\r\n    if (alreadyExists) {\r\n      throw new UserError('Already exists.');\r\n    }\r\n\r\n    const newItem = await this.companyRepo.save({\r\n      name: data.name,\r\n    });\r\n\r\n    return newItem;\r\n  }\r\n}\r\n","export * from './lib/core.module';\r\nexport * from './lib/core.module';\r\n","import { Inject, Module } from '@nestjs/common';\r\nimport { ConfigModule, ConfigService } from '@nestjs/config';\r\nimport { GraphQLModule } from '@nestjs/graphql';\r\nimport { join } from 'path';\r\nimport { GraphqlService } from './graphql/graphql.service';\r\nimport {\r\n  AuthModule,\r\n  ClaimAuthGuard,\r\n  GuardService,\r\n  LogInWithCredentialsGuard,\r\n} from '@dfobobcat/api/auth';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { APP_GUARD, Reflector } from '@nestjs/core';\r\nimport { JobModule } from '@dfobobcat/api/feature/job';\r\nimport { ClockingModule } from '@dfobobcat/api/feature/clocking';\r\nimport { EquipmentModule } from '@dfobobcat/api/feature/equipment';\r\nimport { UserService } from '@dfobobcat/api/shared/service';\r\nimport { ApiAdminModule } from '@dfobobcat/api/feature/admin';\r\nimport { ApiReportModule } from '@dfobobcat/api/feature/report';\r\nimport { ScheduleModule } from '@nestjs/schedule';\r\nimport { ApiEmailModule } from '@dfobobcat/api/email';\r\nimport { BullModule } from '@nestjs/bull';\r\nimport * as Joi from '@hapi/joi';\r\nimport { Logger } from 'winston';\r\n\r\nimport {\r\n  AdminResolver,\r\n  EquipmentResolver,\r\n  UserResolver,\r\n  UserTypeResolver,\r\n  ClockingResolver,\r\n  JobResolver,\r\n  BuilderResolver,\r\n  StaffResolver,\r\n  CompanyResolver,\r\n} from '@dfobobcat/api/resolver';\r\nimport { CronService } from '@dfobobcat/api/cron';\r\nimport { ApiSettingsModule } from '@dfobobcat/api/feature/settings';\r\nimport {\r\n  UserSubscriber,\r\n  ClockIn,\r\n  ClockOff,\r\n  Job,\r\n  Equipment,\r\n  User,\r\n  Role,\r\n} from '@dfobobcat/api/entity';\r\nimport { ApiSharedModule } from '@dfobobcat/api/shared/module';\r\nimport { SettingsResolver, ReportResolver } from '@dfobobcat/api/resolver';\r\nimport { WinstonModule, WINSTON_MODULE_PROVIDER } from 'nest-winston';\r\nimport { WinstonConfigService } from './logging/logging-config.service';\r\nimport { CompanyModule } from '../../../company/src';\r\n\r\n@Module({\r\n  imports: [\r\n    ConfigModule.forRoot({\r\n      validationSchema: Joi.object({\r\n        PORT: Joi.number(),\r\n        APP_ENV: Joi.string().required(),\r\n        APP_PORT: Joi.number().required(),\r\n        APP_HOST: Joi.string().required(),\r\n        APP_LOCALE_CODE: Joi.string().required(),\r\n        APP_TIMEZONE: Joi.string().required(),\r\n        DB_PORT: Joi.number().required(),\r\n        DB_HOST: Joi.string().required(),\r\n        DB_NAME: Joi.string().required(),\r\n        DB_USER: Joi.string().required(),\r\n        DB_PASSWORD: Joi.string().required(),\r\n        SESSION_SECRET: Joi.string().required(),\r\n        APP_ROOT_PATH: Joi.string().required(),\r\n        UPLOADS_PATH: Joi.string().required(),\r\n        SYSTEM_FONT: Joi.string().required(),\r\n        REDIS_HOST: Joi.string().required(),\r\n        REDIS_PORT: Joi.number().required(),\r\n        ALLOWED_ORIGINS: Joi.string().required(),\r\n        ADMIN_EMAIL: Joi.string().required(),\r\n        EMAIL_DIR: Joi.string().required(),\r\n        VERIFY_EMAIL_TOKEN_EXPIRE: Joi.string().required(),\r\n        RESET_PASSWORD_TOKEN_EXPIRE: Joi.string().required(),\r\n        LOGIN_TOKEN_EXPIRE: Joi.string().required(),\r\n        RESTORE_PASSWORD_URL: Joi.string().required(),\r\n        VERIFY_EMAIL_URL: Joi.string().required(),\r\n        LOGIN_EDIT_JOB_LINK: Joi.string().required(),\r\n        LOG_FILE_PATH: Joi.string().required(),\r\n        EMAIL_HOST: Joi.string().required(),\r\n        EMAIL_PORT: Joi.number().required(),\r\n        EMAIL_USER: Joi.string().required(),\r\n        EMAIL_PASSWORD: Joi.string().required(),\r\n      }),\r\n    }),\r\n    TypeOrmModule.forRootAsync({\r\n      imports: [ConfigModule],\r\n      inject: [ConfigService],\r\n      useFactory: (configService) => ({\r\n        type: 'postgres',\r\n        host: configService.get('DB_HOST'),\r\n        port: configService.get('DB_PORT'),\r\n        username: configService.get('DB_USER'),\r\n        password: configService.get('DB_PASSWORD'),\r\n        database: configService.get('DB_NAME'),\r\n        synchronize: configService.get('POSTGRESQL_SYNC') ? true : false,\r\n        entities: [join(__dirname, 'entity', 'src', 'lib', '*.entity.{ts,js}')],\r\n        subscribers: [\r\n          join(\r\n            __dirname,\r\n            'entity',\r\n            'src',\r\n            'lib',\r\n            'event-subscriber',\r\n            '*.{ts,js}',\r\n          ),\r\n        ],\r\n        autoLoadEntities: true,\r\n        useNewUrlParser: true,\r\n        keepConnectionAlive: true,\r\n        logging: false,\r\n      }),\r\n    }),\r\n    WinstonModule.forRootAsync({\r\n      useClass: WinstonConfigService,\r\n      imports: [ConfigModule],\r\n      inject: [ConfigService],\r\n    }),\r\n    TypeOrmModule.forFeature([ClockIn, ClockOff, Job, Equipment, User, Role]),\r\n    GraphQLModule.forRootAsync({\r\n      imports: [ConfigModule, AuthModule, WinstonModule],\r\n      inject: [ConfigService, UserService],\r\n      useClass: GraphqlService,\r\n    }),\r\n    BullModule.forRoot({\r\n      redis: {\r\n        host: 'localhost',\r\n        port: 6379,\r\n      },\r\n    }),\r\n\r\n    ScheduleModule.forRoot(),\r\n    AuthModule,\r\n    JobModule,\r\n    ClockingModule,\r\n    EquipmentModule,\r\n    ApiAdminModule,\r\n    ApiReportModule,\r\n    ApiEmailModule,\r\n    ApiSettingsModule,\r\n    ApiSharedModule,\r\n    CompanyModule,\r\n  ],\r\n  controllers: [],\r\n  providers: [\r\n    UserSubscriber,\r\n    AdminResolver,\r\n    EquipmentResolver,\r\n    UserResolver,\r\n    UserTypeResolver,\r\n    SettingsResolver,\r\n    ClockingResolver,\r\n    JobResolver,\r\n    BuilderResolver,\r\n    GuardService,\r\n    StaffResolver,\r\n    ReportResolver,\r\n    LogInWithCredentialsGuard,\r\n    CronService,\r\n    CompanyResolver,\r\n    {\r\n      provide: APP_GUARD,\r\n      useFactory: (reflector, guardService) => {\r\n        return new ClaimAuthGuard(reflector, guardService);\r\n      },\r\n      inject: [Reflector, GuardService],\r\n    },\r\n  ],\r\n  exports: [ConfigModule],\r\n})\r\nexport class CoreModule {\r\n  constructor(\r\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\r\n  ) {\r\n    this.logger.info('Application startup');\r\n    this.logger.info('Timezone ' + process.env.TZ);\r\n    this.logger.info('Timezone shift ' + new Date().getTimezoneOffset());\r\n  }\r\n}\r\n","export * from './lib/role.entity';\r\nexport * from './lib/activity.entity';\r\nexport * from './lib/user.entity';\r\nexport * from './lib/job.entity';\r\nexport * from './lib/equipment.entity';\r\nexport * from './lib/clockIn.entity';\r\nexport * from './lib/clockOff.entity';\r\nexport * from './lib/token.entity';\r\nexport * from './lib/company.entity';\r\nexport * from './lib/event-subscriber/user-subscriber';\r\n","import {\r\n  Column,\r\n  CreateDateColumn,\r\n  Entity,\r\n  ManyToMany,\r\n  PrimaryGeneratedColumn,\r\n  UpdateDateColumn,\r\n} from 'typeorm';\r\nimport { Job } from './job.entity';\r\n\r\n@Entity()\r\nexport class Activity {\r\n  @PrimaryGeneratedColumn()\r\n  public id?: number;\r\n\r\n  @Column('text')\r\n  public type: string;\r\n\r\n  @Column('timestamptz', { nullable: true })\r\n  public date: Date;\r\n\r\n  @ManyToMany(() => Job, (job) => job.activity, { onDelete: 'CASCADE' })\r\n  jobs?: Job[];\r\n}\r\n","import {\r\n  Column,\r\n  CreateDateColumn,\r\n  Entity,\r\n  ManyToOne,\r\n  PrimaryGeneratedColumn,\r\n  UpdateDateColumn,\r\n} from 'typeorm';\r\nimport { Job } from '..';\r\nimport { User } from './user.entity';\r\n\r\n@Entity()\r\nexport class ClockIn {\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @ManyToOne(() => Job, (job) => job.clockIns, {\r\n    onDelete: 'CASCADE',\r\n  })\r\n  job: Job;\r\n\r\n  @ManyToOne(() => User, (user) => user.clockIns, {\r\n    onDelete: 'SET NULL',\r\n    nullable: true,\r\n  })\r\n  staff: User;\r\n\r\n  @Column('float')\r\n  lat: number;\r\n\r\n  @Column('float')\r\n  lng: number;\r\n\r\n  @Column('timestamptz')\r\n  clockInTime: Date;\r\n\r\n  @Column('text', { array: true, nullable: true })\r\n  images: string[];\r\n\r\n  @CreateDateColumn() createdAt: Date;\r\n\r\n  @UpdateDateColumn() updatedAt: Date;\r\n}\r\n","import {\r\n  Column,\r\n  CreateDateColumn,\r\n  Entity,\r\n  ManyToOne,\r\n  PrimaryGeneratedColumn,\r\n  UpdateDateColumn,\r\n} from 'typeorm';\r\nimport { Job } from '..';\r\nimport { User } from './user.entity';\r\n\r\n@Entity()\r\nexport class ClockOff {\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @ManyToOne(() => Job, (job) => job.clockOffs, {\r\n    onDelete: 'CASCADE',\r\n  })\r\n  job: Job;\r\n\r\n  @ManyToOne(() => User, (user) => user.clockOffs, {\r\n    onDelete: 'SET NULL',\r\n    nullable: true,\r\n  })\r\n  staff: User;\r\n\r\n  @Column('text')\r\n  notes: string;\r\n\r\n  @Column('timestamptz')\r\n  clockOffTime: Date;\r\n\r\n  @Column({ type: 'integer', nullable: false, default: 0 })\r\n  totalTimeWorked: number;\r\n\r\n  @Column('text', { array: true, nullable: true })\r\n  images: string[];\r\n\r\n  @CreateDateColumn() createdAt: Date;\r\n\r\n  @UpdateDateColumn() updatedAt: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  DeepPartial,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  CreateDateColumn,\r\n  UpdateDateColumn,\r\n  OneToMany,\r\n} from 'typeorm';\r\nimport { User } from '..';\r\n\r\n@Entity()\r\nexport class Company {\r\n  constructor(input?: DeepPartial<Company>) {\r\n    if (input) {\r\n      for (const [key, value] of Object.entries(input)) {\r\n        (this as any)[key] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @Column({ type: 'text', unique: true })\r\n  public name: string;\r\n\r\n  @OneToMany(() => User, (user) => user.role)\r\n  users: User[];\r\n\r\n  @CreateDateColumn() createdAt: Date;\r\n\r\n  @UpdateDateColumn() updatedAt: Date;\r\n}\r\n","import {\r\n  Column,\r\n  CreateDateColumn,\r\n  Entity,\r\n  ManyToMany,\r\n  PrimaryGeneratedColumn,\r\n  UpdateDateColumn,\r\n} from 'typeorm';\r\nimport { Job } from './job.entity';\r\n\r\n@Entity()\r\nexport class Equipment {\r\n  @PrimaryGeneratedColumn()\r\n  public id: number;\r\n\r\n  @Column('text')\r\n  public name: string;\r\n\r\n  @ManyToMany(() => Job, (job) => job.equipment, {\r\n    onDelete: 'CASCADE',\r\n  })\r\n  jobs: Job[];\r\n\r\n  @CreateDateColumn() createdAt: Date;\r\n\r\n  @UpdateDateColumn() updatedAt: Date;\r\n}\r\n","import {\r\n  Connection,\r\n  EntitySubscriberInterface,\r\n  EventSubscriber,\r\n  InsertEvent,\r\n  UpdateEvent,\r\n} from 'typeorm';\r\nimport { User } from '../user.entity';\r\nimport * as bcrypt from 'bcrypt';\r\n\r\n@EventSubscriber()\r\nexport class UserSubscriber implements EntitySubscriberInterface<User> {\r\n  constructor(connection: Connection) {\r\n    connection.subscribers.push(this);\r\n  }\r\n\r\n  listenTo() {\r\n    return User;\r\n  }\r\n\r\n  async beforeInsert(event: InsertEvent<User>) {\r\n    event.entity.password = await bcrypt.hash(event.entity.password, 10);\r\n  }\r\n\r\n  async beforeUpdate(event: UpdateEvent<User>) {\r\n    if (\r\n      event?.entity?.password &&\r\n      event.entity.password.length &&\r\n      event.entity.password !== event.databaseEntity.password\r\n    ) {\r\n      event.entity.password = await bcrypt.hash(event.entity.password, 10);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  UpdateDateColumn,\r\n  ManyToMany,\r\n  JoinTable,\r\n  Column,\r\n  ManyToOne,\r\n  DeepPartial,\r\n  OneToMany,\r\n} from 'typeorm';\r\nimport { Equipment } from './equipment.entity';\r\nimport { Activity } from './activity.entity';\r\nimport { User } from './user.entity';\r\nimport { ClockIn } from './clockIn.entity';\r\nimport { ClockOff } from './clockOff.entity';\r\nenum JobStatus {\r\n  Assigned = 'assigned',\r\n  UnAssigned = 'unAssigned',\r\n  Cancelled = 'cancelled',\r\n  Completed = 'completed',\r\n  InProgress = 'inProgress',\r\n  Pending = 'pending',\r\n}\r\n@Entity()\r\nexport class Job {\r\n  constructor(input?: DeepPartial<Job>) {\r\n    if (input) {\r\n      for (const [key, value] of Object.entries(input)) {\r\n        (this as any)[key] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @Column('text')\r\n  public address: string;\r\n\r\n  @Column({ default: '' })\r\n  public notes: string;\r\n\r\n  @Column({ default: '' })\r\n  public priority: string;\r\n\r\n  @Column({ default: '' })\r\n  public stage: string;\r\n\r\n  @Column('float', { nullable: true })\r\n  lat: number | undefined;\r\n\r\n  @Column('float', { nullable: true })\r\n  lng: number | undefined;\r\n\r\n  @Column('text')\r\n  public status: JobStatus;\r\n\r\n  @Column('text', { nullable: true })\r\n  public poFile: string;\r\n\r\n  @Column('timestamptz')\r\n  requestDate: Date;\r\n\r\n  @Column({ default: false })\r\n  reminderSent: boolean;\r\n\r\n  @ManyToOne(() => User, (user) => user.jobRequests, {\r\n    eager: true,\r\n    nullable: true,\r\n    onDelete: 'SET NULL',\r\n  })\r\n  builder: User;\r\n\r\n  @OneToMany(() => ClockIn, (clockIn) => clockIn.job)\r\n  clockIns: ClockIn[];\r\n\r\n  @OneToMany(() => ClockOff, (clockOff) => clockOff.job)\r\n  clockOffs: ClockOff[];\r\n\r\n  @ManyToMany(() => User, (user) => user.jobs)\r\n  @JoinTable({ name: 'job_staff' })\r\n  staff: User[];\r\n\r\n  @ManyToMany(() => Equipment, (equipment) => equipment.jobs, {\r\n    cascade: true,\r\n  })\r\n  @JoinTable({ name: 'job_equipment' })\r\n  equipment: Equipment[];\r\n\r\n  @ManyToMany(() => Activity, (activity) => activity.jobs, {\r\n    cascade: true,\r\n  })\r\n  @JoinTable({ name: 'job_activity' })\r\n  activity: Activity[];\r\n\r\n  @CreateDateColumn() createdAt: Date;\r\n\r\n  @UpdateDateColumn() updatedAt: Date;\r\n}\r\n","import {\r\n  Column,\r\n  CreateDateColumn,\r\n  Entity,\r\n  OneToMany,\r\n  PrimaryGeneratedColumn,\r\n  UpdateDateColumn,\r\n} from 'typeorm';\r\nimport { User } from './user.entity';\r\nexport enum RoleType {\r\n  Admin = 'admin',\r\n  Builder = 'builder',\r\n  Laborer = 'laborer',\r\n  Operator = 'operator',\r\n}\r\n@Entity()\r\nexport class Role {\r\n  protected constructor(input?: Role) {\r\n    if (input) {\r\n      for (const [key, value] of Object.entries(input)) {\r\n        (this as any)[key] = value;\r\n      }\r\n    }\r\n  }\r\n  @PrimaryGeneratedColumn()\r\n  public id: number;\r\n\r\n  @Column({ unique: true, type: 'text' })\r\n  public name: RoleType;\r\n\r\n  @OneToMany(() => User, (user) => user.role)\r\n  users: User[];\r\n\r\n  @CreateDateColumn() createdAt: Date;\r\n\r\n  @UpdateDateColumn() updatedAt: Date;\r\n}\r\n","import {\r\n  Column,\r\n  Entity,\r\n  JoinColumn,\r\n  OneToOne,\r\n  PrimaryGeneratedColumn,\r\n} from 'typeorm';\r\nimport { User } from './user.entity';\r\nimport { Exclude } from 'class-transformer';\r\n\r\n@Entity()\r\nexport class Token {\r\n  @PrimaryGeneratedColumn()\r\n  public id: number;\r\n\r\n  @Column({\r\n    type: 'text',\r\n    nullable: true,\r\n  })\r\n  @Exclude()\r\n  resetPasswordToken: string | null;\r\n\r\n  @Column({\r\n    type: 'timestamptz',\r\n    nullable: true,\r\n  })\r\n  resetPasswordExpires: string | null;\r\n\r\n  @Column({\r\n    type: 'text',\r\n    nullable: true,\r\n  })\r\n  @Exclude()\r\n  verifyEmailToken: string | null;\r\n\r\n  @Column({\r\n    type: 'timestamptz',\r\n    nullable: true,\r\n  })\r\n  verifyEmailExpires: string | null;\r\n\r\n  @Column({\r\n    type: 'text',\r\n    nullable: true,\r\n  })\r\n  @Exclude()\r\n  builderLoginToken: string | null;\r\n\r\n  @Column({\r\n    type: 'timestamptz',\r\n    nullable: true,\r\n  })\r\n  builderLoginExpire: string | null;\r\n\r\n  @OneToOne(() => User, (user) => user.token, {\r\n    onDelete: 'CASCADE',\r\n  })\r\n  @JoinColumn()\r\n  user: User;\r\n}\r\n","import {\r\n  Column,\r\n  CreateDateColumn,\r\n  Entity,\r\n  ManyToMany,\r\n  ManyToOne,\r\n  OneToMany,\r\n  OneToOne,\r\n  PrimaryGeneratedColumn,\r\n  UpdateDateColumn,\r\n} from 'typeorm';\r\nimport { Exclude } from 'class-transformer';\r\nimport { Role } from './role.entity';\r\nimport { Job } from './job.entity';\r\nimport { ClockIn } from './clockIn.entity';\r\nimport { ClockOff } from './clockOff.entity';\r\nimport { Token } from './token.entity';\r\nimport { Company } from '..';\r\n\r\n@Entity()\r\nexport class User {\r\n  protected constructor(input?: Partial<User>) {\r\n    if (input) {\r\n      for (const [key, value] of Object.entries(input)) {\r\n        (this as any)[key] = value;\r\n      }\r\n    }\r\n  }\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @Column({ unique: true })\r\n  email: string;\r\n\r\n  @Column()\r\n  name: string;\r\n\r\n  @Column()\r\n  @Exclude()\r\n  password: string;\r\n\r\n  @ManyToOne(() => Role, (role) => role.users, {\r\n    eager: true,\r\n  })\r\n  role: Role;\r\n\r\n  @ManyToOne(() => Company, (item) => item.users, {\r\n    eager: true,\r\n  })\r\n  company?: Company;\r\n\r\n  @ManyToMany(() => Job, (job) => job.staff)\r\n  jobs: Job[];\r\n\r\n  @OneToMany(() => Job, (job) => job.builder)\r\n  jobRequests: Job[];\r\n\r\n  @OneToMany(() => ClockIn, (clockIn) => clockIn.staff)\r\n  clockIns: ClockIn[];\r\n\r\n  @OneToMany(() => ClockOff, (clockOff) => clockOff.staff)\r\n  clockOffs: ClockOff[];\r\n\r\n  @OneToOne(() => Token, (token) => token.user)\r\n  token: Token;\r\n\r\n  @Column({ default: false })\r\n  emailVerified: boolean;\r\n\r\n  @CreateDateColumn() createdAt: Date;\r\n\r\n  @UpdateDateColumn() updatedAt: Date;\r\n\r\n  getRole() {\r\n    return this.role.name;\r\n  }\r\n}\r\n","import { HttpStatus, Inject, Injectable } from '@nestjs/common';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { GqlModuleOptions, GqlOptionsFactory } from '@nestjs/graphql';\r\nimport { buildContext } from 'graphql-passport';\r\nimport { GqlContext } from '@dfobobcat/api/shared/model';\r\nimport { UserService } from '@dfobobcat/api/shared/service';\r\nimport { GraphQLUpload } from 'apollo-server-express';\r\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\r\nimport { Logger } from 'winston';\r\n// import { DateValidatorDirective } from './dateValidator.directive';\r\n@Injectable()\r\nexport class GraphqlService implements GqlOptionsFactory {\r\n  constructor(\r\n    private configService: ConfigService,\r\n    private userService: UserService,\r\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\r\n  ) {}\r\n  async createGqlOptions(): Promise<GqlModuleOptions> {\r\n    return {\r\n      // fieldResolverEnhancers: ['guards'],\r\n      typePaths: ['./**/*.graphql'],\r\n      resolvers: {\r\n        Upload: GraphQLUpload,\r\n      },\r\n      // uploads: {\r\n      //   maxFieldSize: 524288000,\r\n      // },\r\n      path: '/graphql',\r\n      cors: {\r\n        origin: this.configService.get('ALLOWED_ORIGINS').split(','),\r\n        credentials: true,\r\n      },\r\n      bodyParserConfig: { limit: '50mb' },\r\n      introspection: false,\r\n      context: async ({ req, res, connection }): Promise<GqlContext> => {\r\n        return buildContext({ req, res, User: req.user });\r\n      },\r\n      formatError: (error) => {\r\n        this.logger.error(error);\r\n        // user must only see specific error messages\r\n        if (error.extensions?.code !== 'BAD_USER_INPUT') {\r\n          return {\r\n            message:\r\n              'Sorry, something went wrong! We are already working on it.',\r\n            code: error.extensions?.code || 'SERVER_ERROR',\r\n            statusCode:\r\n              error.extensions?.exception?.status ||\r\n              HttpStatus.INTERNAL_SERVER_ERROR,\r\n          };\r\n        }\r\n        return {\r\n          message: error.message,\r\n          code: error.extensions?.code || 'SERVER_ERROR',\r\n          statusCode:\r\n            error.extensions?.exception?.status ||\r\n            HttpStatus.INTERNAL_SERVER_ERROR,\r\n        };\r\n      },\r\n      debug: false,\r\n\r\n      formatResponse: (response) => {\r\n        return response;\r\n      },\r\n      schemaDirectives: {\r\n        // dateValidator: DateValidatorDirective,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { WinstonModule, WINSTON_MODULE_PROVIDER } from 'nest-winston';\r\nimport * as winston from 'winston';\r\nimport { format, transports } from 'winston';\r\n\r\n@Injectable()\r\nexport class WinstonConfigService {\r\n  constructor(private configService: ConfigService) {}\r\n  async createWinstonModuleOptions() {\r\n    return {\r\n      format: format.combine(\r\n        format.timestamp({\r\n          format: 'YYYY-MM-DD HH:mm:ss',\r\n        }),\r\n        format.printf(\r\n          (info) =>\r\n            `${info.timestamp} ${info.level}: ${JSON.stringify(info)}` +\r\n            (info.splat !== undefined ? `${info.splat}` : ' '),\r\n        ),\r\n      ),\r\n      transports: [\r\n        new transports.File({\r\n          filename: this.configService.get('LOG_FILE_PATH'),\r\n        }),\r\n        new transports.Console(),\r\n      ],\r\n    };\r\n  }\r\n}\r\n","export * from './lib/admin.resolver';\r\nexport * from './lib/builder.resolver';\r\nexport * from './lib/clocking.resolver';\r\nexport * from './lib/equipment.resolver';\r\nexport * from './lib/job.resolver';\r\nexport * from './lib/staff.resolver';\r\nexport * from './lib/user.resolver';\r\nexport * from './lib/settings.resolver';\r\nexport * from './lib/report.resolver';\r\nexport * from './lib/company.resolver';\r\n","import { Args, Context, Mutation, Resolver, Query } from '@nestjs/graphql';\r\nimport {\r\n  UpdateUserInput,\r\n  Success,\r\n  UsersQueryVariables,\r\n} from '@dfobobcat/graphql-types';\r\nimport { AdminService } from '@dfobobcat/api/feature/admin';\r\nimport { RequireClaim } from '@dfobobcat/api/auth';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\n@Resolver()\r\nexport class AdminResolver {\r\n  constructor(private adminService: AdminService) {}\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.UpdateAllUsers)\r\n  async updateUser(\r\n    @Context() ctx: any,\r\n    @Args('input') args: UpdateUserInput,\r\n  ): Promise<Success> {\r\n    return { success: await this.adminService.updateUser(ctx, args) };\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.DeleteAllUsers)\r\n  async deleteUser(\r\n    @Context() ctx: any,\r\n    @Args('userId') userId: number,\r\n  ): Promise<Success> {\r\n    return { success: await this.adminService.deleteUser(userId) };\r\n  }\r\n\r\n  @Query()\r\n  @RequireClaim(Claim.GetAllUsers)\r\n  async users(@Args() args: UsersQueryVariables) {\r\n    return this.adminService.getUsers(args);\r\n  }\r\n  @Query()\r\n  @RequireClaim(Claim.GetAllRoles)\r\n  async staffRoles() {\r\n    return this.adminService.staffRoles();\r\n  }\r\n}\r\n","import { Parent, ResolveField, Resolver, Args } from '@nestjs/graphql';\r\n\r\nimport { User } from '@dfobobcat/api/entity';\r\nimport { BuilderJobService } from '@dfobobcat/api/feature/job';\r\nimport { BuilderJobRequestsArgs } from '@dfobobcat/graphql-types';\r\n@Resolver('Builder')\r\nexport class BuilderResolver {\r\n  constructor(private builderJobService: BuilderJobService) {}\r\n\r\n  @ResolveField()\r\n  async jobRequests(\r\n    @Parent() builder: User,\r\n    @Args() args: BuilderJobRequestsArgs,\r\n  ) {\r\n    const { id } = builder;\r\n    return this.builderJobService.getBuilderJobs(id, args);\r\n  }\r\n}\r\n","import { Args, Context, Mutation, Resolver } from '@nestjs/graphql';\r\nimport { RequireClaim } from '@dfobobcat/api/auth';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\nimport { ClockingService } from '@dfobobcat/api/feature/clocking';\r\nimport { AddClockInInput, AddClockOffInput } from '@dfobobcat/graphql-types';\r\n\r\n@Resolver()\r\nexport class ClockingResolver {\r\n  constructor(private clockingService: ClockingService) {}\r\n  @Mutation()\r\n  @RequireClaim(Claim.AddClockIn)\r\n  async addClockIn(@Context() ctx: any, @Args('input') args: AddClockInInput) {\r\n    return await this.clockingService.addClockIn(ctx, args);\r\n  }\r\n  @Mutation()\r\n  @RequireClaim(Claim.AddClockOff)\r\n  async addClockOff(\r\n    @Context() ctx: any,\r\n    @Args('input') args: AddClockOffInput,\r\n  ) {\r\n    return { success: await this.clockingService.addClockOff(ctx, args) };\r\n  }\r\n}\r\n","import { Args, Context, Mutation, Query, Resolver } from '@nestjs/graphql';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\nimport { RequireClaim } from '@dfobobcat/api/auth';\r\nimport { CompanyService } from '@dfobobcat/api/feature/company';\r\nimport { AddCompanyInput } from '@dfobobcat/graphql-types';\r\n\r\n@Resolver()\r\nexport class CompanyResolver {\r\n  constructor(private companyService: CompanyService) {}\r\n  @Query()\r\n  @RequireClaim(Claim.PublicMethod)\r\n  async companies() {\r\n    return await this.companyService.getCompanies();\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.AddCompany)\r\n  async addCompany(@Context() ctx: any, @Args('input') args: AddCompanyInput) {\r\n    return { success: await this.companyService.addCompany(args) };\r\n  }\r\n}\r\n","import { Query, Resolver } from '@nestjs/graphql';\r\nimport { EquipmentService } from '@dfobobcat/api/feature/equipment';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\nimport { RequireClaim } from '@dfobobcat/api/auth';\r\n\r\n@Resolver()\r\nexport class EquipmentResolver {\r\n  constructor(private equipmentService: EquipmentService) {}\r\n  @Query()\r\n  @RequireClaim(Claim.Authenticated)\r\n  async equipment() {\r\n    return await this.equipmentService.getEquipment();\r\n  }\r\n}\r\n","import {\r\n  Args,\r\n  Context,\r\n  Mutation,\r\n  Parent,\r\n  Query,\r\n  ResolveField,\r\n  Resolver,\r\n} from '@nestjs/graphql';\r\nimport {\r\n  AssignToJobInput,\r\n  CreateJobInput,\r\n  QueryJobArgs,\r\n  QueryJobsArgs,\r\n  UpdateJobInput,\r\n  UpdateJobDateInput,\r\n} from '@dfobobcat/graphql-types';\r\nimport { RequireClaim, AuthCallback } from '@dfobobcat/api/auth';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\nimport { JobService } from '@dfobobcat/api/feature/job';\r\nimport { Job } from '@dfobobcat/api/entity';\r\n@Resolver('Job')\r\nexport class JobResolver {\r\n  constructor(private jobService: JobService) {}\r\n\r\n  @ResolveField()\r\n  @RequireClaim(Claim.GetAllClockOffs)\r\n  async clockOffs(@Parent() job: Job) {\r\n    const { id } = job;\r\n    return this.jobService.getJobClockOffs(id);\r\n  }\r\n\r\n  @ResolveField()\r\n  @RequireClaim(Claim.GetAllClockIns)\r\n  async clockIns(@Parent() job: Job) {\r\n    const { id } = job;\r\n    return this.jobService.getJobClockIns(id);\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.CreateJob)\r\n  async createJob(@Context() ctx: any, @Args('input') args: CreateJobInput) {\r\n    return { success: await this.jobService.createJob(ctx, args) };\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.UpdateOwnJob)\r\n  async updateJob(@Context() ctx: any, @Args('input') args: UpdateJobInput) {\r\n    return { success: await this.jobService.updateJob(ctx, args) };\r\n  }\r\n  @Mutation()\r\n  @RequireClaim(Claim.UpdateOwnJob)\r\n  async updateJobDate(\r\n    @Context() ctx: any,\r\n    @Args('input') args: UpdateJobDateInput,\r\n  ) {\r\n    return { success: await this.jobService.updateJobDate(ctx, args) };\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.CancelOwnJob)\r\n  async cancelJob(@Context() ctx: any, @Args('jobId') jobId: number) {\r\n    return { success: await this.jobService.cancelJob(ctx, jobId) };\r\n  }\r\n\r\n  @Query()\r\n  @AuthCallback((guardService, ctx, args) => guardService.canGetJob(ctx, args))\r\n  async job(@Args() args: QueryJobArgs) {\r\n    return this.jobService.getJob(args.id);\r\n  }\r\n\r\n  @Query()\r\n  @RequireClaim(Claim.GetAllJobs)\r\n  async jobs(@Args() args: QueryJobsArgs) {\r\n    return this.jobService.getJobs(args);\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.AssignToJob)\r\n  async assignToJob(\r\n    @Context() ctx: any,\r\n    @Args('input') args: AssignToJobInput,\r\n  ) {\r\n    return { success: await this.jobService.assignToJob(ctx, args) };\r\n  }\r\n}\r\n","import { Args, Query, ResolveField, Resolver } from '@nestjs/graphql';\r\n\r\nimport { RequireClaim } from '@dfobobcat/api/auth';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\nimport {\r\n  ReportJobsForDateArgs,\r\n  ReportTotalWorkedHoursArgs,\r\n  ReportJobsForDateFullListArgs,\r\n} from '@dfobobcat/graphql-types';\r\nimport { ReportService } from '@dfobobcat/api/feature/report';\r\n@Resolver('Report')\r\nexport class ReportResolver {\r\n  constructor(private reportService: ReportService) {}\r\n\r\n  @Query()\r\n  @RequireClaim(Claim.GetAllReports)\r\n  report() {\r\n    return {};\r\n  }\r\n\r\n  @ResolveField()\r\n  async totalWorkedHours(@Args() args: ReportTotalWorkedHoursArgs) {\r\n    return this.reportService.getTotalWorkedHours(args);\r\n  }\r\n\r\n  @ResolveField()\r\n  async jobsForDate(@Args() args: ReportJobsForDateArgs) {\r\n    return this.reportService.getJobsForDate(args);\r\n  }\r\n\r\n  @ResolveField()\r\n  async jobsForDateFullList(@Args() args: ReportJobsForDateFullListArgs) {\r\n    return this.reportService.getJobsForDateFullList(args);\r\n  }\r\n}\r\n","import { Resolver, Query } from '@nestjs/graphql';\r\n\r\n\r\nimport { RequireClaim } from '@dfobobcat/api/auth';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\nimport { SettingsService } from '@dfobobcat/api/feature/settings';\r\n@Resolver()\r\nexport class SettingsResolver {\r\n  constructor(private settingsService: SettingsService) {}\r\n\r\n  @Query()\r\n  @RequireClaim(Claim.Authenticated)\r\n  async settings() {\r\n    return this.settingsService.getSettings();\r\n  }\r\n}\r\n","import { Args, Parent, ResolveField, Resolver } from '@nestjs/graphql';\r\n\r\nimport { User } from '@dfobobcat/api/entity';\r\nimport { StaffJobService } from '@dfobobcat/api/feature/job';\r\nimport {\r\n  JobFilter,\r\n  StaffAssignedJobsArgs,\r\n  StaffHasClockedIntoJobArgs,\r\n} from '@dfobobcat/graphql-types';\r\nimport { ReportService } from '@dfobobcat/api/feature/report';\r\nimport { ClockingService } from '@dfobobcat/api/feature/clocking';\r\n\r\n@Resolver('Staff')\r\nexport class StaffResolver {\r\n  constructor(\r\n    private staffJobService: StaffJobService,\r\n    private reportService: ReportService,\r\n    private clockingService: ClockingService,\r\n  ) {}\r\n\r\n  @ResolveField()\r\n  async assignedJobs(\r\n    @Parent() user: User,\r\n    @Args() args: StaffAssignedJobsArgs,\r\n  ) {\r\n    const { id } = user;\r\n    const filter = args.filter ? args.filter : JobFilter.Upcoming;\r\n\r\n    return this.staffJobService.getStaffJobs(id, args);\r\n  }\r\n\r\n  @ResolveField()\r\n  async todaysAssignedJob(@Parent() user: User) {\r\n    const { id } = user;\r\n    return this.staffJobService.getTodaysAssignedJob(id);\r\n  }\r\n\r\n  @ResolveField()\r\n  async hasClockedIntoJob(\r\n    @Parent() user: User,\r\n    @Args() { id }: StaffHasClockedIntoJobArgs,\r\n  ) {\r\n    const { id: userId } = user;\r\n\r\n    return this.clockingService.hasClockedInToJob(id, userId);\r\n  }\r\n}\r\n","import {\r\n  Args,\r\n  Context,\r\n  Mutation,\r\n  Query,\r\n  ResolveProperty,\r\n  Resolver,\r\n} from '@nestjs/graphql';\r\n\r\nimport { RequireClaim } from '@dfobobcat/api/auth';\r\nimport { Claim } from '@dfobobcat/api/shared/const';\r\nimport { UserService } from '@dfobobcat/api/shared/service';\r\nimport { User } from '@dfobobcat/api/entity';\r\nimport {\r\n  RoleType,\r\n  UpdateMyAccountMutationVariables,\r\n} from '@dfobobcat/graphql-types';\r\nimport { UserError } from '@dfobobcat/api/shared/exception';\r\n@Resolver()\r\nexport class UserResolver {\r\n  constructor(private userService: UserService) {}\r\n\r\n  @Query()\r\n  @RequireClaim(Claim.Authenticated)\r\n  async me(@Context() ctx: any) {\r\n    const user = ctx.getUser();\r\n    return this.userService.getById(user.id);\r\n  }\r\n\r\n  @Query()\r\n  @RequireClaim(Claim.GetAllUsers)\r\n  async user(@Args('id') id: number) {\r\n    return this.userService.getById(id);\r\n  }\r\n\r\n  @Mutation()\r\n  @RequireClaim(Claim.UpdateOwnAccount)\r\n  updateMyAccount(\r\n    @Context() ctx: any,\r\n    @Args() args: UpdateMyAccountMutationVariables,\r\n  ) {\r\n    return this.userService.updateUserAccount(ctx?.getUser()?.id, args);\r\n  }\r\n}\r\n@Resolver('User')\r\nexport class UserTypeResolver {\r\n  @ResolveProperty()\r\n  __resolveType(user: User) {\r\n    if (user.role.name === RoleType.Builder) {\r\n      return 'Builder';\r\n    } else if (\r\n      user.role.name === RoleType.Laborer ||\r\n      user.role.name === RoleType.Operator\r\n    ) {\r\n      return 'Staff';\r\n    } else if (user.role.name === RoleType.Admin) {\r\n      return 'Admin';\r\n    }\r\n    throw new UserError('Role does not exist');\r\n  }\r\n}\r\n","export * from './lib/cron.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport { Job } from '@dfobobcat/api/entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { EmailService, EmailType } from '@dfobobcat/api/email';\r\nimport { Cron } from '@nestjs/schedule';\r\nimport { JobStatus } from '@dfobobcat/graphql-types';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { TimeZoneService } from '@dfobobcat/api/shared/service';\r\n@Injectable()\r\nexport class CronService {\r\n  constructor(\r\n    @InjectRepository(Job)\r\n    private jobsRepository: Repository<Job>,\r\n    private emailService: EmailService,\r\n    private configService: ConfigService,\r\n    private tzService: TimeZoneService,\r\n  ) {}\r\n\r\n  @Cron('* 1 * * * *')\r\n  async jobReminder() {\r\n    const jobs = await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .leftJoinAndSelect('job.staff', 'staff')\r\n      .innerJoinAndSelect('job.builder', 'builder')\r\n      .where(\r\n        `job.\"requestDate\" >= NOW() AND job.\"requestDate\" < NOW() + INTERVAL '24 hours'`,\r\n      )\r\n      .andWhere('job.status != :cancelled', { cancelled: JobStatus.Cancelled })\r\n      .getMany();\r\n    for (const job of jobs) {\r\n      //TODO: add logs\r\n      if (job.reminderSent) {\r\n        continue;\r\n      }\r\n      const staffUsers = job.staff;\r\n      const builder = job.builder;\r\n      const requestDate = this.tzService.convertToTZ(job.requestDate);\r\n      const jobInfo = `${requestDate} - ${job.address}`;\r\n\r\n      job.reminderSent = true;\r\n      await this.jobsRepository.save(job);\r\n\r\n      // send to staff\r\n      for (const user of staffUsers) {\r\n        this.emailService.sendEmail<EmailType.STAFF_JOB_REMINDER>(\r\n          user.email,\r\n          EmailType.STAFF_JOB_REMINDER,\r\n          {\r\n            jobInfo,\r\n            username: user.name,\r\n            requestDate,\r\n          },\r\n        );\r\n      }\r\n\r\n      // send to builders\r\n      const loginEditJobLink = `${this.configService.get(\r\n        'LOGIN_EDIT_JOB_LINK',\r\n      )}${job.id}?login_token=${builder.token.builderLoginToken}`;\r\n      this.emailService.sendEmail<EmailType.BUILDER_JOB_REMINDER>(\r\n        builder.email,\r\n        EmailType.BUILDER_JOB_REMINDER,\r\n        {\r\n          jobInfo,\r\n          username: builder.name,\r\n          loginEditJobLink,\r\n          requestDate,\r\n        },\r\n      );\r\n    }\r\n  }\r\n}\r\n","export * from './lib/api-email.module';\r\nexport * from './lib/service/email.service';\r\nexport * from './lib/types';\r\n","import { Module } from '@nestjs/common';\r\nimport { ConfigModule } from '@nestjs/config';\r\nimport { EmailService } from './service/email.service';\r\n\r\n@Module({\r\n  controllers: [],\r\n  providers: [EmailService],\r\n  exports: [EmailService],\r\n  imports: [ConfigModule],\r\n})\r\nexport class ApiEmailModule {}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { EmailParams, EmailType, EMAIL_SUBJECT } from '../types';\r\nimport * as handlebars from 'handlebars';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport * as nodemailer from 'nodemailer';\r\n@Injectable()\r\nexport class EmailService {\r\n  constructor(private config: ConfigService) {}\r\n  private emailDir: string = this.config.get('EMAIL_DIR') as string;\r\n  sendEmail<T extends keyof EmailParams>(\r\n    to: string[] | string,\r\n    type: EmailType,\r\n    params: EmailParams[T] = {} as EmailParams[T],\r\n  ): void {\r\n    const templatePath = path.join(this.emailDir, `${type}.html`);\r\n    const emailContent = fs.readFileSync(\r\n      path.resolve(__dirname, templatePath),\r\n      'utf8',\r\n    );\r\n    const template = handlebars.compile(emailContent);\r\n    const subject = `DFO Scheduler: ${EMAIL_SUBJECT[type]}`;\r\n    const html = template({ ...params, topic: EMAIL_SUBJECT[type] });\r\n    this.send(to, subject, html);\r\n  }\r\n\r\n  private send(to: string[] | string, subject: string, html: string) {\r\n    const config = {\r\n      from: this.config.get('EMAIL_FROM'),\r\n      to,\r\n      subject,\r\n      html,\r\n    };\r\n\r\n    let transport: nodemailer.Transporter;\r\n    if (this.config.get('APP_ENV') === 'production') {\r\n      transport = nodemailer.createTransport({\r\n        service: 'Mailgun',\r\n        auth: {\r\n          user: this.config.get('EMAIL_USER'),\r\n          pass: this.config.get('EMAIL_PASSWORD'),\r\n        },\r\n      });\r\n    } else {\r\n      transport = nodemailer.createTransport({\r\n        host: this.config.get('EMAIL_HOST'),\r\n        port: this.config.get('EMAIL_PORT'),\r\n        auth: {\r\n          user: this.config.get('EMAIL_USER'),\r\n          pass: this.config.get('EMAIL_PASSWORD'),\r\n        },\r\n      });\r\n    }\r\n\r\n    transport\r\n      .sendMail(config)\r\n      .then()\r\n      .catch((err) => {\r\n        // TODO: log error\r\n        // eslint-disable-next-line no-console\r\n        console.log('Email result', err.message);\r\n      });\r\n    return;\r\n  }\r\n}\r\n","export enum EmailType {\r\n  FORGOT_PASSWORD = 'restore_password',\r\n  BUILDER_SIGNUP = 'signup',\r\n  VERIFY_EMAIL = 'verify_email',\r\n  BUILDER_JOB_CREATED = 'builder_job_created',\r\n  ADMIN_JOB_CREATED = 'admin_job_created',\r\n  BUILDER_JOB_ASSIGNED = 'builder_job_assigned',\r\n  BUILDER_JOB_UNASSIGNED = 'builder_job_unassigned',\r\n\r\n  STAFF_JOB_ASSIGNED = 'staff_job_assigned',\r\n  STAFF_JOB_UNASSIGNED = 'staff_job_unassigned',\r\n\r\n  BUILDER_JOB_RESCHEDULED = 'builder_job_rescheduled',\r\n  STAFF_JOB_RESCHEDULED = 'staff_job_rescheduled',\r\n  ADMIN_JOB_RESCHEDULED = 'admin_job_rescheduled',\r\n  BUILDER_JOB_CANCELLED = 'builder_job_cancelled',\r\n  STAFF_JOB_CANCELLED = 'staff_job_cancelled',\r\n  ADMIN_JOB_CANCELLED = 'admin_job_cancelled',\r\n  BUILDER_JOB_REMINDER = 'builder_job_reminder',\r\n  STAFF_JOB_REMINDER = 'staff_job_reminder',\r\n}\r\n\r\ninterface DefaultParams {\r\n  username: string;\r\n}\r\ninterface BuilderSignupParams extends DefaultParams {\r\n  email: string;\r\n  password: string;\r\n  url: string;\r\n}\r\ninterface ForgotPasswordParams extends DefaultParams {\r\n  url: string;\r\n}\r\ninterface VerifyEmailParams extends DefaultParams {\r\n  url: string;\r\n}\r\ninterface JobCreatedParams extends DefaultParams {\r\n  jobInfo: string;\r\n  loginEditJobLink?: string;\r\n}\r\ninterface JobAssignedParams extends DefaultParams {\r\n  jobInfo: string;\r\n  requestDate: string;\r\n  loginEditJobLink?: string;\r\n  jobAddress: string;\r\n}\r\ninterface JobRescheduleParams extends DefaultParams {\r\n  jobInfo: string;\r\n  oldRequestDate: string;\r\n  newRequestDate: string;\r\n  loginEditJobLink?: string;\r\n  jobAddress: string;\r\n}\r\ninterface JobCancelledParams extends DefaultParams {\r\n  jobInfo: string;\r\n  requestDate: string;\r\n}\r\ninterface JobReminderParams extends DefaultParams {\r\n  jobInfo: string;\r\n  loginEditJobLink?: string;\r\n  requestDate: string;\r\n}\r\nexport interface EmailParams {\r\n  [EmailType.FORGOT_PASSWORD]: ForgotPasswordParams;\r\n  [EmailType.BUILDER_SIGNUP]: BuilderSignupParams;\r\n  [EmailType.VERIFY_EMAIL]: VerifyEmailParams;\r\n  [EmailType.BUILDER_JOB_CREATED]: JobCreatedParams;\r\n  [EmailType.ADMIN_JOB_CREATED]: JobCreatedParams;\r\n  [EmailType.BUILDER_JOB_ASSIGNED]: JobAssignedParams;\r\n  [EmailType.BUILDER_JOB_UNASSIGNED]: JobAssignedParams;\r\n  [EmailType.STAFF_JOB_ASSIGNED]: JobAssignedParams;\r\n  [EmailType.STAFF_JOB_UNASSIGNED]: JobAssignedParams;\r\n  [EmailType.BUILDER_JOB_RESCHEDULED]: JobRescheduleParams;\r\n  [EmailType.STAFF_JOB_RESCHEDULED]: JobRescheduleParams;\r\n  [EmailType.ADMIN_JOB_RESCHEDULED]: JobRescheduleParams;\r\n  [EmailType.BUILDER_JOB_CANCELLED]: JobCancelledParams;\r\n  [EmailType.STAFF_JOB_CANCELLED]: JobCancelledParams;\r\n  [EmailType.ADMIN_JOB_CANCELLED]: JobCancelledParams;\r\n  [EmailType.BUILDER_JOB_REMINDER]: JobReminderParams;\r\n  [EmailType.STAFF_JOB_REMINDER]: JobReminderParams;\r\n}\r\n\r\nexport const EMAIL_SUBJECT: Record<EmailType, string> = {\r\n  [EmailType.FORGOT_PASSWORD]: 'Restore your password',\r\n  [EmailType.BUILDER_SIGNUP]: 'Registration Complete',\r\n  [EmailType.VERIFY_EMAIL]: 'Verify your email address',\r\n  [EmailType.BUILDER_JOB_CREATED]: 'Job created',\r\n  [EmailType.ADMIN_JOB_CREATED]: 'Job created',\r\n  [EmailType.BUILDER_JOB_ASSIGNED]: 'Job assigned',\r\n  [EmailType.BUILDER_JOB_UNASSIGNED]: 'Job unassigned',\r\n\r\n  [EmailType.STAFF_JOB_ASSIGNED]: 'Job assigned',\r\n  [EmailType.STAFF_JOB_UNASSIGNED]: 'Job unassigned',\r\n\r\n  [EmailType.BUILDER_JOB_RESCHEDULED]: 'Job rescheduled',\r\n  [EmailType.STAFF_JOB_RESCHEDULED]: 'Job rescheduled',\r\n  [EmailType.ADMIN_JOB_RESCHEDULED]: 'Job rescheduled',\r\n  [EmailType.BUILDER_JOB_CANCELLED]: 'Job cancelled',\r\n  [EmailType.STAFF_JOB_CANCELLED]: 'Job cancelled',\r\n  [EmailType.ADMIN_JOB_CANCELLED]: 'Job cancelled',\r\n  [EmailType.BUILDER_JOB_REMINDER]: 'Job starts in 24 hours',\r\n  [EmailType.STAFF_JOB_REMINDER]: 'Job starts in 24 hours',\r\n};\r\n","export * from './lib/equipment.module';\r\nexport * from './lib/service/equipment.service';\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Equipment } from '@dfobobcat/api/entity';\r\nimport { ConfigModule } from '@nestjs/config';\r\nimport { EquipmentService } from './service/equipment.service';\r\n\r\n@Module({\r\n  imports: [TypeOrmModule.forFeature([Equipment]), ConfigModule],\r\n  providers: [EquipmentService],\r\n  exports: [EquipmentService],\r\n})\r\nexport class EquipmentModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Equipment } from '@dfobobcat/api/entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class EquipmentService {\r\n  constructor(\r\n    @InjectRepository(Equipment)\r\n    private equipmentRepository: Repository<Equipment>,\r\n  ) {}\r\n\r\n  async getEquipment() {\r\n    return await this.equipmentRepository.find();\r\n  }\r\n}\r\n","export * from './lib/service/job.service';\r\nexport * from './lib/service/builder-job.service';\r\nexport * from './lib/service/staff-job.service';\r\nexport * from './job.module';\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { JobService } from './lib/service/job.service';\r\nimport { Job, Equipment, User, ClockIn, ClockOff, Activity } from '@dfobobcat/api/entity';\r\nimport { ConfigModule } from '@nestjs/config';\r\nimport { StaffJobService } from './lib/service/staff-job.service';\r\nimport { BuilderJobService } from './lib/service/builder-job.service';\r\nimport { ApiSharedModule } from '@dfobobcat/api/shared/module';\r\nimport { ApiEmailModule } from '@dfobobcat/api/email';\r\n@Module({\r\n  imports: [\r\n    TypeOrmModule.forFeature([ClockIn, ClockOff, Job, Equipment, User, Activity]),\r\n    ConfigModule,\r\n    ApiSharedModule,\r\n    ApiEmailModule,\r\n    ApiSharedModule,\r\n  ],\r\n  providers: [JobService, StaffJobService, BuilderJobService],\r\n  exports: [JobService, StaffJobService, BuilderJobService],\r\n})\r\nexport class JobModule {}\r\n","import { ConfigService } from '@nestjs/config';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Job, Equipment, User, ClockOff } from '@dfobobcat/api/entity';\r\nimport { BuilderJobRequestsArgs, JobStatus } from '@dfobobcat/graphql-types';\r\n\r\nexport class BuilderJobService {\r\n  constructor(\r\n    @InjectRepository(Job)\r\n    private jobsRepository: Repository<Job>,\r\n    @InjectRepository(User)\r\n    private usersRepository: Repository<User>,\r\n    @InjectRepository(Equipment)\r\n    private equipmentsRepository: Repository<Equipment>,\r\n    @InjectRepository(ClockOff)\r\n    private clockOffRepository: Repository<ClockOff>,\r\n    private config: ConfigService,\r\n  ) {}\r\n\r\n  public async getBuilderJobs(builderId: number, args: BuilderJobRequestsArgs) {\r\n    const status = args.status ? args.status : JobStatus.Assigned;\r\n    const query = this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .leftJoinAndSelect('job.equipment', 'equipment')\r\n      .leftJoinAndSelect('job.activity', 'activity')\r\n      .where('job.builder.id = :builderId', { builderId });\r\n\r\n    if (status) {\r\n      query.andWhere('job.status = :status', { status });\r\n    }\r\n\r\n    if (\r\n      args.search &&\r\n      typeof args.search === 'string' &&\r\n      args.search.length > 0\r\n    ) {\r\n      query.andWhere('LOWER(job.address) like :address', {\r\n        address: `%${args.search.toLowerCase()}%`,\r\n      });\r\n    }\r\n\r\n     const results = await query\r\n      .orderBy('job.requestDate', 'DESC');\r\n    const builderJobs = await results.getMany();\r\n    return builderJobs\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { Brackets, Repository } from 'typeorm';\r\nimport {\r\n  AssignToJobInput,\r\n  CreateJobInput,\r\n  QueryJobsArgs,\r\n  UpdateJobInput,\r\n  UpdateJobDateInput,\r\n} from '@dfobobcat/graphql-types';\r\nimport {\r\n  User,\r\n  Job,\r\n  Equipment,\r\n  ClockOff,\r\n  Activity,\r\n  ClockIn,\r\n} from '@dfobobcat/api/entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Claim, Range } from '@dfobobcat/api/shared/const';\r\nimport { JobStatus } from '@dfobobcat/graphql-types';\r\nimport { defineAbilityFor } from '@dfobobcat/api/auth/util';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { join } from 'path';\r\nimport { createWriteStream, existsSync, mkdirSync, unlink } from 'fs';\r\nimport { BuilderJobService } from './builder-job.service';\r\n\r\nimport { getTodayStart } from '@dfobobcat/api/shared/tool';\r\n\r\nimport { UserError } from '@dfobobcat/api/shared/exception';\r\nimport {\r\n  getOrderAndDirection,\r\n  getRandomString,\r\n} from '@dfobobcat/api/shared/tool';\r\nimport { EmailService, EmailType } from '@dfobobcat/api/email';\r\nimport {\r\n  TimeZoneService,\r\n  BuilderUtilService,\r\n} from '@dfobobcat/api/shared/service';\r\ninterface PlainJob {\r\n  staff: Array<{\r\n    name: string;\r\n    email: string;\r\n  }>;\r\n  address: string;\r\n  requestDate: Date;\r\n}\r\n\r\n@Injectable()\r\nexport class JobService {\r\n  constructor(\r\n    @InjectRepository(Job)\r\n    private jobsRepository: Repository<Job>,\r\n    @InjectRepository(User)\r\n    private usersRepository: Repository<User>,\r\n    @InjectRepository(Equipment)\r\n    private equipmentsRepository: Repository<Equipment>,\r\n    @InjectRepository(Activity)\r\n    private activityRepository: Repository<Activity>,\r\n    @InjectRepository(ClockOff)\r\n    private clockOffRepository: Repository<ClockOff>,\r\n    @InjectRepository(ClockIn)\r\n    private clockInRepository: Repository<ClockIn>,\r\n    private config: ConfigService,\r\n    private builderJobService: BuilderJobService,\r\n    private builderUtilService: BuilderUtilService,\r\n    private emailService: EmailService,\r\n    private tzService: TimeZoneService,\r\n  ) {}\r\n\r\n  async getJob(jobId: number) {\r\n    const result = await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .leftJoinAndSelect('job.equipment', 'equipment')\r\n      .leftJoinAndSelect('job.builder', 'builder')\r\n      .where('job.id = :jobId', { jobId })\r\n      .orderBy()\r\n      .getOneOrFail();\r\n    return result;\r\n  }\r\n\r\n  public async getJobs(args: QueryJobsArgs) {\r\n    const status = args.status ? args.status : [JobStatus.Assigned];\r\n    const offset = args.pagination?.offset ? args.pagination.offset : 9;\r\n    const page = args.pagination?.page ? args.pagination.page : 0;\r\n    const staffFilter = args?.staff;\r\n    const skip = page * offset;\r\n\r\n    const queryIds = this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .select('job.id');\r\n    if (staffFilter) {\r\n      queryIds.innerJoin(\r\n        'job.staff',\r\n        'staff',\r\n        'staff.id IN (:...staffFilter)',\r\n        {\r\n          staffFilter,\r\n        },\r\n      );\r\n    }\r\n\r\n    if (status) {\r\n      queryIds.where('job.status IN (:...status)', { status });\r\n    }\r\n    if (args.filteredDate?.calendarType === Range.Day) {\r\n      queryIds.andWhere(\r\n        `DATE(job.requestDate) >= DATE(:startDate) AND DATE(job.requestDate) <= DATE(:startDate)`,\r\n        { startDate: args.filteredDate?.startDate },\r\n      );\r\n    } else if (args.filteredDate?.calendarType === Range.Week) {\r\n      queryIds.andWhere(\r\n        `DATE(job.requestDate) >= DATE(:startDate) AND DATE(job.requestDate) <= DATE(:endDate)`,\r\n        {\r\n          startDate: args.filteredDate?.startDate,\r\n          endDate: args.filteredDate?.endDate,\r\n        },\r\n      );\r\n    } else if (args.filteredDate?.calendarType === Range.Month) {\r\n      queryIds.andWhere(\r\n        `DATE(job.requestDate) >= DATE(:currentDate) AND DATE(job.requestDate) <= DATE(:endDate)`,\r\n        {\r\n          currentDate: args.filteredDate?.startDate,\r\n          endDate: args.filteredDate?.endDate,\r\n        },\r\n      );\r\n    }\r\n\r\n    if (args.search && args.search.length > 0) {\r\n      queryIds.andWhere('LOWER(job.address) like :address', {\r\n        address: `%${args.search.toLowerCase()}%`,\r\n      });\r\n    }\r\n\r\n    const query = this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .where(`job.id IN (${queryIds.getQuery()})`)\r\n      .setParameters(queryIds.getParameters())\r\n      .leftJoinAndSelect('job.equipment', 'equipment')\r\n      .leftJoinAndSelect('job.builder', 'builder')\r\n      .leftJoinAndSelect('job.activity', 'activity');\r\n\r\n    const totalClone = query.clone();\r\n    const total = await totalClone.getCount();\r\n    const hasNextPage = total > (page + 1) * offset;\r\n    const hasPreviousPage = page > 0;\r\n    const nextPage = hasNextPage ? page + 1 : undefined;\r\n    const previousPage = hasPreviousPage ? page - 1 : undefined;\r\n\r\n    let orderBy = getOrderAndDirection(args.orderBy);\r\n    let jobs;\r\n    if (!orderBy) {\r\n      orderBy = ['job.id', 'ASC'];\r\n    }\r\n\r\n    if (args.filteredDate) {\r\n      orderBy = ['job.requestDate', 'ASC'];\r\n      jobs = await query.orderBy(...orderBy).getMany();\r\n    } else {\r\n      jobs = await query\r\n        .orderBy(...orderBy)\r\n        .take(offset)\r\n        .skip(skip)\r\n        .getMany();\r\n    }\r\n\r\n    return {\r\n      items: jobs,\r\n      pageInfo: {\r\n        hasNextPage,\r\n        hasPreviousPage,\r\n        nextPage,\r\n        previousPage,\r\n      },\r\n    };\r\n  }\r\n\r\n  async createJob(ctx: any, args: CreateJobInput): Promise<boolean> {\r\n    let builder;\r\n    let activity = [];\r\n    const user = ctx.getUser();\r\n    const {\r\n      address,\r\n      lat,\r\n      lng,\r\n      requestDate,\r\n      notes,\r\n      priority,\r\n      stage,\r\n      adminSelectedBuilder,\r\n      type,\r\n      time,\r\n    } = args;\r\n    const status = JobStatus.Pending;\r\n    const equipment = await this.builderUtilService.findByIdsOrThrow(\r\n      this.equipmentsRepository,\r\n      args.equipment,\r\n    );\r\n    activity.push({ type: status, date: new Date() });\r\n    if (adminSelectedBuilder) {\r\n      builder = await this.usersRepository.findOneOrFail(adminSelectedBuilder, {\r\n        relations: ['token'],\r\n      });\r\n    } else {\r\n      builder = await this.usersRepository.findOneOrFail(user.id, {\r\n        relations: ['token'],\r\n      });\r\n    }\r\n    const job = new Job({\r\n      address,\r\n      lat,\r\n      lng,\r\n      requestDate: requestDate,\r\n      equipment,\r\n      builder,\r\n      status,\r\n      notes,\r\n      priority,\r\n      stage,\r\n      activity,\r\n    });\r\n    await this.jobsRepository.save(job);\r\n\r\n    const jobInfo = `${this.tzService.convertToTZ(\r\n      new Date(job.requestDate),\r\n    )} - ${job.address}`;\r\n    const loginEditJobLink = `${this.config.get('LOGIN_EDIT_JOB_LINK')}${\r\n      job.id\r\n    }?login_token=${builder.token.builderLoginToken}`;\r\n    //send to builder\r\n    this.emailService.sendEmail<EmailType.BUILDER_JOB_CREATED>(\r\n      job.builder.email,\r\n      EmailType.BUILDER_JOB_CREATED,\r\n      {\r\n        jobInfo,\r\n        loginEditJobLink,\r\n        username: job.builder.name,\r\n      },\r\n    );\r\n    // send to admin\r\n    const adminEmail = this.config.get('ADMIN_EMAIL');\r\n    if (adminEmail) {\r\n      this.emailService.sendEmail<EmailType.ADMIN_JOB_CREATED>(\r\n        adminEmail,\r\n        EmailType.ADMIN_JOB_CREATED,\r\n        {\r\n          jobInfo,\r\n          username: job.builder.name,\r\n        },\r\n      );\r\n    }\r\n\r\n    let fileName;\r\n    if (args.poFile) {\r\n      const file = args.poFile;\r\n      const { createReadStream, mimetype } = await file;\r\n\r\n      const allowedTypes = ['application/pdf'];\r\n      if (!allowedTypes.includes(mimetype)) {\r\n        throw new UserError('Allowed file types: *.pdf');\r\n      }\r\n      const folder = join(\r\n        this.config.get('UPLOADS_PATH') as string,\r\n        'po',\r\n        `${job.id}`,\r\n      );\r\n      try {\r\n        if (!existsSync(folder)) {\r\n          mkdirSync(folder, { recursive: true });\r\n        }\r\n      } catch (err) {\r\n        // TODO: log this\r\n      }\r\n      fileName = `${getRandomString()}.pdf`;\r\n      const poFilePath = join(folder, fileName);\r\n      const writeStream = createWriteStream(poFilePath);\r\n      const readStream = createReadStream();\r\n\r\n      // TODO: if error writing file\r\n      readStream.pipe(writeStream);\r\n\r\n      job.poFile = fileName;\r\n      await this.jobsRepository.save(job);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  async updateJob(ctx: any, args: UpdateJobInput): Promise<boolean> {\r\n    const { address, lat, lng, id, priority } = args;\r\n    const requestDate = new Date(args.requestDate);\r\n\r\n    let isReschedule = false;\r\n\r\n    const user = ctx.getUser();\r\n    let job = await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .innerJoinAndSelect('job.builder', 'builder')\r\n      .leftJoinAndSelect('job.staff', 'staff')\r\n      .where('job.id = :jobId', { jobId: id })\r\n      .getOne();\r\n    if (!job) {\r\n      throw new UserError('Job was not found.');\r\n    }\r\n    const builder = await this.usersRepository.findOneOrFail(\r\n      { id: job.builder.id },\r\n      { relations: ['token'] },\r\n    );\r\n    const ability = defineAbilityFor(ctx);\r\n    if (\r\n      ability.cannot(Claim.UpdateAllJobs) &&\r\n      (!this.isOwnJob(user, job) || ability.cannot(Claim.UpdateOwnJob))\r\n    ) {\r\n      //TODO: log this\r\n      throw new UserError();\r\n    }\r\n\r\n    if (args.poFile) {\r\n      const file = args.poFile;\r\n      const { createReadStream, mimetype } = await file;\r\n\r\n      const allowedTypes = ['application/pdf'];\r\n      if (!allowedTypes.includes(mimetype)) {\r\n        throw new UserError('Allowed file types: *.pdf');\r\n      }\r\n      const folder = join(\r\n        this.config.get('UPLOADS_PATH') as string,\r\n        'po',\r\n        `${job.id}`,\r\n      );\r\n      try {\r\n        if (!existsSync(folder)) {\r\n          mkdirSync(folder, { recursive: true });\r\n        }\r\n      } catch (err) {\r\n        // TODO: log this\r\n      }\r\n\r\n      const fileName = `${getRandomString()}.pdf`;\r\n      const poFilePath = join(folder, fileName);\r\n      const writeStream = createWriteStream(poFilePath);\r\n      const readStream = createReadStream();\r\n\r\n      // TODO: if error writing file\r\n      readStream.pipe(writeStream);\r\n\r\n      const oldFile = job.poFile;\r\n      if (oldFile && existsSync(join(folder, oldFile))) {\r\n        unlink(join(folder, oldFile), (err) => {\r\n          // TODO: log this\r\n        });\r\n      }\r\n\r\n      job.poFile = fileName;\r\n    }\r\n\r\n    const equipment = await this.builderUtilService.findByIdsOrThrow(\r\n      this.equipmentsRepository,\r\n      args.equipment,\r\n    );\r\n\r\n    if (job.requestDate.toISOString() !== requestDate.toISOString()) {\r\n      isReschedule = true;\r\n    }\r\n\r\n    const oldJobData: PlainJob = {\r\n      requestDate: new Date(job.requestDate),\r\n      address: job.address,\r\n      staff: job.staff.map((item) => ({\r\n        name: item.name,\r\n        email: item.email,\r\n      })),\r\n    };\r\n    const updatedActivity: any = job.activity || [];\r\n    updatedActivity.push({ type: 'updated', date: new Date().toISOString() });\r\n\r\n    job = {\r\n      ...job,\r\n      address,\r\n      lat,\r\n      lng,\r\n      requestDate: new Date(requestDate),\r\n      equipment,\r\n      reminderSent: false,\r\n      staff: isReschedule ? [] : job.staff,\r\n      status: isReschedule ? JobStatus.Pending : job.status,\r\n      activity: updatedActivity,\r\n      priority,\r\n    };\r\n    await this.jobsRepository.save(job);\r\n\r\n    if (isReschedule) {\r\n      const oldRequestDate = this.tzService.convertToTZ(oldJobData.requestDate);\r\n      const newRequestDate = this.tzService.convertToTZ(job.requestDate);\r\n      const jobInfo = `${this.tzService.convertToTZ(\r\n        oldJobData.requestDate,\r\n      )} - ${oldJobData.address}`;\r\n      // Send to staff\r\n      for (const staff of oldJobData.staff) {\r\n        this.emailService.sendEmail<EmailType.STAFF_JOB_RESCHEDULED>(\r\n          staff.email,\r\n          EmailType.STAFF_JOB_RESCHEDULED,\r\n          {\r\n            jobAddress: oldJobData.address,\r\n            jobInfo,\r\n            username: staff.name,\r\n            oldRequestDate,\r\n            newRequestDate,\r\n          },\r\n        );\r\n      }\r\n      // Send To builder\r\n      const loginEditJobLink = `${this.config.get('LOGIN_EDIT_JOB_LINK')}${\r\n        job.id\r\n      }?login_token=${builder.token.builderLoginToken}`;\r\n      this.emailService.sendEmail<EmailType.BUILDER_JOB_RESCHEDULED>(\r\n        job.builder.email,\r\n        EmailType.BUILDER_JOB_RESCHEDULED,\r\n        {\r\n          jobAddress: oldJobData.address,\r\n          loginEditJobLink,\r\n          jobInfo,\r\n          oldRequestDate,\r\n          newRequestDate,\r\n          username: user.name,\r\n        },\r\n      );\r\n\r\n      if (this.config.get('ADMIN_EMAIL')) {\r\n        // Send To admin\r\n        this.emailService.sendEmail<EmailType.ADMIN_JOB_RESCHEDULED>(\r\n          this.config.get('ADMIN_EMAIL') as string,\r\n          EmailType.ADMIN_JOB_RESCHEDULED,\r\n          {\r\n            jobAddress: oldJobData.address,\r\n            jobInfo,\r\n            oldRequestDate,\r\n            newRequestDate,\r\n            username: user.name,\r\n          },\r\n        );\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n  async updateJobDate(ctx: any, args: UpdateJobDateInput): Promise<boolean> {\r\n    const { id } = args;\r\n    const requestDate = new Date(args.requestDate);\r\n    let isReschedule = false;\r\n    const user = ctx.getUser();\r\n    let job = await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .innerJoinAndSelect('job.builder', 'builder')\r\n      .leftJoinAndSelect('job.staff', 'staff')\r\n      .where('job.id = :jobId', { jobId: id })\r\n      .getOne();\r\n    if (!job) {\r\n      throw new UserError('Job was not found.');\r\n    }\r\n    const builder = await this.usersRepository.findOneOrFail(\r\n      { id: job.builder.id },\r\n      { relations: ['token'] },\r\n    );\r\n\r\n    if (job.requestDate.toISOString() !== requestDate.toISOString()) {\r\n      isReschedule = true;\r\n    }\r\n    const oldJobData = {\r\n      requestDate: new Date(job.requestDate),\r\n      address: job.address,\r\n      staff: job.staff.map((item) => ({\r\n        name: item.name,\r\n        email: item.email,\r\n      })),\r\n    };\r\n    const updatedActivity: any = job.activity || [];\r\n    updatedActivity.push({ type: 'updated', date: new Date().toISOString() });\r\n\r\n    job = {\r\n      ...job,\r\n      requestDate: new Date(requestDate),\r\n      reminderSent: false,\r\n      staff: isReschedule ? [] : job.staff,\r\n      status: isReschedule ? JobStatus.Pending : job.status,\r\n      activity: updatedActivity,\r\n    };\r\n    await this.jobsRepository.save(job);\r\n    const oldRequestDate = this.tzService.convertToTZ(oldJobData.requestDate);\r\n    const newRequestDate = this.tzService.convertToTZ(job.requestDate);\r\n    const jobInfo = `${this.tzService.convertToTZ(oldJobData.requestDate)} - ${\r\n      oldJobData.address\r\n    }`;\r\n    // Send to staff\r\n    for (const staff of oldJobData.staff) {\r\n      this.emailService.sendEmail<EmailType.STAFF_JOB_RESCHEDULED>(\r\n        staff.email,\r\n        EmailType.STAFF_JOB_RESCHEDULED,\r\n        {\r\n          jobAddress: oldJobData.address,\r\n          jobInfo,\r\n          username: staff.name,\r\n          oldRequestDate,\r\n          newRequestDate,\r\n        },\r\n      );\r\n    }\r\n    // Send To builder\r\n    if (builder.token?.builderLoginToken) {\r\n      const loginEditJobLink = `${this.config.get('LOGIN_EDIT_JOB_LINK')}${\r\n        job.id\r\n      }?login_token=${builder.token.builderLoginToken}`;\r\n      this.emailService.sendEmail<EmailType.BUILDER_JOB_RESCHEDULED>(\r\n        job.builder.email,\r\n        EmailType.BUILDER_JOB_RESCHEDULED,\r\n        {\r\n          jobAddress: oldJobData.address,\r\n          loginEditJobLink,\r\n          jobInfo,\r\n          oldRequestDate,\r\n          newRequestDate,\r\n          username: user.name,\r\n        },\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async assignToJob(ctx: any, args: AssignToJobInput): Promise<boolean> {\r\n    if (args.staffIds && args.staffIds.length > 3) {\r\n      throw new UserError('Cannot assign more than 3 people.');\r\n    }\r\n\r\n    const action = args.staffIds.length > 0 ? 'assign' : 'unassign';\r\n\r\n    const { jobId } = args;\r\n    const result: any = await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .leftJoinAndSelect('job.activity', 'activity')\r\n      .leftJoinAndSelect('job.builder', 'builder')\r\n      .leftJoinAndSelect('job.staff', 'staff')\r\n      .where('job.id = :jobId', { jobId });\r\n\r\n    const job = await result.getOne();\r\n    const staffUsers =\r\n      action === 'assign'\r\n        ? await this.builderUtilService.findByIdsOrThrow(\r\n            this.usersRepository,\r\n            args.staffIds,\r\n          )\r\n        : job.staff;\r\n\r\n    const builder = await this.usersRepository.findOne(\r\n      { id: job.builder.id },\r\n      { relations: ['token'] },\r\n    );\r\n\r\n    if (!builder) {\r\n      throw new UserError('The job has no builder.');\r\n    }\r\n\r\n    if (job.status === JobStatus.Cancelled) {\r\n      throw new UserError('Cannot assign or unassign to cancelled job.');\r\n    }\r\n\r\n    job.status =\r\n      action === 'assign' ? JobStatus.Assigned : JobStatus.UnAssigned;\r\n    job.staff = action === 'assign' ? staffUsers : [];\r\n\r\n    if (action === 'assign')\r\n      job.activity.push({ type: JobStatus.Assigned, date: new Date() });\r\n    else job.activity.push({ type: JobStatus.UnAssigned, date: new Date() });\r\n\r\n    console.log('job job==========', job);\r\n\r\n    await this.jobsRepository.save(job);\r\n    const requestDate = this.tzService.convertToTZ(job.requestDate);\r\n    const jobInfo = `${requestDate} - ${job.address}`;\r\n    const jobAddress = job.address;\r\n\r\n    const builderNotifyType =\r\n      action === 'assign'\r\n        ? EmailType.BUILDER_JOB_ASSIGNED\r\n        : EmailType.BUILDER_JOB_UNASSIGNED;\r\n\r\n    const stafferNotifyType =\r\n      action === 'assign'\r\n        ? EmailType.STAFF_JOB_ASSIGNED\r\n        : EmailType.STAFF_JOB_UNASSIGNED;\r\n\r\n    for (const user of staffUsers) {\r\n      this.emailService.sendEmail<typeof stafferNotifyType>(\r\n        user.email,\r\n        stafferNotifyType,\r\n        {\r\n          jobInfo,\r\n          requestDate,\r\n          jobAddress,\r\n          username: user.name,\r\n        },\r\n      );\r\n    }\r\n    if (builder.token?.builderLoginToken) {\r\n      const loginEditJobLink = `${this.config.get('LOGIN_EDIT_JOB_LINK')}${\r\n        job.id\r\n      }?login_token=${builder.token.builderLoginToken}`;\r\n      this.emailService.sendEmail<EmailType.BUILDER_JOB_ASSIGNED>(\r\n        job.builder.email,\r\n        EmailType.BUILDER_JOB_ASSIGNED,\r\n        {\r\n          jobInfo,\r\n          requestDate,\r\n          loginEditJobLink,\r\n          jobAddress,\r\n          username: builder.name,\r\n        },\r\n      );\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  async getJobClockOffs(jobId: number) {\r\n    return this.clockOffRepository\r\n      .createQueryBuilder('clockOff')\r\n      .innerJoinAndSelect('clockOff.job', 'job', 'job.id = :jobId', {\r\n        jobId,\r\n      })\r\n      .innerJoinAndSelect('clockOff.staff', 'staff')\r\n      .select([\r\n        'clockOff.id',\r\n        'clockOff.clockOffTime',\r\n        'clockOff.images',\r\n        'clockOff.notes',\r\n        'staff.name',\r\n        'job.address',\r\n      ])\r\n      .getMany();\r\n  }\r\n\r\n  async getJobClockIns(jobId: number) {\r\n    return this.clockInRepository\r\n      .createQueryBuilder('clockIn')\r\n      .innerJoinAndSelect('clockIn.job', 'job', 'job.id = :jobId', {\r\n        jobId,\r\n      })\r\n      .innerJoinAndSelect('clockIn.staff', 'staff')\r\n      .select([\r\n        'clockIn.id',\r\n        'clockIn.clockInTime',\r\n        'clockIn.images',\r\n        'staff.name',\r\n        'job.address',\r\n      ])\r\n      .getMany();\r\n  }\r\n\r\n  async cancelJob(ctx: any, jobId: number): Promise<boolean> {\r\n    const user = ctx.getUser();\r\n    const job = await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .innerJoinAndSelect('job.builder', 'builder')\r\n      .leftJoinAndSelect('job.staff', 'staff')\r\n      .leftJoinAndSelect('job.activity', 'activity')\r\n      .where('job.id = :jobId', { jobId })\r\n      .getOne();\r\n    if (!job) {\r\n      throw new UserError();\r\n    }\r\n\r\n    const ability = defineAbilityFor(ctx);\r\n    if (ability.cannot(Claim.CancelAllJobs) && !this.isOwnJob(user, job)) {\r\n      throw new UserError();\r\n    }\r\n\r\n    job.status = JobStatus.Cancelled;\r\n    job.activity.push({ type: JobStatus.Cancelled, date: new Date() });\r\n    await this.jobsRepository.save(job);\r\n\r\n    const requestDate = this.tzService.convertToTZ(job.requestDate);\r\n    const jobInfo = `${requestDate} - ${job.address}`;\r\n    for (const staffUser of job.staff) {\r\n      this.emailService.sendEmail<EmailType.STAFF_JOB_CANCELLED>(\r\n        staffUser.email,\r\n        EmailType.STAFF_JOB_CANCELLED,\r\n        {\r\n          jobInfo,\r\n          requestDate,\r\n          username: staffUser.name,\r\n        },\r\n      );\r\n    }\r\n    // Send To builder\r\n    this.emailService.sendEmail<EmailType.BUILDER_JOB_CANCELLED>(\r\n      user.email,\r\n      EmailType.BUILDER_JOB_CANCELLED,\r\n      {\r\n        jobInfo,\r\n        requestDate,\r\n        username: user.name,\r\n      },\r\n    );\r\n    // Send To admin\r\n    const adminEmail = this.config.get('ADMIN_EMAIL');\r\n    if (adminEmail) {\r\n      this.emailService.sendEmail<EmailType.ADMIN_JOB_CANCELLED>(\r\n        adminEmail,\r\n        EmailType.ADMIN_JOB_CANCELLED,\r\n        {\r\n          jobInfo,\r\n          requestDate,\r\n          username: user.name,\r\n        },\r\n      );\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private isOwnJob(user: User, job: Job): boolean {\r\n    return user.id === job.builder.id;\r\n  }\r\n}\r\n","import { ConfigService } from '@nestjs/config';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Job, Equipment, User, ClockOff } from '@dfobobcat/api/entity';\r\nimport {\r\n  JobStatus,\r\n  JobFilter,\r\n  StaffAssignedJobsArgs,\r\n} from '@dfobobcat/graphql-types';\r\nimport { getTodayStart } from '@dfobobcat/api/shared/tool';\r\nimport { ClockingCommonService } from '@dfobobcat/api/shared/service';\r\n\r\nexport class StaffJobService {\r\n  constructor(\r\n    @InjectRepository(Job)\r\n    private jobsRepository: Repository<Job>,\r\n    @InjectRepository(User)\r\n    private usersRepository: Repository<User>,\r\n    @InjectRepository(Equipment)\r\n    private equipmentsRepository: Repository<Equipment>,\r\n    @InjectRepository(ClockOff)\r\n    private clockOffRepository: Repository<ClockOff>,\r\n    private config: ConfigService,\r\n    private clockingCommonService: ClockingCommonService,\r\n  ) {}\r\n\r\n  async getStaffJobs(userId: number, args: StaffAssignedJobsArgs) {\r\n    let jobs: Job[] = [];\r\n    const filter = args.filter ? args.filter : JobFilter.Upcoming;\r\n\r\n    switch (filter) {\r\n      case JobFilter.Upcoming: {\r\n        jobs = await this.getUpcomingJobs(userId, args);\r\n        break;\r\n      }\r\n      case JobFilter.Past: {\r\n        jobs = await this.getPastJobs(userId, args);\r\n\r\n        break;\r\n      }\r\n      case JobFilter.Cancelled: {\r\n        jobs = await this.getCancelledJobs(userId, args);\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    return jobs;\r\n  }\r\n  private async getUpcomingJobs(\r\n    staffId: number,\r\n    args: StaffAssignedJobsArgs,\r\n  ): Promise<Job[]> {\r\n    const now = getTodayStart();\r\n    const query = this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .leftJoinAndSelect('job.equipment', 'equipment')\r\n      .innerJoin('job.staff', 'staff', 'staff.id = :staffId', { staffId })\r\n      .where('DATE(job.requestDate) >= DATE(:now)', {\r\n        now,\r\n      })\r\n      .andWhere('job.status IN (:...status)', {\r\n        status: [JobStatus.Assigned, JobStatus.InProgress],\r\n      });\r\n\r\n    const todayClockOffs = await this.clockingCommonService.getTodayClockOffs(\r\n      staffId,\r\n    );\r\n    if (todayClockOffs.length) {\r\n      query.andWhere('job.id NOT IN (:...jobsWithClockOffs)', {\r\n        jobsWithClockOffs: todayClockOffs.map((item) => item.job.id),\r\n      });\r\n    }\r\n\r\n    if (\r\n      args.search &&\r\n      typeof args.search === 'string' &&\r\n      args.search.length > 0\r\n    ) {\r\n      query.andWhere('LOWER(job.address) like :address', {\r\n        address: `%${args.search.toLowerCase()}%`,\r\n      });\r\n    }\r\n    query\r\n      .select([\r\n        'job.id',\r\n        'job.address',\r\n        'job.lat',\r\n        'job.lng',\r\n        'job.status',\r\n        'job.priority',\r\n        'job.requestDate',\r\n        'equipment.name',\r\n        'equipment.id',\r\n      ])\r\n      .orderBy('job.requestDate', 'DESC');\r\n\r\n    return query.getMany();\r\n  }\r\n  private async getPastJobs(\r\n    staffId: number,\r\n    args: StaffAssignedJobsArgs,\r\n  ): Promise<Job[]> {\r\n    const now = getTodayStart();\r\n\r\n    /**\r\n     * return jobs that\r\n     * 1) have status cancelled AND requested in teh past\r\n     * 2) jobs that have clock off for current user\r\n     */\r\n\r\n    const jobIdsWithClockOffs = await this.clockingCommonService.getStaffClocksOff(\r\n      staffId,\r\n    );\r\n\r\n    const query = this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .leftJoinAndSelect('job.equipment', 'equipment')\r\n      .innerJoin('job.staff', 'staff', 'staff.id = :staffId', { staffId });\r\n\r\n    if (jobIdsWithClockOffs.length) {\r\n      query\r\n        .where('job.id IN (:...jobIdsWithClockOffs)', {\r\n          jobIdsWithClockOffs: jobIdsWithClockOffs.map((item) => item.job.id),\r\n        })\r\n        .orWhere('job.requestDate < :now', {\r\n          now,\r\n        })\r\n        .andWhere('job.status != :status', { status: JobStatus.Cancelled });\r\n    } else {\r\n      query\r\n        .where('job.requestDate < :now', {\r\n          now,\r\n        })\r\n        .andWhere('job.status != :status', { status: JobStatus.Cancelled });\r\n    }\r\n\r\n    if (\r\n      args.search &&\r\n      typeof args.search === 'string' &&\r\n      args.search.length > 0\r\n    ) {\r\n      query.andWhere('LOWER(job.address) like :address', {\r\n        address: `%${args.search.toLowerCase()}%`,\r\n      });\r\n    }\r\n    query\r\n      .select([\r\n        'job.id',\r\n        'job.address',\r\n        'job.lat',\r\n        'job.lng',\r\n        'job.priority',\r\n        'job.status',\r\n        'job.requestDate',\r\n        'equipment.name',\r\n        'equipment.id',\r\n      ])\r\n      .orderBy('job.requestDate', 'DESC');\r\n\r\n    return query.getMany();\r\n  }\r\n  private async getCancelledJobs(\r\n    staffId: number,\r\n    args: StaffAssignedJobsArgs,\r\n  ): Promise<Job[]> {\r\n    const query = this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .leftJoinAndSelect('job.equipment', 'equipment')\r\n      .innerJoin('job.staff', 'staff', 'staff.id = :staffId', { staffId })\r\n      .where('job.status = :status', { status: JobStatus.Cancelled });\r\n    if (\r\n      args.search &&\r\n      typeof args.search === 'string' &&\r\n      args.search.length > 0\r\n    ) {\r\n      query.andWhere('LOWER(job.address) like :address', {\r\n        address: `%${args.search.toLowerCase()}%`,\r\n      });\r\n    }\r\n    query\r\n      .select([\r\n        'job.id',\r\n        'job.address',\r\n        'job.lat',\r\n        'job.lng',\r\n        'job.priority',\r\n        'job.status',\r\n        'job.requestDate',\r\n        'equipment.name',\r\n        'equipment.id',\r\n      ])\r\n      .orderBy('job.requestDate', 'DESC');\r\n\r\n    return query.getMany();\r\n  }\r\n\r\n  /**\r\n   * Returns job that current staff memeber has clocked in, but haven't clocked out yet\r\n   * @returns Job\r\n   */\r\n  public async getTodaysAssignedJob(staffId: number): Promise<Job | undefined> {\r\n    const now = getTodayStart();\r\n    const job = await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .innerJoin('job.staff', 'staff', 'staff.id = :staffId', {\r\n        staffId,\r\n      })\r\n      .innerJoin('job.clockIns', 'clockIns', 'clockIns.staff.id = :staffId', {\r\n        staffId,\r\n      })\r\n      .leftJoinAndSelect(\r\n        'job.clockOffs',\r\n        'clockOffs',\r\n        'clockOffs.staff.id = :staffId',\r\n        {\r\n          staffId,\r\n        },\r\n      )\r\n      .where(\r\n        `DATE(job.requestDate) >= DATE(:now) AND DATE(job.requestDate) < DATE(:now) + INTERVAL '1 DAY'`,\r\n        { now },\r\n      )\r\n      .andWhere('job.status IN (:...status)', {\r\n        status: [JobStatus.Assigned, JobStatus.InProgress],\r\n      })\r\n      .orderBy('job.requestDate', 'DESC')\r\n      .limit(1)\r\n      .getOne();\r\n\r\n    /**\r\n     * DO not get the equipment by doing joins in the queries above. It does not work.\r\n     */\r\n    if (job) {\r\n      const equipment = await this.jobsRepository\r\n        .createQueryBuilder('job')\r\n        .where('job.id = :jobId', { jobId: job.id })\r\n        .leftJoinAndSelect('job.equipment', 'equipment')\r\n        .select(['job.id', 'equipment.id', 'equipment.name'])\r\n        .getOne();\r\n\r\n      job.equipment = equipment.equipment;\r\n    }\r\n\r\n    if (!job || (job.clockOffs && job.clockOffs.length)) {\r\n      return undefined;\r\n    } else {\r\n      return job;\r\n    }\r\n  }\r\n}\r\n","export * from './lib/api-queue.module';\r\n","import { Module } from '@nestjs/common';\r\nimport { BullModule } from '@nestjs/bull';\r\n\r\n@Module({\r\n  controllers: [],\r\n  providers: [],\r\n  exports: [BullModule],\r\n  imports: [\r\n    BullModule.registerQueue({\r\n      name: 'image',\r\n    }),\r\n  ],\r\n})\r\nexport class ApiQueueModule {}\r\n","export * from './lib/api-report.module';\r\nexport * from './lib/service/report.service';\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport {\r\n  ClockIn,\r\n  ClockOff,\r\n  Job,\r\n  Equipment,\r\n  User,\r\n  Role,\r\n} from '@dfobobcat/api/entity';\r\nimport { ReportService } from './service/report.service';\r\n\r\n@Module({\r\n  controllers: [],\r\n  imports: [\r\n    TypeOrmModule.forFeature([ClockIn, ClockOff, Job, Equipment, User, Role]),\r\n  ],\r\n  providers: [ReportService],\r\n  exports: [ReportService],\r\n})\r\nexport class ApiReportModule {}\r\n","import { Repository } from 'typeorm';\r\n\r\nimport { User, Role as RoleEntity, ClockOff, Job } from '@dfobobcat/api/entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { getOrderAndDirection } from '@dfobobcat/api/shared/tool';\r\nimport {\r\n  JobStatus,\r\n  ReportJobsForDateArgs,\r\n  TotalWorkedHoursQueryVariables,\r\n  ReportJobsForDateFullListArgs,\r\n  TotalWorkedHoursReportPaginated,\r\n} from '@dfobobcat/graphql-types';\r\nexport class ReportService {\r\n  constructor(\r\n    @InjectRepository(User)\r\n    private usersRepository: Repository<User>,\r\n    @InjectRepository(Job)\r\n    private jobsRepository: Repository<Job>,\r\n    @InjectRepository(ClockOff)\r\n    private clockOffRepository: Repository<ClockOff>,\r\n    @InjectRepository(RoleEntity)\r\n    private roleRepository: Repository<RoleEntity>,\r\n  ) {}\r\n\r\n  async getTotalWorkedHours(args: TotalWorkedHoursQueryVariables) {\r\n    const offset = args.pagination?.offset ? args.pagination.offset : 15;\r\n    const page = args.pagination?.page ? args.pagination.page : 0;\r\n    const skip = page * offset;\r\n\r\n    let orderBy = getOrderAndDirection(args.orderBy);\r\n    if (!orderBy) {\r\n      orderBy = ['user.name', 'ASC'];\r\n    }\r\n\r\n    const date = new Date();\r\n    const startDate = args.startDate\r\n      ? args.startDate\r\n      : new Date(date.getFullYear(), date.getMonth(), 1).toISOString();\r\n    const endDate = args.endDate\r\n      ? args.endDate\r\n      : new Date(date.getFullYear(), date.getMonth() + 1, 0).toISOString();\r\n\r\n    const query = this.usersRepository\r\n      .createQueryBuilder('user')\r\n      .innerJoin('user.role', 'role', 'role.name IN (:...staffRoles)', {\r\n        staffRoles: ['laborer', 'operator'],\r\n      });\r\n    if (args && args.search && args.search.length) {\r\n      if (args.search && args.search.length > 0) {\r\n        query.where('LOWER(user.name) like :name', {\r\n          name: `%${args.search.toLowerCase()}%`,\r\n        });\r\n      }\r\n    }\r\n\r\n    query\r\n      .leftJoinAndSelect(\r\n        'user.clockOffs',\r\n        'clockOff',\r\n        `DATE(clockOff.clockOffTime) >= DATE(:startDate) AND DATE(clockOff.clockOffTime) <= DATE(:endDate)`,\r\n        {\r\n          startDate,\r\n          endDate,\r\n        },\r\n      )\r\n      .select([\r\n        'user.id',\r\n        'user.name as name',\r\n        'user.email as email',\r\n        'SUM(clockOff.totalTimeWorked)::INTEGER AS \"totalWorkedHours\"',\r\n      ]);\r\n\r\n    const totalClone = query.clone();\r\n    const total = await totalClone.getCount();\r\n    const hasNextPage = total > (page + 1) * offset;\r\n    const hasPreviousPage = page > 0;\r\n    const nextPage = hasNextPage ? page + 1 : undefined;\r\n    const previousPage = hasPreviousPage ? page - 1 : undefined;\r\n    const r = {\r\n      items: await query\r\n        .orderBy(orderBy[0], orderBy[1], 'NULLS LAST')\r\n        .groupBy('user.id')\r\n        .offset(skip)\r\n        .limit(offset)\r\n        .getRawMany(),\r\n      pageInfo: {\r\n        hasNextPage,\r\n        hasPreviousPage,\r\n        nextPage,\r\n        previousPage,\r\n      },\r\n    };\r\n    return r;\r\n  }\r\n\r\n  async getJobsForDate(args: ReportJobsForDateArgs) {\r\n    const offset = args.pagination?.offset ? args.pagination.offset : 15;\r\n    const page = args.pagination?.page ? args.pagination.page : 0;\r\n    const skip = page * offset;\r\n\r\n    let orderBy = getOrderAndDirection(args.orderBy);\r\n    if (!orderBy) {\r\n      orderBy = ['job.address', 'ASC'];\r\n    }\r\n\r\n    const date = new Date();\r\n    const selectedDate = args.date\r\n      ? args.date\r\n      : new Date(date.getFullYear(), date.getMonth(), 1).toISOString();\r\n\r\n    const query = this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .where('DATE(job.requestDate) = DATE(:selectedDate)', { selectedDate })\r\n      .andWhere('job.status = :jobStatus', {\r\n        jobStatus: JobStatus.Completed,\r\n      });\r\n\r\n    const totalClone = query.clone();\r\n    const total = await totalClone.getCount();\r\n    const hasNextPage = total > (page + 1) * offset;\r\n    const hasPreviousPage = page > 0;\r\n    const nextPage = hasNextPage ? page + 1 : undefined;\r\n    const previousPage = hasPreviousPage ? page - 1 : undefined;\r\n\r\n    if (args && args.search && args.search.length) {\r\n      if (args.search && args.search.length > 0) {\r\n        query.andWhere('LOWER(job.address) like :name', {\r\n          name: `%${args.search.toLowerCase()}%`,\r\n        });\r\n      }\r\n    }\r\n    const queryIds = query.offset(skip).limit(offset).select('job.id');\r\n    const result = await this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .innerJoinAndSelect('job.staff', 'staff')\r\n      .innerJoinAndSelect('job.equipment', 'equipment')\r\n      .innerJoinAndSelect('job.builder', 'builder')\r\n      .where(`job.id IN (${queryIds.getQuery()})`)\r\n      .setParameters(queryIds.getParameters())\r\n      .orderBy(orderBy[0], orderBy[1], 'NULLS LAST')\r\n      .getMany();\r\n    return {\r\n      items: result,\r\n      pageInfo: {\r\n        hasNextPage,\r\n        hasPreviousPage,\r\n        nextPage,\r\n        previousPage,\r\n      },\r\n    };\r\n  }\r\n\r\n  async getJobsForDateFullList(args: ReportJobsForDateFullListArgs) {\r\n    let orderBy = getOrderAndDirection(args.orderBy);\r\n    if (!orderBy) {\r\n      orderBy = ['job.address', 'ASC'];\r\n    }\r\n\r\n    const date = new Date();\r\n    const selectedDate = args.date\r\n      ? args.date\r\n      : new Date(date.getFullYear(), date.getMonth(), 1).toISOString();\r\n\r\n    const query = this.jobsRepository\r\n      .createQueryBuilder('job')\r\n      .innerJoinAndSelect('job.staff', 'staff')\r\n      .innerJoinAndSelect('job.equipment', 'equipment')\r\n      .innerJoinAndSelect('job.builder', 'builder')\r\n      .where('DATE(job.requestDate) = DATE(:selectedDate)', { selectedDate })\r\n      .andWhere('job.status = :jobStatus', {\r\n        jobStatus: JobStatus.Completed,\r\n      });\r\n\r\n    if (args && args.search && args.search.length) {\r\n      if (args.search && args.search.length > 0) {\r\n        query.andWhere('LOWER(job.address) like :name', {\r\n          name: `%${args.search.toLowerCase()}%`,\r\n        });\r\n      }\r\n    }\r\n\r\n    const result = (\r\n      await query.orderBy(orderBy[0], orderBy[1], 'NULLS LAST').getMany()\r\n    ).map((item) => {\r\n      const equipment = item.equipment.map((item) => item.name).join(', ');\r\n      const staff = item.staff.map((item) => item.name).join(', ');\r\n\r\n      return {\r\n        ...item,\r\n        builder: item.builder.name,\r\n        equipment,\r\n        staff,\r\n        notes: '',\r\n        priority: '',\r\n        cost: '',\r\n      };\r\n    });\r\n\r\n    return result;\r\n  }\r\n}\r\n","export * from './lib/api-settings.module';\r\nexport * from './lib/settings.service';\r\n","import { Module } from '@nestjs/common';\r\nimport { SettingsService } from './settings.service';\r\n\r\n@Module({\r\n  controllers: [],\r\n  providers: [SettingsService],\r\n  exports: [SettingsService],\r\n})\r\nexport class ApiSettingsModule {}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { Settings } from '@dfobobcat/graphql-types';\r\n\r\n@Injectable()\r\nexport class SettingsService {\r\n  getSettings(): Settings {\r\n    const minJobRequestDate = new Date();\r\n    minJobRequestDate.setDate(minJobRequestDate.getDate() + 0);\r\n    return {\r\n      minJobRequestDate,\r\n    };\r\n  }\r\n}\r\n","export * from './lib/api-shared.module';\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { ClockIn, ClockOff, Equipment, Job, User } from '@dfobobcat/api/entity';\r\nimport {\r\n  BuilderUtilService,\r\n  ClockingCommonService,\r\n  TimeZoneService,\r\n} from '@dfobobcat/api/shared/service';\r\nimport { ConfigModule } from '@nestjs/config';\r\n\r\n@Module({\r\n  imports: [\r\n    TypeOrmModule.forFeature([ClockIn, ClockOff, Job, Equipment, User]),\r\n    ConfigModule,\r\n  ],\r\n  controllers: [],\r\n  providers: [ClockingCommonService, BuilderUtilService, TimeZoneService],\r\n  exports: [ClockingCommonService, BuilderUtilService, TimeZoneService],\r\n})\r\nexport class ApiSharedModule {}\r\n","export * from './lib/claim';\r\nexport * from './lib/role-claim-map';\r\nexport * from './lib/role';\r\nexport * from './lib/range';\r\n","export enum Claim {\r\n  Authenticated = 'Authenticated',\r\n  PublicMethod = 'PublicMethod',\r\n\r\n  CreateJob = 'CreateJob',\r\n  CancelAllJobs = 'CancelAllJobs',\r\n  GetAllJobs = 'GetAllJobs',\r\n  GetOwnJobs = 'GetOwnJobs',\r\n  CancelOwnJob = 'CancelOwnJob',\r\n  AssignToJob = 'AssignToJob',\r\n\r\n  CreateAdmin = 'CreateAdmin',\r\n  CreateBuilder = 'CreateBuilder',\r\n  CreateLaborer = 'CreateLaborer',\r\n  CreateOperator = 'CreateOperator',\r\n\r\n  AddClockIn = 'AddClockIn',\r\n  AddClockOff = 'AddClockOff',\r\n  AddCompany = 'AddCompany',\r\n  GetEquipment = 'GetEquipment',\r\n  GetAllStaff = 'GetAllStaff',\r\n  GetAllClockOffs = 'GetAllClockOffs',\r\n  GetAllClockIns = 'GetAllClockIns',\r\n  GetAllRoles = 'GetAllRoles',\r\n  GetAllUsers = 'GetAllUsers',\r\n  GetAllReports = 'GetAllReports',\r\n  GetCompanies = 'GetCompanies',\r\n\r\n  UpdateAllUsers = 'UpdateAllUsers',\r\n  UpdateSelf = 'UpdateSelf',\r\n  UpdateAllJobs = 'UpdateAllJobs',\r\n  UpdateOwnJob = 'UpdateOwnJob',\r\n\r\n  DeleteAllUsers = 'DeleteAllUsers',\r\n\r\n  UpdateOwnAccount = 'UpdateOwnAccount',\r\n}\r\n","export enum Range {\r\n    Day = 'day',\r\n    Week = 'week',\r\n    Month = 'month',\r\n  }\r\n  ","import { RoleType } from '@dfobobcat/graphql-types';\r\nimport { Claim } from './claim';\r\n\r\nexport const roleClaimMap: Record<RoleType, Claim> = {\r\n  [RoleType.Admin]: Claim.CreateAdmin,\r\n  [RoleType.Builder]: Claim.CreateBuilder,\r\n  [RoleType.Laborer]: Claim.CreateLaborer,\r\n  [RoleType.Operator]: Claim.CreateOperator,\r\n};\r\n","export enum Role {\r\n  Guest = 'guest',\r\n  Builder = 'builder',\r\n  Operator = 'operator',\r\n  Laborer = 'laborer',\r\n  Admin = 'admin',\r\n}\r\n","export * from './lib/user-error';\r\n","import { UserInputError } from 'apollo-server-express';\r\nexport class UserError extends UserInputError {\r\n  constructor(\r\n    message = 'Sorry, something went wrong! We are already working on it.',\r\n  ) {\r\n    super(message);\r\n  }\r\n}\r\n","export * from './lib/auth.service';\r\nexport * from './lib/user.service';\r\nexport * from './lib/timezone.service';\r\nexport * from './lib/clocking-common.service';\r\nexport * from './lib/builder-utils.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { UserService } from './user.service';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { UserError } from '@dfobobcat/api/shared/exception';\r\nimport { generateToken } from '@dfobobcat/api/shared/tool';\r\nimport { EmailService, EmailType } from '@dfobobcat/api/email';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Token, User } from '@dfobobcat/api/entity';\r\nimport {\r\n  MutationRestorePasswordArgs,\r\n  RoleType,\r\n  VerifyEmailMutationVariables,\r\n} from '@dfobobcat/graphql-types';\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    private userService: UserService,\r\n    private configService: ConfigService,\r\n    private emailService: EmailService,\r\n    @InjectRepository(User)\r\n    private usersRepository: Repository<User>,\r\n    @InjectRepository(Token)\r\n    private tokenRepository: Repository<Token>,\r\n  ) {}\r\n\r\n  public async getAuthenticatedUser(email: string, plainTextPassword: string) {\r\n    try {\r\n      const user = await this.userService.getByEmail(email);\r\n      await this.verifyPassword(plainTextPassword, user.password);\r\n      return user;\r\n    } catch (error) {\r\n      throw new UserError(error.message);\r\n    }\r\n  }\r\n\r\n  public logout(ctx: any) {\r\n    if (ctx.getUser()) {\r\n      ctx.logout();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private async verifyPassword(\r\n    plainTextPassword: string,\r\n    hashedPassword: string,\r\n  ) {\r\n    const isPasswordMatching = await bcrypt.compare(\r\n      plainTextPassword,\r\n      hashedPassword,\r\n    );\r\n    if (!isPasswordMatching) {\r\n      throw new UserError('Wrong credentials provided');\r\n    }\r\n  }\r\n\r\n  async forgotPassword(email: string) {\r\n    const user = await this.userService.getByEmail(email);\r\n    const tokenString = generateToken();\r\n    let token = await this.tokenRepository.findOne({ user: user });\r\n    if (!token) {\r\n      token = this.tokenRepository.create({\r\n        resetPasswordToken: tokenString,\r\n        resetPasswordExpires: new Date(Date.now() + 3600000).toISOString(),\r\n        user,\r\n      });\r\n      await this.tokenRepository.save(token);\r\n    } else {\r\n      token.resetPasswordToken = tokenString;\r\n      token.resetPasswordExpires = new Date(Date.now() + 3600000).toISOString();\r\n      await this.tokenRepository.save(token);\r\n    }\r\n\r\n    const query = new URLSearchParams({\r\n      token: tokenString,\r\n    }).toString();\r\n    const url = `${this.configService.get('RESTORE_PASSWORD_URL')}?${query}`;\r\n    this.emailService.sendEmail<EmailType.FORGOT_PASSWORD>(\r\n      email,\r\n      EmailType.FORGOT_PASSWORD,\r\n      {\r\n        url,\r\n        username: user.name,\r\n      },\r\n    );\r\n    return true;\r\n  }\r\n\r\n  async restorePassword(args: MutationRestorePasswordArgs) {\r\n    const token = await this.tokenRepository\r\n      .createQueryBuilder('token')\r\n      .where('token.\"resetPasswordToken\" = :token', { token: args.token })\r\n      .innerJoinAndSelect('token.user', 'user')\r\n      .getOne();\r\n    if (!token) {\r\n      throw new UserError(\r\n        'Your link does not exist. Please request password change again.',\r\n      );\r\n    }\r\n    const user = token.user;\r\n\r\n    const isExpired =\r\n      new Date().getTime() >\r\n      new Date(token.resetPasswordExpires as string).getTime();\r\n    if (isExpired) {\r\n      throw new UserError(\r\n        'Your link is expired. Please request password change again.',\r\n      );\r\n    }\r\n    token.resetPasswordExpires = null;\r\n    token.resetPasswordToken = null;\r\n    user.password = args.newPassword;\r\n    await this.usersRepository.save(user);\r\n    return true;\r\n  }\r\n\r\n  async verifyEmail(args: VerifyEmailMutationVariables): Promise<boolean> {\r\n    const token = await this.tokenRepository\r\n      .createQueryBuilder('token')\r\n      .where('token.verifyEmailToken = :token', { token: args.token })\r\n      .innerJoinAndSelect('token.user', 'user')\r\n      .getOne();\r\n    if (!token) {\r\n      throw new UserError(\r\n        'Your link is not valid. Please concact administrator.',\r\n      );\r\n    }\r\n    const user = token.user;\r\n\r\n    if (user.emailVerified) {\r\n      throw new UserError('This email is already verified');\r\n    }\r\n\r\n    const isExpired =\r\n      new Date().getTime() >\r\n      new Date(token.verifyEmailExpires as string).getTime();\r\n    if (isExpired) {\r\n      throw new UserError(\r\n        'Your link is expired. Please contact administrator.',\r\n      );\r\n    }\r\n    token.verifyEmailExpires = null;\r\n    token.verifyEmailToken = null;\r\n\r\n    user.emailVerified = true;\r\n    await this.usersRepository.save(user);\r\n    const url = `${this.configService.get('LOGIN_AUTH_LINK')}`;\r\n\r\n    this.emailService.sendEmail<EmailType.BUILDER_SIGNUP>(\r\n      user.email,\r\n      EmailType['BUILDER_SIGNUP'],\r\n      {\r\n        username: user.name,\r\n        email: user.email,\r\n        password: user.password,\r\n        url: url,\r\n      },\r\n    );\r\n\r\n    return true;\r\n  }\r\n\r\n  async tokenLogin(ctx: any, token: string) {\r\n    const tokenData = await this.tokenRepository\r\n      .createQueryBuilder('token')\r\n      .innerJoinAndSelect('token.user', 'user')\r\n      .innerJoinAndSelect('user.role', 'role')\r\n      .where('token.\"builderLoginToken\" = :token', { token })\r\n      .getOne();\r\n\r\n    if (!tokenData) {\r\n      throw new UserError('Invalid token.');\r\n    }\r\n\r\n    const user = tokenData.user;\r\n    const addedDataToUser = {\r\n      ...user,\r\n      getRole() {\r\n        return this.role.name;\r\n      },\r\n      hasRole(role: RoleType) {\r\n        return this.role.name === role;\r\n      },\r\n    };\r\n    ctx.login(addedDataToUser);\r\n    return user;\r\n  }\r\n}\r\n","import { Repository } from 'typeorm';\r\nimport { UserError } from '@dfobobcat/api/shared/exception';\r\n\r\nexport class BuilderUtilService {\r\n  constructor() {}\r\n  public async findByIdsOrThrow(\r\n    repo: Repository<any>,\r\n    ids: number[],\r\n    message = 'Invalid input error.',\r\n  ) {\r\n    const items = await repo.findByIds(ids);\r\n    if (items.length !== ids.length) {\r\n      throw new UserError(message);\r\n    }\r\n    return items;\r\n  }\r\n  public async findIdOrThrow(\r\n    repo: Repository<any>,\r\n    id: number,\r\n    message = 'Invalid input error.',\r\n  ) {\r\n    const item = await repo.findOne(id);\r\n    if (!item) {\r\n      throw new UserError(message);\r\n    }\r\n    return item;\r\n  }\r\n}\r\n","import { ConfigService } from '@nestjs/config';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Job, Equipment, User, ClockOff, ClockIn } from '@dfobobcat/api/entity';\r\n\r\nimport { getTodayStart } from '@dfobobcat/api/shared/tool';\r\nexport class ClockingCommonService {\r\n  constructor(\r\n    @InjectRepository(Job)\r\n    private jobsRepository: Repository<Job>,\r\n    @InjectRepository(User)\r\n    private usersRepository: Repository<User>,\r\n    @InjectRepository(Equipment)\r\n    private equipmentsRepository: Repository<Equipment>,\r\n    @InjectRepository(ClockOff)\r\n    private clockOffRepository: Repository<ClockOff>,\r\n    @InjectRepository(ClockIn)\r\n    private clockInRepository: Repository<ClockIn>,\r\n    private config: ConfigService,\r\n  ) {}\r\n\r\n  /**\r\n   * get all clocks off of a staff person\r\n   */\r\n  async getStaffClocksOff(staffId: number) {\r\n    return this.clockOffRepository\r\n      .createQueryBuilder('clockOff')\r\n      .innerJoinAndSelect('clockOff.job', 'job')\r\n      .innerJoinAndSelect('clockOff.staff', 'staff', 'staff.id = :staffId', {\r\n        staffId: staffId,\r\n      })\r\n      .select(['clockOff.id', 'job.id'])\r\n      .getMany();\r\n  }\r\n\r\n  /**\r\n   * get all clocks off of a staff person for today\r\n   */\r\n  async getTodayClockOffs(staffId: number) {\r\n    const now = getTodayStart();\r\n\r\n    return this.clockOffRepository\r\n      .createQueryBuilder('clockOff')\r\n      .innerJoinAndSelect('clockOff.job', 'job')\r\n      .innerJoinAndSelect('clockOff.staff', 'staff', 'staff.id = :staffId', {\r\n        staffId: staffId,\r\n      })\r\n      .where(\r\n        `DATE(job.requestDate) >= DATE(:now) AND DATE(job.requestDate) < DATE(:now) + INTERVAL '1 DAY'`,\r\n        { now },\r\n      )\r\n      .select(['clockOff.id', 'job.id'])\r\n      .getMany();\r\n  }\r\n\r\n  /**\r\n   * get all clock ins of a staff person for today\r\n   */\r\n  async getTodayClockIns(staffId: number) {\r\n    const now = getTodayStart();\r\n\r\n    return this.clockInRepository\r\n      .createQueryBuilder('clockIn')\r\n      .innerJoinAndSelect('clockIn.job', 'job')\r\n      .innerJoin('clockIn.staff', 'staff', 'staff.id = :staffId', {\r\n        staffId,\r\n      })\r\n      .where(\r\n        `DATE(job.requestDate) >= DATE(:now) AND DATE(job.requestDate) < DATE(:now) + INTERVAL '1 DAY'`,\r\n        { now },\r\n      )\r\n      .select(['clockIn.id', 'job.id'])\r\n      .getMany();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { format } from 'date-fns-tz';\r\n\r\n@Injectable()\r\nexport class TimeZoneService {\r\n  timezone: string;\r\n  locale: string;\r\n  constructor(private config: ConfigService) {\r\n    this.timezone = this.config.get('APP_TIMEZONE') || 'Australia/Melbourne';\r\n    this.locale = this.config.get('APP_LOCALE_CODE') || 'Australia/Melbourne';\r\n  }\r\n\r\n  convertToTZ(date: Date, displayTime = false) {\r\n    let options: Intl.DateTimeFormatOptions = {};\r\n    if (displayTime) {\r\n      options = {\r\n        timeZone: 'Australia/Melbourne',\r\n        year: 'numeric',\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        hour12: false,\r\n      };\r\n    } else {\r\n      options = {\r\n        timeZone: 'Australia/Melbourne',\r\n        year: 'numeric',\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n      };\r\n    }\r\n\r\n    const formatter = new Intl.DateTimeFormat(this.locale, options);\r\n    const formartedDate = formatter.format(date);\r\n    return `${formartedDate.split('/')[1]}/${formartedDate.split('/')[0]}/${\r\n      formartedDate.split('/')[2]\r\n    }`;\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { Company, Role, Token, User } from '@dfobobcat/api/entity';\r\nimport {\r\n  RegisterBuilderInput,\r\n  RegisterUserInput,\r\n  RoleType,\r\n  UpdateMyAccountMutationVariables,\r\n} from '@dfobobcat/graphql-types';\r\nimport { GqlContext } from '@dfobobcat/api/shared/model';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { UserError } from '@dfobobcat/api/shared/exception';\r\nimport { generateToken } from '@dfobobcat/api/shared/tool';\r\nimport { EmailService, EmailType } from '@dfobobcat/api/email';\r\nimport { CompanyService } from '@dfobobcat/api/feature/company';\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(\r\n    @InjectRepository(User)\r\n    private usersRepository: Repository<User>,\r\n    @InjectRepository(Role)\r\n    private roleRepository: Repository<Role>,\r\n    @InjectRepository(Token)\r\n    private tokenRepository: Repository<Token>,\r\n    @InjectRepository(Company)\r\n    private companyRepository: Repository<Company>,\r\n    private configService: ConfigService,\r\n    private emailService: EmailService,\r\n    private companyService: CompanyService,\r\n  ) {}\r\n  async getByEmail(email: string) {\r\n    const user = await this.usersRepository.findOne({ email });\r\n    if (user) {\r\n      return user;\r\n    }\r\n    throw new UserError('User with this email does not exist');\r\n  }\r\n\r\n  async getById(id: number) {\r\n    const user = await this.usersRepository.findOne({ id });\r\n    if (user) {\r\n      return user;\r\n    }\r\n\r\n    throw new UserError('User does not exist');\r\n  }\r\n\r\n  async sendEmailVerify(user: User): Promise<void> {\r\n    const tokenString = generateToken();\r\n    let token = await this.tokenRepository.findOne({ user: user });\r\n    const expires = new Date(\r\n      Date.now() + Number(this.configService.get('VERIFY_EMAIL_TOKEN_EXPIRE')),\r\n    ).toISOString();\r\n    const tokenData = {\r\n      verifyEmailToken: tokenString,\r\n      verifyEmailExpires: expires,\r\n    };\r\n    if (!token) {\r\n      token = await this.tokenRepository.create({ ...tokenData, user });\r\n      await this.tokenRepository.save(token);\r\n    } else {\r\n      await this.tokenRepository.save({ ...token, ...tokenData });\r\n    }\r\n    const query = new URLSearchParams({\r\n      token: tokenString,\r\n    }).toString();\r\n    const url = `${this.configService.get('VERIFY_EMAIL_URL')}?${query}`;\r\n    this.emailService.sendEmail<EmailType.VERIFY_EMAIL>(\r\n      user.email,\r\n      EmailType.VERIFY_EMAIL,\r\n      {\r\n        username: user.name,\r\n        url,\r\n      },\r\n    );\r\n  }\r\n\r\n  async create(ctx: GqlContext, userData: RegisterUserInput) {\r\n    const user = await this.usersRepository.findOne({ email: userData.email });\r\n    if (user) {\r\n      throw new UserError('User with such email already exists.');\r\n    }\r\n\r\n    const { roleId, company: companyName, ...userFromData } = userData;\r\n    let company = null;\r\n    if (companyName) {\r\n      company = await this.companyRepository.findOne({ name: companyName });\r\n      if (!company) {\r\n        company = await this.companyService.addCompany({\r\n          name: companyName as string,\r\n        });\r\n      }\r\n    }\r\n\r\n    const foundRole = await this.roleRepository.findOneOrFail({\r\n      id: roleId,\r\n    });\r\n    const newUser = await this.usersRepository.create({\r\n      ...userFromData,\r\n      company: company as Company,\r\n      emailVerified: true,\r\n    });\r\n    newUser.role = foundRole;\r\n    await this.usersRepository.save(newUser);\r\n    const url = `${this.configService.get('LOGIN_AUTH_LINK')}`;\r\n    if (newUser.role.name === RoleType.Builder) {\r\n      this.emailService.sendEmail<EmailType.BUILDER_SIGNUP>(\r\n        newUser.email,\r\n        EmailType['BUILDER_SIGNUP'],\r\n        {\r\n          username: newUser.name,\r\n          email: newUser.email,\r\n          password: userData.password,\r\n          url: url,\r\n        },\r\n      );\r\n\r\n      const loginToken = generateToken();\r\n\r\n      const expires = new Date(\r\n        Date.now() + Number(this.configService.get('LOGIN_TOKEN_EXPIRE')),\r\n      ).toISOString();\r\n\r\n      const token = await this.tokenRepository.create({\r\n        user: newUser,\r\n        builderLoginToken: loginToken,\r\n        builderLoginExpire: expires,\r\n      });\r\n      await this.tokenRepository.save(token);\r\n    }\r\n\r\n    if ([RoleType.Laborer, RoleType.Operator].includes(newUser.role.name)) {\r\n      this.emailService.sendEmail<EmailType.BUILDER_SIGNUP>(\r\n        newUser.email,\r\n        EmailType['BUILDER_SIGNUP'],\r\n        {\r\n          username: newUser.name,\r\n          email: newUser.email,\r\n          password: userData.password,\r\n          url: url,\r\n        },\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async createBuilder(ctx: GqlContext, userData: RegisterBuilderInput) {\r\n    const { company: companyName, ...userFromData } = userData;\r\n    let company = null;\r\n    if (companyName) {\r\n      company = await this.companyRepository.findOne({ name: companyName });\r\n      if (!company) {\r\n        company = await this.companyService.addCompany({\r\n          name: companyName as string,\r\n        });\r\n      }\r\n    }\r\n\r\n    const user = await this.usersRepository.findOne({ email: userData.email });\r\n    if (user) {\r\n      throw new UserError('User with such email already exists.');\r\n    }\r\n\r\n    const foundRole = await this.roleRepository.findOneOrFail({\r\n      name: RoleType.Builder,\r\n    });\r\n    const newUser = await this.usersRepository.create({\r\n      ...userFromData,\r\n      company,\r\n    });\r\n    newUser.role = foundRole;\r\n    await this.usersRepository.save(newUser);\r\n\r\n    const loginToken = generateToken();\r\n\r\n    const expires = new Date(\r\n      Date.now() + Number(this.configService.get('LOGIN_TOKEN_EXPIRE')),\r\n    ).toISOString();\r\n\r\n    const token = await this.tokenRepository.create({\r\n      user: newUser,\r\n      builderLoginToken: loginToken,\r\n      builderLoginExpire: expires,\r\n    });\r\n    await this.tokenRepository.save(token);\r\n\r\n    await this.sendEmailVerify(newUser);\r\n    return true;\r\n  }\r\n\r\n  async updateUserAccount(\r\n    userId: number,\r\n    args: UpdateMyAccountMutationVariables,\r\n  ) {\r\n    const user = await this.usersRepository.findOneOrFail(\r\n      { id: userId },\r\n      { relations: ['role'] },\r\n    );\r\n\r\n    Object.assign(user, args);\r\n    await this.usersRepository.save(user);\r\n    return user;\r\n  }\r\n}\r\n","export * from './lib/randomString';\r\nexport * from './lib/generateToken';\r\nexport * from './lib/getTodayStart';\r\nexport * from './lib/getOrderAndDirection';\r\nexport * from './lib/builder-util';\r\n","import { Repository } from 'typeorm';\r\nimport { UserError } from '@dfobobcat/api/shared/exception';\r\n\r\nexport async function findByIdsOrThrow<T = any>(\r\n  repo: Repository<any>,\r\n  ids: number[],\r\n  message = 'Invalid input error.',\r\n): Promise<Array<T>> {\r\n  const items = await repo.findByIds(ids);\r\n  if (items.length !== ids.length) {\r\n    throw new UserError(message);\r\n  }\r\n  return items;\r\n}\r\nexport async function findIdOrThrow<T = any>(\r\n  repo: Repository<any>,\r\n  id: number,\r\n  message = 'Invalid input error.',\r\n): Promise<T> {\r\n  const item = await repo.findOne(id);\r\n  if (!item) {\r\n    throw new UserError(message);\r\n  }\r\n  return item;\r\n}\r\n","import { randomBytes } from 'crypto';\r\nexport const generateToken = () => randomBytes(20).toString('hex');\r\n","export function getOrderAndDirection(\r\n  orderBy?: string,\r\n): [string, 'DESC' | 'ASC'] | undefined {\r\n  if (!orderBy || !orderBy.length) {\r\n    return undefined;\r\n  }\r\n  let direction: '-' | '+';\r\n  let order: string;\r\n  if (orderBy[0] == '-' || orderBy[0] == '+') {\r\n    direction = orderBy[0];\r\n    order = orderBy.slice(1);\r\n    return [`${order}`, direction === '-' ? 'DESC' : 'ASC'];\r\n  }\r\n  return undefined;\r\n}\r\n","/**\r\n * get 00:00 of today in ISO format\r\n */\r\nexport function getTodayStart(): string {\r\n  const date = new Date();\r\n  date.setHours(0, 0, 0, 0);\r\n  const tzoffset = -660 * 60000;\r\n  return new Date((date as any) - tzoffset).toISOString();\r\n}\r\n","import { randomBytes } from 'crypto';\r\nexport const getRandomString = () => randomBytes(20).toString('hex');\r\n","export * from './lib/graphql';\r\n","import { gql } from 'apollo-angular';\r\nimport { Injectable } from '@angular/core';\r\nimport * as Apollo from 'apollo-angular';\r\nimport * as ApolloCore from '@apollo/client/core';\r\nexport type Maybe<T> = T | undefined;\r\nexport type Exact<T extends { [key: string]: unknown }> = {\r\n  [K in keyof T]: T[K];\r\n};\r\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & {\r\n  [SubKey in K]?: Maybe<T[SubKey]>;\r\n};\r\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {\r\n  [SubKey in K]: Maybe<T[SubKey]>;\r\n};\r\n/** All built-in and custom scalars, mapped to their actual values */\r\nexport type Scalars = {\r\n  ID: string;\r\n  String: string;\r\n  Boolean: boolean;\r\n  Int: number;\r\n  Float: number;\r\n  Date: any;\r\n  Upload: any;\r\n};\r\n\r\nexport type Activity = {\r\n  date: Scalars['Date'];\r\n  type: Scalars['String'];\r\n};\r\n\r\nexport type AddClockInInput = {\r\n  files: Array<Scalars['Upload']>;\r\n  jobId: Scalars['Float'];\r\n  lat: Scalars['Float'];\r\n  lng: Scalars['Float'];\r\n};\r\n\r\nexport type AddClockInRs = {\r\n  address: Scalars['String'];\r\n  equipment: Array<Equipment>;\r\n  id: Scalars['Float'];\r\n};\r\n\r\nexport type AddClockOffInput = {\r\n  files?: Maybe<Array<Maybe<Scalars['Upload']>>>;\r\n  jobId: Scalars['Float'];\r\n  notes: Scalars['String'];\r\n};\r\n\r\nexport type AddCompanyInput = {\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type Admin = Node &\r\n  User & {\r\n    company?: Maybe<Company>;\r\n    email: Scalars['String'];\r\n    id: Scalars['Float'];\r\n    name: Scalars['String'];\r\n    role: Role;\r\n  };\r\n\r\nexport type AssignToJobInput = {\r\n  jobId: Scalars['Float'];\r\n  staffIds: Array<Scalars['Float']>;\r\n};\r\n\r\nexport type Builder = Node &\r\n  User & {\r\n    company?: Maybe<Company>;\r\n    email: Scalars['String'];\r\n    id: Scalars['Float'];\r\n    jobRequests: Array<Job>;\r\n    name: Scalars['String'];\r\n    role: Role;\r\n  };\r\n\r\nexport type BuilderJobRequestsArgs = {\r\n  search?: Maybe<Scalars['String']>;\r\n  status?: Maybe<JobStatus>;\r\n};\r\n\r\nexport type ClockIn = Node & {\r\n  clockInTime: Scalars['String'];\r\n  id: Scalars['Float'];\r\n  images?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n  job: Job;\r\n  staff: Staff;\r\n};\r\n\r\nexport type ClockOff = Node & {\r\n  clockOffTime: Scalars['String'];\r\n  id: Scalars['Float'];\r\n  images?: Maybe<Array<Maybe<Scalars['String']>>>;\r\n  notes: Scalars['String'];\r\n  staff: Staff;\r\n};\r\n\r\nexport type ClockOffConnection = {\r\n  edges?: Maybe<Array<Maybe<ClockOffEdge>>>;\r\n  pageInfo: PageInfo;\r\n};\r\n\r\nexport type ClockOffEdge = {\r\n  cursor: Scalars['String'];\r\n  node?: Maybe<ClockOff>;\r\n};\r\n\r\nexport type Company = {\r\n  id: Scalars['Float'];\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type CreateJobInput = {\r\n  address: Scalars['String'];\r\n  adminSelectedBuilder?: Maybe<Scalars['Float']>;\r\n  created?: Maybe<Scalars['String']>;\r\n  equipment: Array<Scalars['Float']>;\r\n  lat?: Maybe<Scalars['Float']>;\r\n  lng?: Maybe<Scalars['Float']>;\r\n  notes?: Maybe<Scalars['String']>;\r\n  poFile?: Maybe<Scalars['Upload']>;\r\n  priority?: Maybe<Scalars['String']>;\r\n  requestDate: Scalars['Date'];\r\n  stage?: Maybe<Scalars['String']>;\r\n  time?: Maybe<Scalars['String']>;\r\n  type?: Maybe<Scalars['String']>;\r\n};\r\nexport type UpdateJobDateInput = {\r\n  requestDate: Scalars['Date'];\r\n  updateField: Maybe<Scalars['String']>;\r\n  id: Scalars['Float'];\r\n};\r\n\r\nexport type Equipment = Node & {\r\n  id: Scalars['Float'];\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type Job = Node & {\r\n  activity: Array<Activity>;\r\n  address: Scalars['String'];\r\n  adminSelectedBuilder?: Maybe<Scalars['Float']>;\r\n  builder: Builder;\r\n  clockIns: Array<ClockIn>;\r\n  clockOffs: Array<ClockOff>;\r\n  created?: Maybe<Scalars['String']>;\r\n  equipment: Array<Equipment>;\r\n  id: Scalars['Float'];\r\n  lat?: Maybe<Scalars['Float']>;\r\n  lng?: Maybe<Scalars['Float']>;\r\n  notes?: Maybe<Scalars['String']>;\r\n  poFile?: Maybe<Scalars['String']>;\r\n  priority?: Maybe<Scalars['String']>;\r\n  requestDate: Scalars['Date'];\r\n  stage?: Maybe<Scalars['String']>;\r\n  status: JobStatus;\r\n  time?: Maybe<Scalars['String']>;\r\n  type?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type JobConnection = {\r\n  edges: Array<JobEdge>;\r\n  pageInfo: PageInfo;\r\n};\r\n\r\nexport type JobEdge = {\r\n  cursor: Scalars['String'];\r\n  node: Job;\r\n};\r\n\r\nexport enum JobFilter {\r\n  Cancelled = 'cancelled',\r\n  Past = 'past',\r\n  Upcoming = 'upcoming',\r\n}\r\n\r\nexport type JobPaginated = {\r\n  items: Array<Job>;\r\n  pageInfo: PageInfo;\r\n};\r\n\r\nexport enum JobStatus {\r\n  Assigned = 'assigned',\r\n  UnAssigned = 'unAssigned',\r\n  Cancelled = 'cancelled',\r\n  Completed = 'completed',\r\n  InProgress = 'inProgress',\r\n  Pending = 'pending',\r\n}\r\n\r\nexport type JobsForDateReportItem = {\r\n  address: Scalars['String'];\r\n  builder: Builder;\r\n  equipment: Array<Equipment>;\r\n  id: Scalars['Float'];\r\n  staff: Array<Staff>;\r\n};\r\n\r\nexport type JobsForDateReportPaginated = {\r\n  items: Array<JobsForDateReportItem>;\r\n  pageInfo: PageInfo;\r\n};\r\n\r\nexport type JobsForDateReportTableItem = {\r\n  address: Scalars['String'];\r\n  builder: Scalars['String'];\r\n  equipment: Scalars['String'];\r\n  id: Scalars['Float'];\r\n  staff: Scalars['String'];\r\n};\r\n\r\nexport type LoginInput = {\r\n  email: Scalars['String'];\r\n  password: Scalars['String'];\r\n};\r\n\r\nexport type LoginRs = {\r\n  email: Scalars['String'];\r\n  name: Scalars['String'];\r\n  role: Role;\r\n};\r\n\r\nexport type Mutation = {\r\n  addClockIn: AddClockInRs;\r\n  addClockOff: Success;\r\n  addCompany: Company;\r\n  assignToJob: Success;\r\n  cancelJob: Success;\r\n  createJob: Success;\r\n  deleteUser: Success;\r\n  forgotPassword: Success;\r\n  login: LoginRs;\r\n  logout?: Maybe<Success>;\r\n  register: Success;\r\n  registerBuilder: Success;\r\n  restorePassword: Success;\r\n  tokenLogin: LoginRs;\r\n  updateJob: Success;\r\n  updateJobDate: Success;\r\n  updateMyAccount: User;\r\n  updateUser: Success;\r\n  verifyEmail: Success;\r\n};\r\n\r\nexport type MutationAddClockInArgs = {\r\n  input: AddClockInInput;\r\n};\r\n\r\nexport type MutationAddClockOffArgs = {\r\n  input: AddClockOffInput;\r\n};\r\n\r\nexport type MutationAddCompanyArgs = {\r\n  input: AddCompanyInput;\r\n};\r\n\r\nexport type MutationAssignToJobArgs = {\r\n  input: AssignToJobInput;\r\n};\r\n\r\nexport type MutationCancelJobArgs = {\r\n  jobId: Scalars['Float'];\r\n};\r\n\r\nexport type MutationCreateJobArgs = {\r\n  input: CreateJobInput;\r\n};\r\n\r\nexport type MutationDeleteUserArgs = {\r\n  userId: Scalars['Float'];\r\n};\r\n\r\nexport type MutationForgotPasswordArgs = {\r\n  email: Scalars['String'];\r\n};\r\n\r\nexport type MutationLoginArgs = {\r\n  input: LoginInput;\r\n};\r\n\r\nexport type MutationRegisterArgs = {\r\n  input: RegisterUserInput;\r\n};\r\n\r\nexport type MutationRegisterBuilderArgs = {\r\n  input: RegisterBuilderInput;\r\n};\r\n\r\nexport type MutationRestorePasswordArgs = {\r\n  newPassword: Scalars['String'];\r\n  token: Scalars['String'];\r\n};\r\n\r\nexport type MutationTokenLoginArgs = {\r\n  token: Scalars['String'];\r\n};\r\n\r\nexport type MutationUpdateJobArgs = {\r\n  input: UpdateJobInput;\r\n};\r\n\r\nexport type MutationUpdateMyAccountArgs = {\r\n  email: Scalars['String'];\r\n  name: Scalars['String'];\r\n  password?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type MutationUpdateUserArgs = {\r\n  input: UpdateUserInput;\r\n};\r\n\r\nexport type MutationVerifyEmailArgs = {\r\n  token: Scalars['String'];\r\n};\r\n\r\nexport type Node = {\r\n  id: Scalars['Float'];\r\n};\r\n\r\nexport type PageInfo = {\r\n  hasNextPage: Scalars['Boolean'];\r\n  hasPreviousPage: Scalars['Boolean'];\r\n  nextPage?: Maybe<Scalars['Int']>;\r\n  previousPage?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type PaginationArgs = {\r\n  offset?: Maybe<Scalars['Int']>;\r\n  page?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport type Query = {\r\n  companies?: Maybe<Array<Company>>;\r\n  equipment: Array<Equipment>;\r\n  job: Job;\r\n  jobs: JobPaginated;\r\n  me: User;\r\n  report: Report;\r\n  settings: Settings;\r\n  staffRoles: Array<Role>;\r\n  user: User;\r\n  users: UserPaginated;\r\n};\r\n\r\nexport type QueryJobArgs = {\r\n  id: Scalars['Float'];\r\n};\r\n\r\nexport type QueryJobsArgs = {\r\n  filteredDate?: Maybe<FilteredDateArgs>;\r\n  orderBy?: Maybe<Scalars['String']>;\r\n  pagination?: Maybe<PaginationArgs>;\r\n  search?: Maybe<Scalars['String']>;\r\n  staff?: Maybe<Array<Scalars['Int']>>;\r\n  status?: Maybe<Array<Maybe<JobStatus>>>;\r\n};\r\n\r\nexport type QueryUserArgs = {\r\n  id: Scalars['Float'];\r\n};\r\n\r\nexport type QueryUsersArgs = {\r\n  orderBy?: Maybe<Scalars['String']>;\r\n  paginate?: Maybe<Scalars['Boolean']>;\r\n  pagination?: Maybe<PaginationArgs>;\r\n  role?: Maybe<Scalars['String']>;\r\n  search?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type RegisterBuilderInput = {\r\n  company?: Maybe<Scalars['String']>;\r\n  email: Scalars['String'];\r\n  name: Scalars['String'];\r\n  password: Scalars['String'];\r\n};\r\n\r\nexport type RegisterUserInput = {\r\n  company?: Maybe<Scalars['String']>;\r\n  email: Scalars['String'];\r\n  name: Scalars['String'];\r\n  password: Scalars['String'];\r\n  roleId: Scalars['Float'];\r\n};\r\n\r\nexport type Report = {\r\n  jobsForDate: JobsForDateReportPaginated;\r\n  jobsForDateFullList: Array<Maybe<JobsForDateReportTableItem>>;\r\n  totalWorkedHours: TotalWorkedHoursReportPaginated;\r\n};\r\n\r\nexport type ReportJobsForDateArgs = {\r\n  date: Scalars['String'];\r\n  fullListg?: Maybe<Scalars['Boolean']>;\r\n  orderBy?: Maybe<Scalars['String']>;\r\n  pagination?: Maybe<PaginationArgs>;\r\n  search?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type ReportJobsForDateFullListArgs = {\r\n  date: Scalars['String'];\r\n  orderBy?: Maybe<Scalars['String']>;\r\n  search?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type ReportTotalWorkedHoursArgs = {\r\n  endDate?: Maybe<Scalars['String']>;\r\n  orderBy?: Maybe<Scalars['String']>;\r\n  pagination?: Maybe<PaginationArgs>;\r\n  search?: Maybe<Scalars['String']>;\r\n  startDate?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type Role = {\r\n  id: Scalars['Float'];\r\n  name: RoleType;\r\n};\r\n\r\nexport enum RoleType {\r\n  Admin = 'admin',\r\n  Builder = 'builder',\r\n  Laborer = 'laborer',\r\n  Operator = 'operator',\r\n}\r\n\r\nexport type Settings = {\r\n  minJobRequestDate: Scalars['Date'];\r\n};\r\n\r\nexport type Staff = Node &\r\n  User & {\r\n    assignedJobs: Array<Job>;\r\n    company?: Maybe<Company>;\r\n    email: Scalars['String'];\r\n    hasClockedIntoJob: Scalars['Boolean'];\r\n    id: Scalars['Float'];\r\n    name: Scalars['String'];\r\n    role: Role;\r\n    todaysAssignedJob?: Maybe<Job>;\r\n  };\r\n\r\nexport type StaffAssignedJobsArgs = {\r\n  filter?: Maybe<JobFilter>;\r\n  search?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type StaffHasClockedIntoJobArgs = {\r\n  id: Scalars['Float'];\r\n};\r\n\r\nexport type Success = {\r\n  success: Scalars['Boolean'];\r\n};\r\n\r\nexport type TotalWorkedHoursReportItem = {\r\n  email: Scalars['String'];\r\n  name: Scalars['String'];\r\n  totalWorkedHours?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type TotalWorkedHoursReportPaginated = {\r\n  items: Array<TotalWorkedHoursReportItem>;\r\n  pageInfo: PageInfo;\r\n};\r\n\r\nexport type UpdateJobInput = {\r\n  address: Scalars['String'];\r\n  adminSelectedBuilder?: Maybe<Scalars['Float']>;\r\n  created?: Maybe<Scalars['String']>;\r\n  equipment: Array<Scalars['Float']>;\r\n  id: Scalars['Float'];\r\n  lat?: Maybe<Scalars['Float']>;\r\n  lng?: Maybe<Scalars['Float']>;\r\n  notes?: Maybe<Scalars['String']>;\r\n  poFile?: Maybe<Scalars['Upload']>;\r\n  priority?: Maybe<Scalars['String']>;\r\n  requestDate: Scalars['Date'];\r\n  stage?: Maybe<Scalars['String']>;\r\n  time?: Maybe<Scalars['String']>;\r\n  type?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type UpdateUserInput = {\r\n  company?: Maybe<Scalars['String']>;\r\n  email: Scalars['String'];\r\n  name: Scalars['String'];\r\n  roleId?: Maybe<Scalars['Float']>;\r\n  userId: Scalars['Float'];\r\n};\r\n\r\nexport type User = {\r\n  company?: Maybe<Company>;\r\n  email: Scalars['String'];\r\n  id: Scalars['Float'];\r\n  name: Scalars['String'];\r\n  role: Role;\r\n};\r\n\r\nexport type UserConnection = {\r\n  edges?: Maybe<Array<Maybe<UserEdge>>>;\r\n  pageInfo: PageInfo;\r\n};\r\n\r\nexport type UserEdge = {\r\n  cursor: Scalars['String'];\r\n  node?: Maybe<User>;\r\n};\r\n\r\nexport type UserPaginated = {\r\n  items: Array<User>;\r\n  pageInfo: PageInfo;\r\n};\r\n\r\nexport type FilteredDateArgs = {\r\n  calendarType?: Maybe<Scalars['String']>;\r\n  endDate?: Maybe<Scalars['Date']>;\r\n  startDate?: Maybe<Scalars['Date']>;\r\n};\r\n\r\nexport type RegisterBuilderMutationVariables = Exact<{\r\n  input: RegisterBuilderInput;\r\n}>;\r\n\r\nexport type RegisterBuilderMutation = { registerBuilder: { success: boolean } };\r\n\r\nexport type ForgotPasswordMutationVariables = Exact<{\r\n  email: Scalars['String'];\r\n}>;\r\n\r\nexport type ForgotPasswordMutation = { forgotPassword: { success: boolean } };\r\n\r\nexport type RegisterMutationVariables = Exact<{\r\n  input: RegisterUserInput;\r\n}>;\r\n\r\nexport type RegisterMutation = { register: { success: boolean } };\r\n\r\nexport type RestorePasswordMutationVariables = Exact<{\r\n  newPassword: Scalars['String'];\r\n  token: Scalars['String'];\r\n}>;\r\n\r\nexport type RestorePasswordMutation = { restorePassword: { success: boolean } };\r\n\r\nexport type LoginMutationVariables = Exact<{\r\n  input: LoginInput;\r\n}>;\r\n\r\nexport type LoginMutation = {\r\n  login: { email: string; name: string; role: { name: RoleType } };\r\n};\r\n\r\nexport type TokenLoginMutationVariables = Exact<{\r\n  token: Scalars['String'];\r\n}>;\r\n\r\nexport type TokenLoginMutation = {\r\n  tokenLogin: { email: string; name: string; role: { name: RoleType } };\r\n};\r\n\r\nexport type AddClockInMutationVariables = Exact<{\r\n  input: AddClockInInput;\r\n}>;\r\n\r\nexport type AddClockInMutation = {\r\n  addClockIn: {\r\n    id: number;\r\n    address: string;\r\n    equipment: Array<{ id: number; name: string }>;\r\n  };\r\n};\r\n\r\nexport type AddClockOffMutationVariables = Exact<{\r\n  input: AddClockOffInput;\r\n}>;\r\n\r\nexport type AddClockOffMutation = { addClockOff: { success: boolean } };\r\n\r\nexport type CreateJobMutationVariables = Exact<{\r\n  input: CreateJobInput;\r\n}>;\r\n\r\nexport type CreateJobMutation = { createJob: { success: boolean } };\r\n\r\nexport type UpdateJobMutationVariables = Exact<{\r\n  input: UpdateJobInput;\r\n}>;\r\n\r\nexport type UpdateJobMutation = { updateJob: { success: boolean } };\r\n\r\nexport type UpdateJobDateMutationVariables = Exact<{\r\n  input: UpdateJobDateInput;\r\n}>;\r\nexport type UpdateJobDateMutation = { updateJobDate: { success: boolean } };\r\n\r\nexport type CancelJobMutationVariables = Exact<{\r\n  input: Scalars['Float'];\r\n}>;\r\n\r\nexport type CancelJobMutation = { cancelJob: { success: boolean } };\r\n\r\nexport type AssignToJobMutationVariables = Exact<{\r\n  input: AssignToJobInput;\r\n}>;\r\n\r\nexport type AssignToJobMutation = { assignToJob: { success: boolean } };\r\n\r\nexport type LogoutMutationVariables = Exact<{ [key: string]: never }>;\r\n\r\nexport type LogoutMutation = { logout?: Maybe<{ success: boolean }> };\r\n\r\nexport type UpdateUserMutationVariables = Exact<{\r\n  input: UpdateUserInput;\r\n}>;\r\n\r\nexport type UpdateUserMutation = { updateUser: { success: boolean } };\r\n\r\nexport type DeleteUserMutationVariables = Exact<{\r\n  input: Scalars['Float'];\r\n}>;\r\n\r\nexport type DeleteUserMutation = { deleteUser: { success: boolean } };\r\n\r\nexport type JobFragmentFragment = {\r\n  id: number;\r\n  address: string;\r\n  lat?: Maybe<number>;\r\n  lng?: Maybe<number>;\r\n  status: JobStatus;\r\n  requestDate: any;\r\n  poFile?: Maybe<string>;\r\n  notes?: Maybe<string>;\r\n  priority?: Maybe<string>;\r\n  equipment: Array<{ id: number; name: string }>;\r\n};\r\n\r\nexport type HasClockedIntoJobQueryVariables = Exact<{\r\n  id: Scalars['Float'];\r\n}>;\r\n\r\nexport type HasClockedIntoJobQuery = {\r\n  me: { hasClockedIntoJob: boolean } | {};\r\n};\r\n\r\nexport type MeQueryVariables = Exact<{\r\n  status?: Maybe<JobStatus>;\r\n  filter?: Maybe<JobFilter>;\r\n}>;\r\n\r\nexport type MeQuery = {\r\n  me:\r\n    | { id: number; name: string; email: string; role: { name: RoleType } }\r\n    | {\r\n        id: number;\r\n        name: string;\r\n        email: string;\r\n        jobRequests: Array<{\r\n          id: number;\r\n          address: string;\r\n          lat?: Maybe<number>;\r\n          lng?: Maybe<number>;\r\n          status: JobStatus;\r\n          requestDate: any;\r\n          poFile?: Maybe<string>;\r\n          notes?: Maybe<string>;\r\n          priority?: Maybe<string>;\r\n          equipment: Array<{ id: number; name: string }>;\r\n        }>;\r\n        role: { name: RoleType };\r\n      }\r\n    | {\r\n        id: number;\r\n        name: string;\r\n        email: string;\r\n        assignedJobs: Array<{\r\n          id: number;\r\n          address: string;\r\n          lat?: Maybe<number>;\r\n          lng?: Maybe<number>;\r\n          status: JobStatus;\r\n          requestDate: any;\r\n          poFile?: Maybe<string>;\r\n          notes?: Maybe<string>;\r\n          priority?: Maybe<string>;\r\n          equipment: Array<{ id: number; name: string }>;\r\n        }>;\r\n        role: { name: RoleType };\r\n      };\r\n};\r\n\r\nexport type JobQueryVariables = Exact<{\r\n  id: Scalars['Float'];\r\n}>;\r\n\r\nexport type JobQuery = {\r\n  job: {\r\n    id: number;\r\n    address: string;\r\n    lat?: Maybe<number>;\r\n    lng?: Maybe<number>;\r\n    status: JobStatus;\r\n    requestDate: any;\r\n    poFile?: Maybe<string>;\r\n    notes?: Maybe<string>;\r\n    priority?: Maybe<string>;\r\n    equipment: Array<{ id: number; name: string }>;\r\n  };\r\n};\r\n\r\nexport type ClockOffsQueryVariables = Exact<{\r\n  id: Scalars['Float'];\r\n}>;\r\n\r\nexport type ClockOffsQuery = {\r\n  job: {\r\n    clockOffs: Array<{\r\n      id: number;\r\n      clockOffTime: string;\r\n      notes: string;\r\n      images?: Maybe<Array<Maybe<string>>>;\r\n      staff: { name: string };\r\n    }>;\r\n  };\r\n};\r\n\r\nexport type ClockInsQueryVariables = Exact<{\r\n  id: Scalars['Float'];\r\n}>;\r\n\r\nexport type ClockInsQuery = {\r\n  job: {\r\n    clockIns: Array<{\r\n      id: number;\r\n      clockInTime: string;\r\n      images?: Maybe<Array<Maybe<string>>>;\r\n      staff: { name: string };\r\n    }>;\r\n  };\r\n};\r\n\r\nexport type JobLocationQueryVariables = Exact<{\r\n  id: Scalars['Float'];\r\n}>;\r\n\r\nexport type JobLocationQuery = {\r\n  job: { address: string; lat?: Maybe<number>; lng?: Maybe<number> };\r\n};\r\n\r\nexport type MyJobRequestsQueryVariables = Exact<{\r\n  status?: Maybe<JobStatus>;\r\n  search?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\nexport type MyJobRequestsQuery = {\r\n  me:\r\n    | {\r\n        jobRequests: Array<{\r\n          id: number;\r\n          address: string;\r\n          lat?: Maybe<number>;\r\n          lng?: Maybe<number>;\r\n          status: JobStatus;\r\n          requestDate: any;\r\n          poFile?: Maybe<string>;\r\n          notes?: Maybe<string>;\r\n          priority?: Maybe<string>;\r\n          equipment: Array<{ id: number; name: string }>;\r\n        }>;\r\n      }\r\n    | {};\r\n};\r\n\r\nexport type MyAssignedJobsQueryVariables = Exact<{\r\n  filter?: Maybe<JobFilter>;\r\n  search?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\nexport type MyAssignedJobsQuery = {\r\n  me:\r\n    | {\r\n        assignedJobs: Array<{\r\n          id: number;\r\n          address: string;\r\n          lat?: Maybe<number>;\r\n          lng?: Maybe<number>;\r\n          status: JobStatus;\r\n          requestDate: any;\r\n          priority?: Maybe<string>;\r\n          equipment: Array<{ id: number; name: string }>;\r\n        }>;\r\n      }\r\n    | {};\r\n};\r\n\r\nexport type TodaysAssignedJobQueryVariables = Exact<{ [key: string]: never }>;\r\n\r\nexport type TodaysAssignedJobQuery = {\r\n  me:\r\n    | {\r\n        todaysAssignedJob?: Maybe<{\r\n          id: number;\r\n          address: string;\r\n          lat?: Maybe<number>;\r\n          lng?: Maybe<number>;\r\n          status: JobStatus;\r\n          requestDate: any;\r\n          priority?: Maybe<string>;\r\n          equipment: Array<{ id: number; name: string }>;\r\n        }>;\r\n      }\r\n    | {};\r\n};\r\n\r\nexport type EquipmentQueryVariables = Exact<{ [key: string]: never }>;\r\n\r\nexport type EquipmentQuery = { equipment: Array<{ id: number; name: string }> };\r\n\r\nexport type CompaniesQueryVariables = Exact<{ [key: string]: never }>;\r\n\r\nexport type CompaniesQuery = {\r\n  companies?: Maybe<Array<{ name: string; id: number }>>;\r\n};\r\n\r\nexport type JobsQueryVariables = Exact<{\r\n  status?: Maybe<Array<Maybe<JobStatus>> | Maybe<JobStatus>>;\r\n  search?: Maybe<Scalars['String']>;\r\n  pagination?: Maybe<PaginationArgs>;\r\n  staff?: Maybe<Array<Scalars['Int']> | Scalars['Int']>;\r\n  filteredDate?: Maybe<FilteredDateArgs>;\r\n  orderBy?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\nexport type JobsQuery = {\r\n  jobs: {\r\n    pageInfo: {\r\n      nextPage?: Maybe<number>;\r\n      previousPage?: Maybe<number>;\r\n      hasNextPage: boolean;\r\n      hasPreviousPage: boolean;\r\n    };\r\n    items: Array<{\r\n      id: number;\r\n      address: string;\r\n      lat?: Maybe<number>;\r\n      lng?: Maybe<number>;\r\n      status: JobStatus;\r\n      requestDate: any;\r\n      priority?: Maybe<string>;\r\n      notes?: Maybe<string>;\r\n      builder: { name: string };\r\n      activity: Array<{ type: string; date: any }>;\r\n      equipment: Array<{ id: number; name: string }>;\r\n    }>;\r\n  };\r\n};\r\n\r\nexport type UsersQueryVariables = Exact<{\r\n  role?: Maybe<Scalars['String']>;\r\n  search?: Maybe<Scalars['String']>;\r\n  paginate?: Maybe<Scalars['Boolean']>;\r\n  pagination?: Maybe<PaginationArgs>;\r\n  orderBy?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\nexport type UsersQuery = {\r\n  users: {\r\n    items: Array<\r\n      | {\r\n          id: number;\r\n          name: string;\r\n          email: string;\r\n          role: { id: number; name: RoleType };\r\n          company?: Maybe<{ name: string }>;\r\n        }\r\n      | {\r\n          id: number;\r\n          name: string;\r\n          email: string;\r\n          role: { id: number; name: RoleType };\r\n          company?: Maybe<{ name: string }>;\r\n        }\r\n      | {\r\n          id: number;\r\n          name: string;\r\n          email: string;\r\n          role: { id: number; name: RoleType };\r\n          company?: Maybe<{ name: string }>;\r\n        }\r\n    >;\r\n    pageInfo: {\r\n      nextPage?: Maybe<number>;\r\n      previousPage?: Maybe<number>;\r\n      hasNextPage: boolean;\r\n      hasPreviousPage: boolean;\r\n    };\r\n  };\r\n};\r\n\r\nexport type TotalWorkedHoursQueryVariables = Exact<{\r\n  startDate?: Maybe<Scalars['String']>;\r\n  endDate?: Maybe<Scalars['String']>;\r\n  search?: Maybe<Scalars['String']>;\r\n  pagination?: Maybe<PaginationArgs>;\r\n  orderBy?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\nexport type TotalWorkedHoursQuery = {\r\n  report: {\r\n    totalWorkedHours: {\r\n      pageInfo: {\r\n        nextPage?: Maybe<number>;\r\n        previousPage?: Maybe<number>;\r\n        hasNextPage: boolean;\r\n        hasPreviousPage: boolean;\r\n      };\r\n      items: Array<{\r\n        name: string;\r\n        email: string;\r\n        totalWorkedHours?: Maybe<number>;\r\n      }>;\r\n    };\r\n  };\r\n};\r\n\r\nexport type JobsForDateQueryVariables = Exact<{\r\n  date: Scalars['String'];\r\n  search?: Maybe<Scalars['String']>;\r\n  pagination?: Maybe<PaginationArgs>;\r\n  orderBy?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\nexport type JobsForDateQuery = {\r\n  report: {\r\n    jobsForDate: {\r\n      pageInfo: {\r\n        nextPage?: Maybe<number>;\r\n        previousPage?: Maybe<number>;\r\n        hasNextPage: boolean;\r\n        hasPreviousPage: boolean;\r\n      };\r\n      items: Array<{\r\n        id: number;\r\n        address: string;\r\n        staff: Array<{ name: string }>;\r\n        builder: { name: string };\r\n        equipment: Array<{ name: string }>;\r\n      }>;\r\n    };\r\n  };\r\n};\r\n\r\nexport type JobsForDateFullListQueryVariables = Exact<{\r\n  date: Scalars['String'];\r\n  search?: Maybe<Scalars['String']>;\r\n  orderBy?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\nexport type JobsForDateFullListQuery = {\r\n  report: {\r\n    jobsForDateFullList: Array<\r\n      Maybe<{\r\n        id: number;\r\n        staff: string;\r\n        builder: string;\r\n        address: string;\r\n        equipment: string;\r\n      }>\r\n    >;\r\n  };\r\n};\r\n\r\nexport type StaffRolesQueryVariables = Exact<{ [key: string]: never }>;\r\n\r\nexport type StaffRolesQuery = {\r\n  staffRoles: Array<{ id: number; name: RoleType }>;\r\n};\r\n\r\nexport type UserQueryVariables = Exact<{\r\n  id: Scalars['Float'];\r\n}>;\r\n\r\nexport type UserQuery = {\r\n  user:\r\n    | {\r\n        name: string;\r\n        email: string;\r\n        company?: Maybe<{ name: string }>;\r\n        role: { id: number; name: RoleType };\r\n      }\r\n    | {\r\n        name: string;\r\n        email: string;\r\n        company?: Maybe<{ name: string }>;\r\n        role: { id: number; name: RoleType };\r\n      }\r\n    | {\r\n        name: string;\r\n        email: string;\r\n        company?: Maybe<{ name: string }>;\r\n        role: { id: number; name: RoleType };\r\n      };\r\n};\r\n\r\nexport type VerifyEmailMutationVariables = Exact<{\r\n  token: Scalars['String'];\r\n}>;\r\n\r\nexport type VerifyEmailMutation = { verifyEmail: { success: boolean } };\r\n\r\nexport type SettingsQueryVariables = Exact<{ [key: string]: never }>;\r\n\r\nexport type SettingsQuery = { settings: { minJobRequestDate: any } };\r\n\r\nexport type UpdateMyAccountMutationVariables = Exact<{\r\n  name: Scalars['String'];\r\n  email: Scalars['String'];\r\n  password?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\nexport type UpdateMyAccountMutation = {\r\n  updateMyAccount:\r\n    | { name: string; email: string }\r\n    | { name: string; email: string }\r\n    | { name: string; email: string };\r\n};\r\n\r\nexport const JobFragmentFragmentDoc = gql`\r\n  fragment JobFragment on Job {\r\n    id\r\n    address\r\n    lat\r\n    lng\r\n    status\r\n    requestDate\r\n    poFile\r\n    notes\r\n    priority\r\n    equipment {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\nexport const RegisterBuilderDocument = gql`\r\n  mutation RegisterBuilder($input: RegisterBuilderInput!) {\r\n    registerBuilder(input: $input) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RegisterBuilderGQL extends Apollo.Mutation<\r\n  RegisterBuilderMutation,\r\n  RegisterBuilderMutationVariables\r\n> {\r\n  document = RegisterBuilderDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const ForgotPasswordDocument = gql`\r\n  mutation ForgotPassword($email: String!) {\r\n    forgotPassword(email: $email) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ForgotPasswordGQL extends Apollo.Mutation<\r\n  ForgotPasswordMutation,\r\n  ForgotPasswordMutationVariables\r\n> {\r\n  document = ForgotPasswordDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const RegisterDocument = gql`\r\n  mutation Register($input: RegisterUserInput!) {\r\n    register(input: $input) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RegisterGQL extends Apollo.Mutation<\r\n  RegisterMutation,\r\n  RegisterMutationVariables\r\n> {\r\n  document = RegisterDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const RestorePasswordDocument = gql`\r\n  mutation RestorePassword($newPassword: String!, $token: String!) {\r\n    restorePassword(newPassword: $newPassword, token: $token) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RestorePasswordGQL extends Apollo.Mutation<\r\n  RestorePasswordMutation,\r\n  RestorePasswordMutationVariables\r\n> {\r\n  document = RestorePasswordDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const LoginDocument = gql`\r\n  mutation Login($input: LoginInput!) {\r\n    login(input: $input) {\r\n      role {\r\n        name\r\n      }\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginGQL extends Apollo.Mutation<\r\n  LoginMutation,\r\n  LoginMutationVariables\r\n> {\r\n  document = LoginDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const TokenLoginDocument = gql`\r\n  mutation TokenLogin($token: String!) {\r\n    tokenLogin(token: $token) {\r\n      role {\r\n        name\r\n      }\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TokenLoginGQL extends Apollo.Mutation<\r\n  TokenLoginMutation,\r\n  TokenLoginMutationVariables\r\n> {\r\n  document = TokenLoginDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const AddClockInDocument = gql`\r\n  mutation AddClockIn($input: AddClockInInput!) {\r\n    addClockIn(input: $input) {\r\n      id\r\n      equipment {\r\n        id\r\n        name\r\n      }\r\n      address\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AddClockInGQL extends Apollo.Mutation<\r\n  AddClockInMutation,\r\n  AddClockInMutationVariables\r\n> {\r\n  document = AddClockInDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const AddClockOffDocument = gql`\r\n  mutation AddClockOff($input: AddClockOffInput!) {\r\n    addClockOff(input: $input) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AddClockOffGQL extends Apollo.Mutation<\r\n  AddClockOffMutation,\r\n  AddClockOffMutationVariables\r\n> {\r\n  document = AddClockOffDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const CreateJobDocument = gql`\r\n  mutation CreateJob($input: CreateJobInput!) {\r\n    createJob(input: $input) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CreateJobGQL extends Apollo.Mutation<\r\n  CreateJobMutation,\r\n  CreateJobMutationVariables\r\n> {\r\n  document = CreateJobDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const UpdateJobDateDocument = gql`\r\n  mutation UpdateJobDate($input: UpdateJobDateInput!) {\r\n    updateJobDate(input: $input) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UpdateJobDateGQL extends Apollo.Mutation<\r\n  UpdateJobDateMutation,\r\n  UpdateJobDateMutationVariables\r\n> {\r\n  document = UpdateJobDateDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\n\r\nexport const UpdateJobDocument = gql`\r\n  mutation UpdateJob($input: UpdateJobInput!) {\r\n    updateJob(input: $input) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UpdateJobGQL extends Apollo.Mutation<\r\n  UpdateJobMutation,\r\n  UpdateJobMutationVariables\r\n> {\r\n  document = UpdateJobDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const CancelJobDocument = gql`\r\n  mutation CancelJob($input: Float!) {\r\n    cancelJob(jobId: $input) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CancelJobGQL extends Apollo.Mutation<\r\n  CancelJobMutation,\r\n  CancelJobMutationVariables\r\n> {\r\n  document = CancelJobDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const AssignToJobDocument = gql`\r\n  mutation AssignToJob($input: AssignToJobInput!) {\r\n    assignToJob(input: $input) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AssignToJobGQL extends Apollo.Mutation<\r\n  AssignToJobMutation,\r\n  AssignToJobMutationVariables\r\n> {\r\n  document = AssignToJobDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const LogoutDocument = gql`\r\n  mutation Logout {\r\n    logout {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LogoutGQL extends Apollo.Mutation<\r\n  LogoutMutation,\r\n  LogoutMutationVariables\r\n> {\r\n  document = LogoutDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const UpdateUserDocument = gql`\r\n  mutation UpdateUser($input: UpdateUserInput!) {\r\n    updateUser(input: $input) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UpdateUserGQL extends Apollo.Mutation<\r\n  UpdateUserMutation,\r\n  UpdateUserMutationVariables\r\n> {\r\n  document = UpdateUserDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const DeleteUserDocument = gql`\r\n  mutation DeleteUser($input: Float!) {\r\n    deleteUser(userId: $input) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeleteUserGQL extends Apollo.Mutation<\r\n  DeleteUserMutation,\r\n  DeleteUserMutationVariables\r\n> {\r\n  document = DeleteUserDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const HasClockedIntoJobDocument = gql`\r\n  query HasClockedIntoJob($id: Float!) {\r\n    me {\r\n      ... on Staff {\r\n        hasClockedIntoJob(id: $id)\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HasClockedIntoJobGQL extends Apollo.Query<\r\n  HasClockedIntoJobQuery,\r\n  HasClockedIntoJobQueryVariables\r\n> {\r\n  document = HasClockedIntoJobDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const MeDocument = gql`\r\n  query Me($status: JobStatus, $filter: JobFilter) {\r\n    me {\r\n      id\r\n      name\r\n      email\r\n      role {\r\n        name\r\n      }\r\n      ... on Builder {\r\n        jobRequests(status: $status) {\r\n          ...JobFragment\r\n        }\r\n      }\r\n      ... on Staff {\r\n        assignedJobs(filter: $filter) {\r\n          ...JobFragment\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${JobFragmentFragmentDoc}\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MeGQL extends Apollo.Query<MeQuery, MeQueryVariables> {\r\n  document = MeDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const JobDocument = gql`\r\n  query Job($id: Float!) {\r\n    job(id: $id) {\r\n      ...JobFragment\r\n    }\r\n  }\r\n  ${JobFragmentFragmentDoc}\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JobGQL extends Apollo.Query<JobQuery, JobQueryVariables> {\r\n  document = JobDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const ClockOffsDocument = gql`\r\n  query ClockOffs($id: Float!) {\r\n    job(id: $id) {\r\n      clockOffs {\r\n        id\r\n        clockOffTime\r\n        notes\r\n        staff {\r\n          name\r\n        }\r\n        images\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ClockOffsGQL extends Apollo.Query<\r\n  ClockOffsQuery,\r\n  ClockOffsQueryVariables\r\n> {\r\n  document = ClockOffsDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const ClockInsDocument = gql`\r\n  query ClockIns($id: Float!) {\r\n    job(id: $id) {\r\n      clockIns {\r\n        id\r\n        clockInTime\r\n        staff {\r\n          name\r\n        }\r\n        images\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ClockInsGQL extends Apollo.Query<\r\n  ClockInsQuery,\r\n  ClockInsQueryVariables\r\n> {\r\n  document = ClockInsDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const JobLocationDocument = gql`\r\n  query JobLocation($id: Float!) {\r\n    job(id: $id) {\r\n      address\r\n      lat\r\n      lng\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JobLocationGQL extends Apollo.Query<\r\n  JobLocationQuery,\r\n  JobLocationQueryVariables\r\n> {\r\n  document = JobLocationDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const MyJobRequestsDocument = gql`\r\n  query MyJobRequests($status: JobStatus, $search: String) {\r\n    me {\r\n      ... on Builder {\r\n        jobRequests(status: $status, search: $search) {\r\n          ...JobFragment\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${JobFragmentFragmentDoc}\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MyJobRequestsGQL extends Apollo.Query<\r\n  MyJobRequestsQuery,\r\n  MyJobRequestsQueryVariables\r\n> {\r\n  document = MyJobRequestsDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const MyAssignedJobsDocument = gql`\r\n  query MyAssignedJobs($filter: JobFilter, $search: String) {\r\n    me {\r\n      ... on Staff {\r\n        assignedJobs(filter: $filter, search: $search) {\r\n          id\r\n          address\r\n          lat\r\n          lng\r\n          status\r\n          requestDate\r\n          priority\r\n          equipment {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MyAssignedJobsGQL extends Apollo.Query<\r\n  MyAssignedJobsQuery,\r\n  MyAssignedJobsQueryVariables\r\n> {\r\n  document = MyAssignedJobsDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const TodaysAssignedJobDocument = gql`\r\n  query TodaysAssignedJob {\r\n    me {\r\n      ... on Staff {\r\n        todaysAssignedJob {\r\n          id\r\n          address\r\n          lat\r\n          lng\r\n          status\r\n          requestDate\r\n          priority\r\n          equipment {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TodaysAssignedJobGQL extends Apollo.Query<\r\n  TodaysAssignedJobQuery,\r\n  TodaysAssignedJobQueryVariables\r\n> {\r\n  document = TodaysAssignedJobDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const EquipmentDocument = gql`\r\n  query Equipment {\r\n    equipment {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EquipmentGQL extends Apollo.Query<\r\n  EquipmentQuery,\r\n  EquipmentQueryVariables\r\n> {\r\n  document = EquipmentDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const CompaniesDocument = gql`\r\n  query Companies {\r\n    companies {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CompaniesGQL extends Apollo.Query<\r\n  CompaniesQuery,\r\n  CompaniesQueryVariables\r\n> {\r\n  document = CompaniesDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const JobsDocument = gql`\r\n  query Jobs(\r\n    $status: [JobStatus]\r\n    $search: String\r\n    $pagination: PaginationArgs\r\n    $staff: [Int!]\r\n    $filteredDate: filteredDateArgs\r\n    $orderBy: String\r\n  ) {\r\n    jobs(\r\n      status: $status\r\n      search: $search\r\n      pagination: $pagination\r\n      filteredDate: $filteredDate\r\n      staff: $staff\r\n      orderBy: $orderBy\r\n    ) {\r\n      pageInfo {\r\n        nextPage\r\n        previousPage\r\n        hasNextPage\r\n        hasPreviousPage\r\n      }\r\n      items {\r\n        id\r\n        address\r\n        lat\r\n        lng\r\n        status\r\n        requestDate\r\n        priority\r\n        notes\r\n        builder {\r\n          name\r\n        }\r\n        activity {\r\n          type\r\n          date\r\n        }\r\n        equipment {\r\n          id\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JobsGQL extends Apollo.Query<JobsQuery, JobsQueryVariables> {\r\n  document = JobsDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const UsersDocument = gql`\r\n  query Users(\r\n    $role: String\r\n    $search: String\r\n    $paginate: Boolean\r\n    $pagination: PaginationArgs\r\n    $orderBy: String\r\n  ) {\r\n    users(\r\n      role: $role\r\n      search: $search\r\n      paginate: $paginate\r\n      pagination: $pagination\r\n      orderBy: $orderBy\r\n    ) {\r\n      items {\r\n        id\r\n        name\r\n        email\r\n        role {\r\n          id\r\n          name\r\n        }\r\n        company {\r\n          name\r\n        }\r\n      }\r\n      pageInfo {\r\n        nextPage\r\n        previousPage\r\n        hasNextPage\r\n        hasPreviousPage\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsersGQL extends Apollo.Query<UsersQuery, UsersQueryVariables> {\r\n  document = UsersDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const TotalWorkedHoursDocument = gql`\r\n  query TotalWorkedHours(\r\n    $startDate: String\r\n    $endDate: String\r\n    $search: String\r\n    $pagination: PaginationArgs\r\n    $orderBy: String\r\n  ) {\r\n    report {\r\n      totalWorkedHours(\r\n        startDate: $startDate\r\n        endDate: $endDate\r\n        search: $search\r\n        pagination: $pagination\r\n        orderBy: $orderBy\r\n      ) {\r\n        pageInfo {\r\n          nextPage\r\n          previousPage\r\n          hasNextPage\r\n          hasPreviousPage\r\n        }\r\n        items {\r\n          name\r\n          email\r\n          totalWorkedHours\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TotalWorkedHoursGQL extends Apollo.Query<\r\n  TotalWorkedHoursQuery,\r\n  TotalWorkedHoursQueryVariables\r\n> {\r\n  document = TotalWorkedHoursDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const JobsForDateDocument = gql`\r\n  query JobsForDate(\r\n    $date: String!\r\n    $search: String\r\n    $pagination: PaginationArgs\r\n    $orderBy: String\r\n  ) {\r\n    report {\r\n      jobsForDate(\r\n        date: $date\r\n        search: $search\r\n        pagination: $pagination\r\n        orderBy: $orderBy\r\n      ) {\r\n        pageInfo {\r\n          nextPage\r\n          previousPage\r\n          hasNextPage\r\n          hasPreviousPage\r\n        }\r\n        items {\r\n          id\r\n          staff {\r\n            name\r\n          }\r\n          builder {\r\n            name\r\n          }\r\n          address\r\n          equipment {\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JobsForDateGQL extends Apollo.Query<\r\n  JobsForDateQuery,\r\n  JobsForDateQueryVariables\r\n> {\r\n  document = JobsForDateDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const JobsForDateFullListDocument = gql`\r\n  query JobsForDateFullList($date: String!, $search: String, $orderBy: String) {\r\n    report {\r\n      jobsForDateFullList(date: $date, search: $search, orderBy: $orderBy) {\r\n        id\r\n        staff\r\n        builder\r\n        address\r\n        equipment\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JobsForDateFullListGQL extends Apollo.Query<\r\n  JobsForDateFullListQuery,\r\n  JobsForDateFullListQueryVariables\r\n> {\r\n  document = JobsForDateFullListDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const StaffRolesDocument = gql`\r\n  query StaffRoles {\r\n    staffRoles {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StaffRolesGQL extends Apollo.Query<\r\n  StaffRolesQuery,\r\n  StaffRolesQueryVariables\r\n> {\r\n  document = StaffRolesDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const UserDocument = gql`\r\n  query User($id: Float!) {\r\n    user(id: $id) {\r\n      name\r\n      email\r\n      company {\r\n        name\r\n      }\r\n      role {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserGQL extends Apollo.Query<UserQuery, UserQueryVariables> {\r\n  document = UserDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const VerifyEmailDocument = gql`\r\n  mutation VerifyEmail($token: String!) {\r\n    verifyEmail(token: $token) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class VerifyEmailGQL extends Apollo.Mutation<\r\n  VerifyEmailMutation,\r\n  VerifyEmailMutationVariables\r\n> {\r\n  document = VerifyEmailDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const SettingsDocument = gql`\r\n  query Settings {\r\n    settings {\r\n      minJobRequestDate\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SettingsGQL extends Apollo.Query<\r\n  SettingsQuery,\r\n  SettingsQueryVariables\r\n> {\r\n  document = SettingsDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\nexport const UpdateMyAccountDocument = gql`\r\n  mutation UpdateMyAccount($name: String!, $email: String!, $password: String) {\r\n    updateMyAccount(name: $name, email: $email, password: $password) {\r\n      name\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UpdateMyAccountGQL extends Apollo.Mutation<\r\n  UpdateMyAccountMutation,\r\n  UpdateMyAccountMutationVariables\r\n> {\r\n  document = UpdateMyAccountDocument;\r\n\r\n  constructor(apollo: Apollo.Apollo) {\r\n    super(apollo);\r\n  }\r\n}\r\n\r\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\r\n\r\ninterface WatchQueryOptionsAlone<V>\r\n  extends Omit<ApolloCore.WatchQueryOptions<V>, 'query' | 'variables'> {}\r\n\r\ninterface QueryOptionsAlone<V>\r\n  extends Omit<ApolloCore.QueryOptions<V>, 'query' | 'variables'> {}\r\n\r\ninterface MutationOptionsAlone<T, V>\r\n  extends Omit<ApolloCore.MutationOptions<T, V>, 'mutation' | 'variables'> {}\r\n\r\ninterface SubscriptionOptionsAlone<V>\r\n  extends Omit<ApolloCore.SubscriptionOptions<V>, 'query' | 'variables'> {}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ApolloAngularSDK {\r\n  constructor(\r\n    private registerBuilderGql: RegisterBuilderGQL,\r\n    private forgotPasswordGql: ForgotPasswordGQL,\r\n    private registerGql: RegisterGQL,\r\n    private restorePasswordGql: RestorePasswordGQL,\r\n    private loginGql: LoginGQL,\r\n    private tokenLoginGql: TokenLoginGQL,\r\n    private addClockInGql: AddClockInGQL,\r\n    private addClockOffGql: AddClockOffGQL,\r\n    private createJobGql: CreateJobGQL,\r\n    private updateJobGql: UpdateJobGQL,\r\n    private updateJobDateGql: UpdateJobDateGQL,\r\n    private cancelJobGql: CancelJobGQL,\r\n    private assignToJobGql: AssignToJobGQL,\r\n    private logoutGql: LogoutGQL,\r\n    private updateUserGql: UpdateUserGQL,\r\n    private deleteUserGql: DeleteUserGQL,\r\n    private hasClockedIntoJobGql: HasClockedIntoJobGQL,\r\n    private meGql: MeGQL,\r\n    private jobGql: JobGQL,\r\n    private clockOffsGql: ClockOffsGQL,\r\n    private clockInsGql: ClockInsGQL,\r\n    private jobLocationGql: JobLocationGQL,\r\n    private myJobRequestsGql: MyJobRequestsGQL,\r\n    private myAssignedJobsGql: MyAssignedJobsGQL,\r\n    private todaysAssignedJobGql: TodaysAssignedJobGQL,\r\n    private equipmentGql: EquipmentGQL,\r\n    private companiesGql: CompaniesGQL,\r\n    private jobsGql: JobsGQL,\r\n    private usersGql: UsersGQL,\r\n    private totalWorkedHoursGql: TotalWorkedHoursGQL,\r\n    private jobsForDateGql: JobsForDateGQL,\r\n    private jobsForDateFullListGql: JobsForDateFullListGQL,\r\n    private staffRolesGql: StaffRolesGQL,\r\n    private userGql: UserGQL,\r\n    private verifyEmailGql: VerifyEmailGQL,\r\n    private settingsGql: SettingsGQL,\r\n    private updateMyAccountGql: UpdateMyAccountGQL,\r\n  ) {}\r\n\r\n  registerBuilder(\r\n    variables: RegisterBuilderMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      RegisterBuilderMutation,\r\n      RegisterBuilderMutationVariables\r\n    >,\r\n  ) {\r\n    return this.registerBuilderGql.mutate(variables, options);\r\n  }\r\n\r\n  forgotPassword(\r\n    variables: ForgotPasswordMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      ForgotPasswordMutation,\r\n      ForgotPasswordMutationVariables\r\n    >,\r\n  ) {\r\n    return this.forgotPasswordGql.mutate(variables, options);\r\n  }\r\n\r\n  register(\r\n    variables: RegisterMutationVariables,\r\n    options?: MutationOptionsAlone<RegisterMutation, RegisterMutationVariables>,\r\n  ) {\r\n    return this.registerGql.mutate(variables, options);\r\n  }\r\n\r\n  restorePassword(\r\n    variables: RestorePasswordMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      RestorePasswordMutation,\r\n      RestorePasswordMutationVariables\r\n    >,\r\n  ) {\r\n    return this.restorePasswordGql.mutate(variables, options);\r\n  }\r\n\r\n  login(\r\n    variables: LoginMutationVariables,\r\n    options?: MutationOptionsAlone<LoginMutation, LoginMutationVariables>,\r\n  ) {\r\n    return this.loginGql.mutate(variables, options);\r\n  }\r\n\r\n  tokenLogin(\r\n    variables: TokenLoginMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      TokenLoginMutation,\r\n      TokenLoginMutationVariables\r\n    >,\r\n  ) {\r\n    return this.tokenLoginGql.mutate(variables, options);\r\n  }\r\n\r\n  addClockIn(\r\n    variables: AddClockInMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      AddClockInMutation,\r\n      AddClockInMutationVariables\r\n    >,\r\n  ) {\r\n    return this.addClockInGql.mutate(variables, options);\r\n  }\r\n\r\n  addClockOff(\r\n    variables: AddClockOffMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      AddClockOffMutation,\r\n      AddClockOffMutationVariables\r\n    >,\r\n  ) {\r\n    return this.addClockOffGql.mutate(variables, options);\r\n  }\r\n\r\n  createJob(\r\n    variables: CreateJobMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      CreateJobMutation,\r\n      CreateJobMutationVariables\r\n    >,\r\n  ) {\r\n    return this.createJobGql.mutate(variables, options);\r\n  }\r\n\r\n  updateJob(\r\n    variables: UpdateJobMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      UpdateJobMutation,\r\n      UpdateJobMutationVariables\r\n    >,\r\n  ) {\r\n    return this.updateJobGql.mutate(variables, options);\r\n  }\r\n  updateJobDate(\r\n    variables: UpdateJobDateMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      UpdateJobDateMutation,\r\n      UpdateJobDateMutationVariables\r\n    >,\r\n  ) {\r\n    return this.updateJobDateGql.mutate(variables, options);\r\n  }\r\n  cancelJob(\r\n    variables: CancelJobMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      CancelJobMutation,\r\n      CancelJobMutationVariables\r\n    >,\r\n  ) {\r\n    return this.cancelJobGql.mutate(variables, options);\r\n  }\r\n\r\n  assignToJob(\r\n    variables: AssignToJobMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      AssignToJobMutation,\r\n      AssignToJobMutationVariables\r\n    >,\r\n  ) {\r\n    return this.assignToJobGql.mutate(variables, options);\r\n  }\r\n\r\n  logout(\r\n    variables?: LogoutMutationVariables,\r\n    options?: MutationOptionsAlone<LogoutMutation, LogoutMutationVariables>,\r\n  ) {\r\n    return this.logoutGql.mutate(variables, options);\r\n  }\r\n\r\n  updateUser(\r\n    variables: UpdateUserMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      UpdateUserMutation,\r\n      UpdateUserMutationVariables\r\n    >,\r\n  ) {\r\n    return this.updateUserGql.mutate(variables, options);\r\n  }\r\n\r\n  deleteUser(\r\n    variables: DeleteUserMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      DeleteUserMutation,\r\n      DeleteUserMutationVariables\r\n    >,\r\n  ) {\r\n    return this.deleteUserGql.mutate(variables, options);\r\n  }\r\n\r\n  hasClockedIntoJob(\r\n    variables: HasClockedIntoJobQueryVariables,\r\n    options?: QueryOptionsAlone<HasClockedIntoJobQueryVariables>,\r\n  ) {\r\n    return this.hasClockedIntoJobGql.fetch(variables, options);\r\n  }\r\n\r\n  hasClockedIntoJobWatch(\r\n    variables: HasClockedIntoJobQueryVariables,\r\n    options?: WatchQueryOptionsAlone<HasClockedIntoJobQueryVariables>,\r\n  ) {\r\n    return this.hasClockedIntoJobGql.watch(variables, options);\r\n  }\r\n\r\n  me(\r\n    variables?: MeQueryVariables,\r\n    options?: QueryOptionsAlone<MeQueryVariables>,\r\n  ) {\r\n    return this.meGql.fetch(variables, options);\r\n  }\r\n\r\n  meWatch(\r\n    variables?: MeQueryVariables,\r\n    options?: WatchQueryOptionsAlone<MeQueryVariables>,\r\n  ) {\r\n    return this.meGql.watch(variables, options);\r\n  }\r\n\r\n  job(\r\n    variables: JobQueryVariables,\r\n    options?: QueryOptionsAlone<JobQueryVariables>,\r\n  ) {\r\n    return this.jobGql.fetch(variables, options);\r\n  }\r\n\r\n  jobWatch(\r\n    variables: JobQueryVariables,\r\n    options?: WatchQueryOptionsAlone<JobQueryVariables>,\r\n  ) {\r\n    return this.jobGql.watch(variables, options);\r\n  }\r\n\r\n  clockOffs(\r\n    variables: ClockOffsQueryVariables,\r\n    options?: QueryOptionsAlone<ClockOffsQueryVariables>,\r\n  ) {\r\n    return this.clockOffsGql.fetch(variables, options);\r\n  }\r\n\r\n  clockOffsWatch(\r\n    variables: ClockOffsQueryVariables,\r\n    options?: WatchQueryOptionsAlone<ClockOffsQueryVariables>,\r\n  ) {\r\n    return this.clockOffsGql.watch(variables, options);\r\n  }\r\n\r\n  clockIns(\r\n    variables: ClockInsQueryVariables,\r\n    options?: QueryOptionsAlone<ClockInsQueryVariables>,\r\n  ) {\r\n    return this.clockInsGql.fetch(variables, options);\r\n  }\r\n\r\n  clockInsWatch(\r\n    variables: ClockInsQueryVariables,\r\n    options?: WatchQueryOptionsAlone<ClockInsQueryVariables>,\r\n  ) {\r\n    return this.clockInsGql.watch(variables, options);\r\n  }\r\n\r\n  jobLocation(\r\n    variables: JobLocationQueryVariables,\r\n    options?: QueryOptionsAlone<JobLocationQueryVariables>,\r\n  ) {\r\n    return this.jobLocationGql.fetch(variables, options);\r\n  }\r\n\r\n  jobLocationWatch(\r\n    variables: JobLocationQueryVariables,\r\n    options?: WatchQueryOptionsAlone<JobLocationQueryVariables>,\r\n  ) {\r\n    return this.jobLocationGql.watch(variables, options);\r\n  }\r\n\r\n  myJobRequests(\r\n    variables?: MyJobRequestsQueryVariables,\r\n    options?: QueryOptionsAlone<MyJobRequestsQueryVariables>,\r\n  ) {\r\n    return this.myJobRequestsGql.fetch(variables, options);\r\n  }\r\n\r\n  myJobRequestsWatch(\r\n    variables?: MyJobRequestsQueryVariables,\r\n    options?: WatchQueryOptionsAlone<MyJobRequestsQueryVariables>,\r\n  ) {\r\n    return this.myJobRequestsGql.watch(variables, options);\r\n  }\r\n\r\n  myAssignedJobs(\r\n    variables?: MyAssignedJobsQueryVariables,\r\n    options?: QueryOptionsAlone<MyAssignedJobsQueryVariables>,\r\n  ) {\r\n    return this.myAssignedJobsGql.fetch(variables, options);\r\n  }\r\n\r\n  myAssignedJobsWatch(\r\n    variables?: MyAssignedJobsQueryVariables,\r\n    options?: WatchQueryOptionsAlone<MyAssignedJobsQueryVariables>,\r\n  ) {\r\n    return this.myAssignedJobsGql.watch(variables, options);\r\n  }\r\n\r\n  todaysAssignedJob(\r\n    variables?: TodaysAssignedJobQueryVariables,\r\n    options?: QueryOptionsAlone<TodaysAssignedJobQueryVariables>,\r\n  ) {\r\n    return this.todaysAssignedJobGql.fetch(variables, options);\r\n  }\r\n\r\n  todaysAssignedJobWatch(\r\n    variables?: TodaysAssignedJobQueryVariables,\r\n    options?: WatchQueryOptionsAlone<TodaysAssignedJobQueryVariables>,\r\n  ) {\r\n    return this.todaysAssignedJobGql.watch(variables, options);\r\n  }\r\n\r\n  equipment(\r\n    variables?: EquipmentQueryVariables,\r\n    options?: QueryOptionsAlone<EquipmentQueryVariables>,\r\n  ) {\r\n    return this.equipmentGql.fetch(variables, options);\r\n  }\r\n\r\n  equipmentWatch(\r\n    variables?: EquipmentQueryVariables,\r\n    options?: WatchQueryOptionsAlone<EquipmentQueryVariables>,\r\n  ) {\r\n    return this.equipmentGql.watch(variables, options);\r\n  }\r\n\r\n  companies(\r\n    variables?: CompaniesQueryVariables,\r\n    options?: QueryOptionsAlone<CompaniesQueryVariables>,\r\n  ) {\r\n    return this.companiesGql.fetch(variables, options);\r\n  }\r\n\r\n  companiesWatch(\r\n    variables?: CompaniesQueryVariables,\r\n    options?: WatchQueryOptionsAlone<CompaniesQueryVariables>,\r\n  ) {\r\n    return this.companiesGql.watch(variables, options);\r\n  }\r\n\r\n  jobs(\r\n    variables?: JobsQueryVariables,\r\n    options?: QueryOptionsAlone<JobsQueryVariables>,\r\n  ) {\r\n    return this.jobsGql.fetch(variables, options);\r\n  }\r\n\r\n  jobsWatch(\r\n    variables?: JobsQueryVariables,\r\n    options?: WatchQueryOptionsAlone<JobsQueryVariables>,\r\n  ) {\r\n    return this.jobsGql.watch(variables, options);\r\n  }\r\n\r\n  users(\r\n    variables?: UsersQueryVariables,\r\n    options?: QueryOptionsAlone<UsersQueryVariables>,\r\n  ) {\r\n    return this.usersGql.fetch(variables, options);\r\n  }\r\n\r\n  usersWatch(\r\n    variables?: UsersQueryVariables,\r\n    options?: WatchQueryOptionsAlone<UsersQueryVariables>,\r\n  ) {\r\n    return this.usersGql.watch(variables, options);\r\n  }\r\n\r\n  totalWorkedHours(\r\n    variables?: TotalWorkedHoursQueryVariables,\r\n    options?: QueryOptionsAlone<TotalWorkedHoursQueryVariables>,\r\n  ) {\r\n    return this.totalWorkedHoursGql.fetch(variables, options);\r\n  }\r\n\r\n  totalWorkedHoursWatch(\r\n    variables?: TotalWorkedHoursQueryVariables,\r\n    options?: WatchQueryOptionsAlone<TotalWorkedHoursQueryVariables>,\r\n  ) {\r\n    return this.totalWorkedHoursGql.watch(variables, options);\r\n  }\r\n\r\n  jobsForDate(\r\n    variables: JobsForDateQueryVariables,\r\n    options?: QueryOptionsAlone<JobsForDateQueryVariables>,\r\n  ) {\r\n    return this.jobsForDateGql.fetch(variables, options);\r\n  }\r\n\r\n  jobsForDateWatch(\r\n    variables: JobsForDateQueryVariables,\r\n    options?: WatchQueryOptionsAlone<JobsForDateQueryVariables>,\r\n  ) {\r\n    return this.jobsForDateGql.watch(variables, options);\r\n  }\r\n\r\n  jobsForDateFullList(\r\n    variables: JobsForDateFullListQueryVariables,\r\n    options?: QueryOptionsAlone<JobsForDateFullListQueryVariables>,\r\n  ) {\r\n    return this.jobsForDateFullListGql.fetch(variables, options);\r\n  }\r\n\r\n  jobsForDateFullListWatch(\r\n    variables: JobsForDateFullListQueryVariables,\r\n    options?: WatchQueryOptionsAlone<JobsForDateFullListQueryVariables>,\r\n  ) {\r\n    return this.jobsForDateFullListGql.watch(variables, options);\r\n  }\r\n\r\n  staffRoles(\r\n    variables?: StaffRolesQueryVariables,\r\n    options?: QueryOptionsAlone<StaffRolesQueryVariables>,\r\n  ) {\r\n    return this.staffRolesGql.fetch(variables, options);\r\n  }\r\n\r\n  staffRolesWatch(\r\n    variables?: StaffRolesQueryVariables,\r\n    options?: WatchQueryOptionsAlone<StaffRolesQueryVariables>,\r\n  ) {\r\n    return this.staffRolesGql.watch(variables, options);\r\n  }\r\n\r\n  user(\r\n    variables: UserQueryVariables,\r\n    options?: QueryOptionsAlone<UserQueryVariables>,\r\n  ) {\r\n    return this.userGql.fetch(variables, options);\r\n  }\r\n\r\n  userWatch(\r\n    variables: UserQueryVariables,\r\n    options?: WatchQueryOptionsAlone<UserQueryVariables>,\r\n  ) {\r\n    return this.userGql.watch(variables, options);\r\n  }\r\n\r\n  verifyEmail(\r\n    variables: VerifyEmailMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      VerifyEmailMutation,\r\n      VerifyEmailMutationVariables\r\n    >,\r\n  ) {\r\n    return this.verifyEmailGql.mutate(variables, options);\r\n  }\r\n\r\n  settings(\r\n    variables?: SettingsQueryVariables,\r\n    options?: QueryOptionsAlone<SettingsQueryVariables>,\r\n  ) {\r\n    return this.settingsGql.fetch(variables, options);\r\n  }\r\n\r\n  settingsWatch(\r\n    variables?: SettingsQueryVariables,\r\n    options?: WatchQueryOptionsAlone<SettingsQueryVariables>,\r\n  ) {\r\n    return this.settingsGql.watch(variables, options);\r\n  }\r\n\r\n  updateMyAccount(\r\n    variables: UpdateMyAccountMutationVariables,\r\n    options?: MutationOptionsAlone<\r\n      UpdateMyAccountMutation,\r\n      UpdateMyAccountMutationVariables\r\n    >,\r\n  ) {\r\n    return this.updateMyAccountGql.mutate(variables, options);\r\n  }\r\n}\r\n","module.exports = require(\"@angular/core\");","module.exports = require(\"@casl/ability\");","module.exports = require(\"@hapi/joi\");","module.exports = require(\"@nestjs/bull\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/graphql\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/schedule\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"apollo-angular\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"bcrypt\");","module.exports = require(\"bull\");","module.exports = require(\"canvas\");","module.exports = require(\"class-transformer\");","module.exports = require(\"connect-redis\");","module.exports = require(\"crypto\");","module.exports = require(\"express-session\");","module.exports = require(\"fs\");","module.exports = require(\"graphql-passport\");","module.exports = require(\"handlebars\");","module.exports = require(\"image-data-uri\");","module.exports = require(\"nest-winston\");","module.exports = require(\"nodemailer\");","module.exports = require(\"passport\");","module.exports = require(\"path\");","module.exports = require(\"redis\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"winston\");"],"sourceRoot":""}